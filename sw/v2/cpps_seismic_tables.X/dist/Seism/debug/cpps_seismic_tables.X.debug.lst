

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Jan 26 15:37:44 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  001A82                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _data
    50  001A82  61                 	db	97
    51                           
    52                           	psect	smallconst
    53  001000                     __psmallconst:
    54                           	opt stack 0
    55  001000  00                 	db	0
    56  001001                     _dpowers:
    57                           	opt stack 0
    58  001001  0001               	dw	1
    59  001003  000A               	dw	10
    60  001005  0064               	dw	100
    61  001007  03E8               	dw	1000
    62  001009  2710               	dw	10000
    63  00100B                     __end_of_dpowers:
    64                           	opt stack 0
    65  0000                     _ADCON0	set	4034
    66  0000                     _ADCON1	set	4033
    67  0000                     _ADCON2bits	set	4032
    68  0000                     _ANSELAbits	set	3896
    69  0000                     _ANSELC	set	3898
    70  0000                     _ANSELCbits	set	3898
    71  0000                     _ANSELEbits	set	3900
    72  0000                     _BAUDCON1bits	set	4024
    73  0000                     _BAUDCON2bits	set	3952
    74  0000                     _CCP1CON	set	4029
    75  0000                     _CCPR1L	set	4030
    76  0000                     _EEADR	set	4009
    77  0000                     _EEADRH	set	4010
    78  0000                     _EECON1bits	set	4006
    79  0000                     _EECON2	set	4007
    80  0000                     _EEDATA	set	4008
    81  0000                     _INTCONbits	set	4082
    82  0000                     _OSCCONbits	set	4051
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIE3bits	set	4003
    85  0000                     _PR2	set	4027
    86  0000                     _PR4	set	3922
    87  0000                     _RCREG1	set	4014
    88  0000                     _RCREG2	set	3956
    89  0000                     _RCSTA1bits	set	4011
    90  0000                     _RCSTA2bits	set	3953
    91  0000                     _SPBRG1	set	4015
    92  0000                     _SPBRG2	set	3957
    93  0000                     _SSP1ADD	set	4040
    94  0000                     _SSP1BUF	set	4041
    95  0000                     _SSP1CON1	set	4038
    96  0000                     _SSP1CON2	set	4037
    97  0000                     _SSP1CON2bits	set	4037
    98  0000                     _SSP1STAT	set	4039
    99  0000                     _SSP2ADD	set	3950
   100  0000                     _SSP2BUF	set	3951
   101  0000                     _SSP2CON1	set	3948
   102  0000                     _SSP2CON2	set	3947
   103  0000                     _SSP2CON2bits	set	3947
   104  0000                     _SSP2STAT	set	3949
   105  0000                     _SSP2STATbits	set	3949
   106  0000                     _T2CONbits	set	4026
   107  0000                     _T4CON	set	3921
   108  0000                     _TRISAbits	set	3986
   109  0000                     _TRISBbits	set	3987
   110  0000                     _TRISCbits	set	3988
   111  0000                     _TRISEbits	set	3990
   112  0000                     _TX1REG	set	4013
   113  0000                     _TX2REG	set	3955
   114  0000                     _TXREG1	set	4013
   115  0000                     _TXREG2	set	3955
   116  0000                     _TXSTA1bits	set	4012
   117  0000                     _TXSTA2bits	set	3954
   118  0000                     _VREFCON0bits	set	3906
   119  0000                     _GIE	set	32663
   120  0000                     _IPEN	set	32391
   121  0000                     _PEIE	set	32662
   122  0000                     _PLLEN	set	31966
   123  0000                     _RC1IE	set	31981
   124  0000                     _RC1IF	set	31989
   125  0000                     _RC2IF	set	32037
   126  0000                     _RCIE	set	31981
   127  0000                     _TRMT1	set	32097
   128  0000                     _TRMT2	set	31633
   129  0000                     _TX1IF	set	31988
   130  0000                     _TX2IF	set	32036
   131  00100B                     __stringdata:
   132                           	opt stack 0
   133  00100B  59                 	db	89	;'Y'
   134  00100C  6F                 	db	111	;'o'
   135  00100D  75                 	db	117	;'u'
   136  00100E  20                 	db	32
   137  00100F  74                 	db	116	;'t'
   138  001010  72                 	db	114	;'r'
   139  001011  79                 	db	121	;'y'
   140  001012  20                 	db	32
   141  001013  74                 	db	116	;'t'
   142  001014  6F                 	db	111	;'o'
   143  001015  20                 	db	32
   144  001016  61                 	db	97	;'a'
   145  001017  63                 	db	99	;'c'
   146  001018  63                 	db	99	;'c'
   147  001019  65                 	db	101	;'e'
   148  00101A  73                 	db	115	;'s'
   149  00101B  73                 	db	115	;'s'
   150  00101C  20                 	db	32
   151  00101D  61                 	db	97	;'a'
   152  00101E  6E                 	db	110	;'n'
   153  00101F  20                 	db	32
   154  001020  61                 	db	97	;'a'
   155  001021  64                 	db	100	;'d'
   156  001022  64                 	db	100	;'d'
   157  001023  72                 	db	114	;'r'
   158  001024  65                 	db	101	;'e'
   159  001025  73                 	db	115	;'s'
   160  001026  73                 	db	115	;'s'
   161  001027  20                 	db	32
   162  001028  77                 	db	119	;'w'
   163  001029  68                 	db	104	;'h'
   164  00102A  69                 	db	105	;'i'
   165  00102B  63                 	db	99	;'c'
   166  00102C  68                 	db	104	;'h'
   167  00102D  20                 	db	32
   168  00102E  64                 	db	100	;'d'
   169  00102F  6F                 	db	111	;'o'
   170  001030  65                 	db	101	;'e'
   171  001031  73                 	db	115	;'s'
   172  001032  6E                 	db	110	;'n'
   173  001033  27                 	db	39
   174  001034  74                 	db	116	;'t'
   175  001035  20                 	db	32
   176  001036  65                 	db	101	;'e'
   177  001037  78                 	db	120	;'x'
   178  001038  69                 	db	105	;'i'
   179  001039  73                 	db	115	;'s'
   180  00103A  74                 	db	116	;'t'
   181  00103B  2E                 	db	46
   182  00103C  00                 	db	0
   183  00103D                     STR_1:
   184  00103D  57                 	db	87	;'W'
   185  00103E  65                 	db	101	;'e'
   186  00103F  6C                 	db	108	;'l'
   187  001040  63                 	db	99	;'c'
   188  001041  6F                 	db	111	;'o'
   189  001042  6D                 	db	109	;'m'
   190  001043  65                 	db	101	;'e'
   191  001044  20                 	db	32
   192  001045  74                 	db	116	;'t'
   193  001046  6F                 	db	111	;'o'
   194  001047  20                 	db	32
   195  001048  74                 	db	116	;'t'
   196  001049  68                 	db	104	;'h'
   197  00104A  65                 	db	101	;'e'
   198  00104B  20                 	db	32
   199  00104C  53                 	db	83	;'S'
   200  00104D  65                 	db	101	;'e'
   201  00104E  69                 	db	105	;'i'
   202  00104F  73                 	db	115	;'s'
   203  001050  6D                 	db	109	;'m'
   204  001051  69                 	db	105	;'i'
   205  001052  63                 	db	99	;'c'
   206  001053  20                 	db	32
   207  001054  74                 	db	116	;'t'
   208  001055  61                 	db	97	;'a'
   209  001056  62                 	db	98	;'b'
   210  001057  6C                 	db	108	;'l'
   211  001058  65                 	db	101	;'e'
   212  001059  20                 	db	32
   213  00105A  53                 	db	83	;'S'
   214  00105B  57                 	db	87	;'W'
   215  00105C  00                 	db	0
   216  00105D  45                 	db	69	;'E'
   217  00105E  45                 	db	69	;'E'
   218  00105F  50                 	db	80	;'P'
   219  001060  52                 	db	82	;'R'
   220  001061  4F                 	db	79	;'O'
   221  001062  4D                 	db	77	;'M'
   222  001063  20                 	db	32
   223  001064  77                 	db	119	;'w'
   224  001065  72                 	db	114	;'r'
   225  001066  69                 	db	105	;'i'
   226  001067  74                 	db	116	;'t'
   227  001068  65                 	db	101	;'e'
   228  001069  20                 	db	32
   229  00106A  70                 	db	112	;'p'
   230  00106B  72                 	db	114	;'r'
   231  00106C  6F                 	db	111	;'o'
   232  00106D  63                 	db	99	;'c'
   233  00106E  65                 	db	101	;'e'
   234  00106F  73                 	db	115	;'s'
   235  001070  73                 	db	115	;'s'
   236  001071  20                 	db	32
   237  001072  66                 	db	102	;'f'
   238  001073  61                 	db	97	;'a'
   239  001074  69                 	db	105	;'i'
   240  001075  6C                 	db	108	;'l'
   241  001076  65                 	db	101	;'e'
   242  001077  64                 	db	100	;'d'
   243  001078  2E                 	db	46
   244  001079  00                 	db	0
   245  00107A  52                 	db	82	;'R'
   246  00107B  65                 	db	101	;'e'
   247  00107C  61                 	db	97	;'a'
   248  00107D  64                 	db	100	;'d'
   249  00107E  69                 	db	105	;'i'
   250  00107F  6E                 	db	110	;'n'
   251  001080  67                 	db	103	;'g'
   252  001081  20                 	db	32
   253  001082  64                 	db	100	;'d'
   254  001083  61                 	db	97	;'a'
   255  001084  74                 	db	116	;'t'
   256  001085  61                 	db	97	;'a'
   257  001086  20                 	db	32
   258  001087  66                 	db	102	;'f'
   259  001088  72                 	db	114	;'r'
   260  001089  6F                 	db	111	;'o'
   261  00108A  6D                 	db	109	;'m'
   262  00108B  20                 	db	32
   263  00108C  45                 	db	69	;'E'
   264  00108D  45                 	db	69	;'E'
   265  00108E  50                 	db	80	;'P'
   266  00108F  52                 	db	82	;'R'
   267  001090  4F                 	db	79	;'O'
   268  001091  4D                 	db	77	;'M'
   269  001092  2E                 	db	46
   270  001093  2E                 	db	46
   271  001094  2E                 	db	46
   272  001095  00                 	db	0
   273  001096  46                 	db	70	;'F'
   274  001097  69                 	db	105	;'i'
   275  001098  6C                 	db	108	;'l'
   276  001099  6C                 	db	108	;'l'
   277  00109A  69                 	db	105	;'i'
   278  00109B  6E                 	db	110	;'n'
   279  00109C  67                 	db	103	;'g'
   280  00109D  20                 	db	32
   281  00109E  45                 	db	69	;'E'
   282  00109F  45                 	db	69	;'E'
   283  0010A0  50                 	db	80	;'P'
   284  0010A1  52                 	db	82	;'R'
   285  0010A2  4F                 	db	79	;'O'
   286  0010A3  4D                 	db	77	;'M'
   287  0010A4  20                 	db	32
   288  0010A5  77                 	db	119	;'w'
   289  0010A6  69                 	db	105	;'i'
   290  0010A7  74                 	db	116	;'t'
   291  0010A8  68                 	db	104	;'h'
   292  0010A9  20                 	db	32
   293  0010AA  64                 	db	100	;'d'
   294  0010AB  61                 	db	97	;'a'
   295  0010AC  74                 	db	116	;'t'
   296  0010AD  61                 	db	97	;'a'
   297  0010AE  2E                 	db	46
   298  0010AF  2E                 	db	46
   299  0010B0  2E                 	db	46
   300  0010B1  00                 	db	0
   301  0010B2                     STR_3:
   302  0010B2  52                 	db	82	;'R'
   303  0010B3  65                 	db	101	;'e'
   304  0010B4  61                 	db	97	;'a'
   305  0010B5  64                 	db	100	;'d'
   306  0010B6  69                 	db	105	;'i'
   307  0010B7  6E                 	db	110	;'n'
   308  0010B8  67                 	db	103	;'g'
   309  0010B9  20                 	db	32
   310  0010BA  66                 	db	102	;'f'
   311  0010BB  69                 	db	105	;'i'
   312  0010BC  6C                 	db	108	;'l'
   313  0010BD  6C                 	db	108	;'l'
   314  0010BE  65                 	db	101	;'e'
   315  0010BF  64                 	db	100	;'d'
   316  0010C0  20                 	db	32
   317  0010C1  45                 	db	69	;'E'
   318  0010C2  45                 	db	69	;'E'
   319  0010C3  50                 	db	80	;'P'
   320  0010C4  52                 	db	82	;'R'
   321  0010C5  4F                 	db	79	;'O'
   322  0010C6  4D                 	db	77	;'M'
   323  0010C7  00                 	db	0
   324  0010C8                     STR_2:
   325  0010C8  2D                 	db	45
   326  0010C9  2D                 	db	45
   327  0010CA  2D                 	db	45
   328  0010CB  2D                 	db	45
   329  0010CC  2D                 	db	45
   330  0010CD  2D                 	db	45
   331  0010CE  2D                 	db	45
   332  0010CF  2D                 	db	45
   333  0010D0  2D                 	db	45
   334  0010D1  2D                 	db	45
   335  0010D2  2D                 	db	45
   336  0010D3  2D                 	db	45
   337  0010D4  2D                 	db	45
   338  0010D5  2D                 	db	45
   339  0010D6  2D                 	db	45
   340  0010D7  2D                 	db	45
   341  0010D8  2D                 	db	45
   342  0010D9  2D                 	db	45
   343  0010DA  2D                 	db	45
   344  0010DB  2D                 	db	45
   345  0010DC  00                 	db	0
   346  0010DD  25                 	db	37
   347  0010DE  63                 	db	99	;'c'
   348  0010DF  00                 	db	0
   349  0010E0  25                 	db	37
   350  0010E1  64                 	db	100	;'d'
   351  0010E2  00                 	db	0
   352  0010E3                     __end_of__stringdata:
   353                           	opt stack 0
   354                           
   355                           ; #config settings
   356  0010E3  00                 	db	0	; dummy byte at the end
   357  0000                     
   358                           	psect	cinit
   359  001582                     __pcinit:
   360                           	opt stack 0
   361  001582                     start_initialization:
   362                           	opt stack 0
   363  001582                     __initialization:
   364                           	opt stack 0
   365                           
   366                           ; Clear objects allocated to BANK2 (256 bytes)
   367  001582  EE02  F000         	lfsr	0,__pbssBANK2
   368  001586  EE11 F000          	lfsr	1,256
   369  00158A                     clear_0:
   370  00158A  6AEE               	clrf	postinc0,c
   371  00158C  50E5               	movf	postdec1,w,c
   372  00158E  50E1               	movf	fsr1l,w,c
   373  001590  E1FC               	bnz	clear_0
   374  001592  50E2               	movf	fsr1h,w,c
   375  001594  E1FA               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK1 (256 bytes)
   378  001596  EE01  F000         	lfsr	0,__pbssBANK1
   379  00159A  EE11 F000          	lfsr	1,256
   380  00159E                     clear_1:
   381  00159E  6AEE               	clrf	postinc0,c
   382  0015A0  50E5               	movf	postdec1,w,c
   383  0015A2  50E1               	movf	fsr1l,w,c
   384  0015A4  E1FC               	bnz	clear_1
   385  0015A6  50E2               	movf	fsr1h,w,c
   386  0015A8  E1FA               	bnz	clear_1
   387                           
   388                           ; Clear objects allocated to BANK0 (50 bytes)
   389  0015AA  EE00  F060         	lfsr	0,__pbssBANK0
   390  0015AE  0E32               	movlw	50
   391  0015B0                     clear_2:
   392  0015B0  6AEE               	clrf	postinc0,c
   393  0015B2  06E8               	decf	wreg,f,c
   394  0015B4  E1FD               	bnz	clear_2
   395                           
   396                           ; Clear objects allocated to COMRAM (32 bytes)
   397  0015B6  EE00  F023         	lfsr	0,__pbssCOMRAM
   398  0015BA  0E20               	movlw	32
   399  0015BC                     clear_3:
   400  0015BC  6AEE               	clrf	postinc0,c
   401  0015BE  06E8               	decf	wreg,f,c
   402  0015C0  E1FD               	bnz	clear_3
   403                           
   404                           ; Initialize objects allocated to COMRAM (1 bytes)
   405                           ; load TBLPTR registers with __pidataCOMRAM
   406  0015C2  0E82               	movlw	low __pidataCOMRAM
   407  0015C4  6EF6               	movwf	tblptrl,c
   408  0015C6  0E1A               	movlw	high __pidataCOMRAM
   409  0015C8  6EF7               	movwf	tblptrh,c
   410  0015CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   411  0015CC  6EF8               	movwf	tblptru,c
   412  0015CE  0009               	tblrd		*+	;fetch initializer
   413  0015D0  CFF5 F043          	movff	tablat,__pdataCOMRAM
   414  0015D4                     end_of_initialization:
   415                           	opt stack 0
   416  0015D4                     __end_of__initialization:
   417                           	opt stack 0
   418  0015D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   419  0015D6  6EF8               	movwf	tblptru,c
   420  0015D8  0100               	movlb	0
   421  0015DA  EF72  F008         	goto	_main	;jump to C main() function
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           postdec1	equ	0xFE5
   429                           fsr1h	equ	0xFE2
   430                           fsr1l	equ	0xFE1
   431                           
   432                           	psect	bssCOMRAM
   433  000023                     __pbssCOMRAM:
   434                           	opt stack 0
   435  000023                     _addr:
   436                           	opt stack 0
   437  000023                     	ds	4
   438  000027                     _delta_u:
   439                           	opt stack 0
   440  000027                     	ds	3
   441  00002A                     _e:
   442                           	opt stack 0
   443  00002A                     	ds	3
   444  00002D                     _e1:
   445                           	opt stack 0
   446  00002D                     	ds	3
   447  000030                     _e2:
   448                           	opt stack 0
   449  000030                     	ds	3
   450  000033                     _k1:
   451                           	opt stack 0
   452  000033                     	ds	3
   453  000036                     _u:
   454                           	opt stack 0
   455  000036                     	ds	3
   456  000039                     _y:
   457                           	opt stack 0
   458  000039                     	ds	3
   459  00003C                     _a:
   460                           	opt stack 0
   461  00003C                     	ds	2
   462  00003E                     _index:
   463                           	opt stack 0
   464  00003E                     	ds	2
   465  000040                     _i2cread:
   466                           	opt stack 0
   467  000040                     	ds	1
   468  000041                     _rx1:
   469                           	opt stack 0
   470  000041                     	ds	1
   471  000042                     _rx2:
   472                           	opt stack 0
   473  000042                     	ds	1
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1h	equ	0xFE2
   482                           fsr1l	equ	0xFE1
   483                           
   484                           	psect	dataCOMRAM
   485  000043                     __pdataCOMRAM:
   486                           	opt stack 0
   487  000043                     _data:
   488                           	opt stack 0
   489  000043                     	ds	1
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           postdec1	equ	0xFE5
   497                           fsr1h	equ	0xFE2
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	bssBANK0
   501  000060                     __pbssBANK0:
   502                           	opt stack 0
   503  000060                     _k2:
   504                           	opt stack 0
   505  000060                     	ds	3
   506  000063                     _k3:
   507                           	opt stack 0
   508  000063                     	ds	3
   509  000066                     _kd:
   510                           	opt stack 0
   511  000066                     	ds	3
   512  000069                     _ki:
   513                           	opt stack 0
   514  000069                     	ds	3
   515  00006C                     _kp:
   516                           	opt stack 0
   517  00006C                     	ds	3
   518  00006F                     _setpoint:
   519                           	opt stack 0
   520  00006F                     	ds	3
   521  000072                     _str:
   522                           	opt stack 0
   523  000072                     	ds	32
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           postdec1	equ	0xFE5
   531                           fsr1h	equ	0xFE2
   532                           fsr1l	equ	0xFE1
   533                           
   534                           	psect	bssBANK1
   535  000100                     __pbssBANK1:
   536                           	opt stack 0
   537  000100                     _currentLine:
   538                           	opt stack 0
   539  000100                     	ds	256
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           postinc0	equ	0xFEE
   545                           wreg	equ	0xFE8
   546                           postdec1	equ	0xFE5
   547                           fsr1h	equ	0xFE2
   548                           fsr1l	equ	0xFE1
   549                           
   550                           	psect	bssBANK2
   551  000200                     __pbssBANK2:
   552                           	opt stack 0
   553  000200                     _temp:
   554                           	opt stack 0
   555  000200                     	ds	256
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1h	equ	0xFE2
   564                           fsr1l	equ	0xFE1
   565                           
   566                           	psect	cstackBANK0
   567  000092                     __pcstackBANK0:
   568                           	opt stack 0
   569  000092                     ADC_init@channel:
   570                           	opt stack 0
   571  000092                     USART_init@channel:
   572                           	opt stack 0
   573  000092                     I2C_init@channel:
   574                           	opt stack 0
   575  000092                     USART_putChar@channel:
   576                           	opt stack 0
   577  000092                     USART_putString@string:
   578                           	opt stack 0
   579  000092                     I2C_ack@channel:
   580                           	opt stack 0
   581  000092                     I2C_nack@channel:
   582                           	opt stack 0
   583  000092                     I2C_wait@channel:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x0
   587  000092                     	ds	2
   588  000094                     ??_I2C_init:
   589  000094                     ??_I2C_wait:
   590  000094                     ??_USART_putChar:
   591  000094                     ??_I2C_ack:
   592  000094                     ??_I2C_nack:
   593  000094                     USART_init@baudrate:
   594                           	opt stack 0
   595  000094                     USART_putString@channel:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x2
   599  000094                     	ds	2
   600  000096                     ??_USART_init:
   601  000096                     ??_USART_putString:
   602  000096                     USART_putChar@c:
   603                           	opt stack 0
   604  000096                     I2C_start@channel:
   605                           	opt stack 0
   606  000096                     I2C_stop@channel:
   607                           	opt stack 0
   608  000096                     I2C_writeByte@channel:
   609                           	opt stack 0
   610  000096                     I2C_readByte@channel:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x4
   614  000096                     	ds	2
   615  000098                     ??_I2C_start:
   616  000098                     ??_I2C_stop:
   617  000098                     ??_I2C_writeByte:
   618  000098                     I2C_readByte@ack:
   619                           	opt stack 0
   620  000098                     USART_init@baudConfig:
   621                           	opt stack 0
   622  000098                     USART_putLine@line:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x6
   626  000098                     	ds	1
   627  000099                     ??_I2C_readByte:
   628                           
   629                           ; 0 bytes @ 0x7
   630  000099                     	ds	1
   631  00009A                     I2C_writeByte@b:
   632                           	opt stack 0
   633  00009A                     USART_putLine@channel:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x8
   637  00009A                     	ds	1
   638  00009B                     I2C_readByte@temp:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x9
   642  00009B                     	ds	1
   643  00009C                     USART_putCharLine@channel:
   644                           	opt stack 0
   645  00009C                     I2C_getByteFromAddress@channel:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xA
   649  00009C                     	ds	2
   650  00009E                     ??_USART_putCharLine:
   651  00009E                     I2C_getByteFromAddress@device_address:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xC
   655  00009E                     	ds	1
   656  00009F                     I2C_getByteFromAddress@page:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0xD
   660  00009F                     	ds	1
   661  0000A0                     USART_putCharLine@c:
   662                           	opt stack 0
   663  0000A0                     I2C_getByteFromAddress@address:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0xE
   667  0000A0                     	ds	2
   668  0000A2                     ??_I2C_getByteFromAddress:
   669                           
   670                           ; 0 bytes @ 0x10
   671  0000A2                     	ds	3
   672  0000A5                     I2C_getByteFromAddress@b:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x13
   676  0000A5                     	ds	1
   677  0000A6                     ??_main:
   678                           
   679                           ; 0 bytes @ 0x14
   680  0000A6                     	ds	1
   681  0000A7                     main@t:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x15
   685  0000A7                     	ds	1
   686  0000A8                     main@i:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x16
   690  0000A8                     	ds	2
   691  0000AA                     main@i_65:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x18
   695  0000AA                     	ds	2
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1h	equ	0xFE2
   704                           fsr1l	equ	0xFE1
   705                           
   706                           	psect	cstackCOMRAM
   707  000001                     __pcstackCOMRAM:
   708                           	opt stack 0
   709  000001                     USART_getChar@channel:
   710                           	opt stack 0
   711  000001                     i2I2C_wait@channel:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x0
   715  000001                     	ds	2
   716  000003                     ??_USART_getChar:
   717  000003                     ??i2_I2C_wait:
   718                           
   719                           ; 0 bytes @ 0x2
   720  000003                     	ds	2
   721  000005                     i2I2C_start@channel:
   722                           	opt stack 0
   723  000005                     i2I2C_stop@channel:
   724                           	opt stack 0
   725  000005                     i2I2C_writeByte@channel:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729  000005                     	ds	2
   730  000007                     ??i2_I2C_start:
   731  000007                     ??i2_I2C_stop:
   732  000007                     ??i2_I2C_writeByte:
   733                           
   734                           ; 0 bytes @ 0x6
   735  000007                     	ds	2
   736  000009                     i2I2C_writeByte@b:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x8
   740  000009                     	ds	1
   741  00000A                     I2C_putByteAtAddress@channel:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x9
   745  00000A                     	ds	2
   746  00000C                     I2C_putByteAtAddress@device_address:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0xB
   750  00000C                     	ds	1
   751  00000D                     I2C_putByteAtAddress@page:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0xC
   755  00000D                     	ds	1
   756  00000E                     I2C_putByteAtAddress@address:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0xD
   760  00000E                     	ds	2
   761  000010                     I2C_putByteAtAddress@byte:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0xF
   765  000010                     	ds	1
   766  000011                     ??_I2C_putByteAtAddress:
   767                           
   768                           ; 0 bytes @ 0x10
   769  000011                     	ds	3
   770  000014                     ??_ISRHandler:
   771                           
   772                           ; 0 bytes @ 0x13
   773  000014                     	ds	14
   774  000022                     ISRHandler@c:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x21
   778  000022                     	ds	1
   779                           tblptru	equ	0xFF8
   780                           tblptrh	equ	0xFF7
   781                           tblptrl	equ	0xFF6
   782                           tablat	equ	0xFF5
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1h	equ	0xFE2
   787                           fsr1l	equ	0xFE1
   788                           
   789 ;;
   790 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   791 ;;
   792 ;; *************** function _main *****************
   793 ;; Defined at:
   794 ;;		line 34 in file "main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  i               2   24[BANK0 ] unsigned int 
   799 ;;  i               2   22[BANK0 ] int 
   800 ;;  t               1   21[BANK0 ] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;		None               void
   803 ;; Registers used:
   804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:        6 bytes
   815 ;; Hardware stack levels required when called:    7
   816 ;; This function calls:
   817 ;;		_HW_init
   818 ;;		_I2C_getByteFromAddress
   819 ;;		_USART_putCharLine
   820 ;;		_USART_putLine
   821 ;; This function is called by:
   822 ;;		Startup code after reset
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text0
   827  0010E4                     __ptext0:
   828                           	opt stack 0
   829  0010E4                     _main:
   830                           	opt stack 23
   831                           
   832                           ;main.c: 37: unsigned char t;
   833                           ;main.c: 38: HW_init();
   834                           
   835                           ;incstack = 0
   836  0010E4  ECBC  F00B         	call	_HW_init	;wreg free
   837                           
   838                           ;main.c: 39: _delay((unsigned long)((10000)*(64000000L/4000000.0)));
   839  0010E8  0ED0               	movlw	208
   840  0010EA  0100               	movlb	0	; () banked
   841  0010EC  6FA6               	movwf	??_main& (0+255),b
   842  0010EE  0ECA               	movlw	202
   843  0010F0                     u1287:
   844  0010F0  2EE8               	decfsz	wreg,f,c
   845  0010F2  D7FE               	goto	u1287
   846  0010F4  2FA6               	decfsz	??_main& (0+255),f,b
   847  0010F6  D7FC               	goto	u1287
   848                           
   849                           ;main.c: 41: USART_putLine("Welcome to the Seismic table SW", (unsigned int)1);
   850  0010F8  0E10               	movlw	high STR_1
   851  0010FA  0100               	movlb	0	; () banked
   852  0010FC  6F99               	movwf	(USART_putLine@line+1)& (0+255),b
   853  0010FE  0E3D               	movlw	low STR_1
   854  001100  0100               	movlb	0	; () banked
   855  001102  6F98               	movwf	USART_putLine@line& (0+255),b
   856  001104  0E00               	movlw	0
   857  001106  0100               	movlb	0	; () banked
   858  001108  6F9B               	movwf	(USART_putLine@channel+1)& (0+255),b
   859  00110A  0E01               	movlw	1
   860  00110C  0100               	movlb	0	; () banked
   861  00110E  6F9A               	movwf	USART_putLine@channel& (0+255),b
   862  001110  ECA1  F00C         	call	_USART_putLine	;wreg free
   863                           
   864                           ;main.c: 46: USART_putLine("--------------------", (unsigned int)1);
   865  001114  0E10               	movlw	high STR_2
   866  001116  0100               	movlb	0	; () banked
   867  001118  6F99               	movwf	(USART_putLine@line+1)& (0+255),b
   868  00111A  0EC8               	movlw	low STR_2
   869  00111C  0100               	movlb	0	; () banked
   870  00111E  6F98               	movwf	USART_putLine@line& (0+255),b
   871  001120  0E00               	movlw	0
   872  001122  0100               	movlb	0	; () banked
   873  001124  6F9B               	movwf	(USART_putLine@channel+1)& (0+255),b
   874  001126  0E01               	movlw	1
   875  001128  0100               	movlb	0	; () banked
   876  00112A  6F9A               	movwf	USART_putLine@channel& (0+255),b
   877  00112C  ECA1  F00C         	call	_USART_putLine	;wreg free
   878  001130                     l3575:
   879                           
   880                           ;main.c: 53: {
   881                           ;main.c: 63: for(int i = 0; i < 1000; i++)
   882  001130  0E00               	movlw	0
   883  001132  0100               	movlb	0	; () banked
   884  001134  6FA9               	movwf	(main@i+1)& (0+255),b
   885  001136  0E00               	movlw	0
   886  001138  0100               	movlb	0	; () banked
   887  00113A  6FA8               	movwf	main@i& (0+255),b
   888  00113C                     
   889                           ; BSR set to: 0
   890  00113C  0100               	movlb	0	; () banked
   891  00113E  51A9               	movf	(main@i+1)& (0+255),w,b
   892  001140  0A80               	xorlw	128
   893  001142  0F7D               	addlw	-131
   894  001144  0EE8               	movlw	232
   895  001146  B4D8               	btfsc	status,2,c
   896  001148  5DA8               	subwf	main@i& (0+255),w,b
   897  00114A  B0D8               	btfsc	status,0,c
   898  00114C  D00D               	goto	l3585
   899                           
   900                           ; BSR set to: 0
   901                           ;main.c: 64: {
   902                           ;main.c: 65: _delay((unsigned long)((5)*(64000000L/4000.0)));
   903                           
   904                           ; BSR set to: 0
   905                           
   906                           ; BSR set to: 0
   907  00114E  0E68               	movlw	104
   908  001150  0100               	movlb	0	; () banked
   909  001152  6FA6               	movwf	??_main& (0+255),b
   910  001154  0EE4               	movlw	228
   911  001156                     u1297:
   912  001156  2EE8               	decfsz	wreg,f,c
   913  001158  D7FE               	goto	u1297
   914  00115A  2FA6               	decfsz	??_main& (0+255),f,b
   915  00115C  D7FC               	goto	u1297
   916  00115E  D000               	nop2	
   917  001160  0100               	movlb	0	; () banked
   918  001162  4BA8               	infsnz	main@i& (0+255),f,b
   919  001164  2BA9               	incf	(main@i+1)& (0+255),f,b
   920  001166  D7EA               	goto	L1
   921  001168                     l3585:
   922                           
   923                           ; BSR set to: 0
   924                           ;main.c: 66: }
   925                           ;main.c: 74: USART_putLine("Reading filled EEPROM", (unsigned int)1);
   926  001168  0E10               	movlw	high STR_3
   927  00116A  0100               	movlb	0	; () banked
   928  00116C  6F99               	movwf	(USART_putLine@line+1)& (0+255),b
   929  00116E  0EB2               	movlw	low STR_3
   930  001170  0100               	movlb	0	; () banked
   931  001172  6F98               	movwf	USART_putLine@line& (0+255),b
   932  001174  0E00               	movlw	0
   933  001176  0100               	movlb	0	; () banked
   934  001178  6F9B               	movwf	(USART_putLine@channel+1)& (0+255),b
   935  00117A  0E01               	movlw	1
   936  00117C  0100               	movlb	0	; () banked
   937  00117E  6F9A               	movwf	USART_putLine@channel& (0+255),b
   938  001180  ECA1  F00C         	call	_USART_putLine	;wreg free
   939                           
   940                           ;main.c: 75: for(unsigned int i = 0; i < 0x1000; i++)
   941  001184  0E00               	movlw	0
   942  001186  0100               	movlb	0	; () banked
   943  001188  6FAB               	movwf	(main@i_65+1)& (0+255),b
   944  00118A  0E00               	movlw	0
   945  00118C  0100               	movlb	0	; () banked
   946  00118E  6FAA               	movwf	main@i_65& (0+255),b
   947  001190                     
   948                           ; BSR set to: 0
   949  001190  0E00               	movlw	0
   950  001192  0100               	movlb	0	; () banked
   951  001194  5DAA               	subwf	main@i_65& (0+255),w,b
   952  001196  0E10               	movlw	16
   953  001198  0100               	movlb	0	; () banked
   954  00119A  59AB               	subwfb	(main@i_65+1)& (0+255),w,b
   955  00119C  B0D8               	btfsc	status,0,c
   956  00119E  D7C8               	goto	l3575
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 76: {
   960                           ;main.c: 77: t = I2C_getByteFromAddress((unsigned int)1, (unsigned char)0x53, 0, 1);
   961                           
   962                           ; BSR set to: 0
   963                           
   964                           ; BSR set to: 0
   965  0011A0  0E00               	movlw	0
   966  0011A2  0100               	movlb	0	; () banked
   967  0011A4  6F9D               	movwf	(I2C_getByteFromAddress@channel+1)& (0+255),b
   968  0011A6  0E01               	movlw	1
   969  0011A8  0100               	movlb	0	; () banked
   970  0011AA  6F9C               	movwf	I2C_getByteFromAddress@channel& (0+255),b
   971  0011AC  0E53               	movlw	83
   972  0011AE  0100               	movlb	0	; () banked
   973  0011B0  6F9E               	movwf	I2C_getByteFromAddress@device_address& (0+255),b
   974  0011B2  0E00               	movlw	0
   975  0011B4  0100               	movlb	0	; () banked
   976  0011B6  6F9F               	movwf	I2C_getByteFromAddress@page& (0+255),b
   977  0011B8  0E00               	movlw	0
   978  0011BA  0100               	movlb	0	; () banked
   979  0011BC  6FA1               	movwf	(I2C_getByteFromAddress@address+1)& (0+255),b
   980  0011BE  0E01               	movlw	1
   981  0011C0  0100               	movlb	0	; () banked
   982  0011C2  6FA0               	movwf	I2C_getByteFromAddress@address& (0+255),b
   983  0011C4  EC3E  F00A         	call	_I2C_getByteFromAddress	;wreg free
   984  0011C8  0100               	movlb	0	; () banked
   985  0011CA  6FA7               	movwf	main@t& (0+255),b
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 78: USART_putCharLine((char)t, (unsigned int)1);
   989  0011CC  0E00               	movlw	0
   990  0011CE  0100               	movlb	0	; () banked
   991  0011D0  6F9D               	movwf	(USART_putCharLine@channel+1)& (0+255),b
   992  0011D2  0E01               	movlw	1
   993  0011D4  0100               	movlb	0	; () banked
   994  0011D6  6F9C               	movwf	USART_putCharLine@channel& (0+255),b
   995  0011D8  0100               	movlb	0	; () banked
   996  0011DA  51A7               	movf	main@t& (0+255),w,b
   997  0011DC  ECEF  F00A         	call	_USART_putCharLine
   998                           
   999                           ;main.c: 79: _delay((unsigned long)((10)*(64000000L/4000.0)));
  1000  0011E0  0ED0               	movlw	208
  1001  0011E2  0100               	movlb	0	; () banked
  1002  0011E4  6FA6               	movwf	??_main& (0+255),b
  1003  0011E6  0ECA               	movlw	202
  1004  0011E8                     u1307:
  1005  0011E8  2EE8               	decfsz	wreg,f,c
  1006  0011EA  D7FE               	goto	u1307
  1007  0011EC  2FA6               	decfsz	??_main& (0+255),f,b
  1008  0011EE  D7FC               	goto	u1307
  1009  0011F0  0100               	movlb	0	; () banked
  1010  0011F2  4BAA               	infsnz	main@i_65& (0+255),f,b
  1011  0011F4  2BAB               	incf	(main@i_65+1)& (0+255),f,b
  1012  0011F6  D7CC               	goto	L2
  1013  0011F8                     __end_of_main:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           postinc0	equ	0xFEE
  1020                           wreg	equ	0xFE8
  1021                           postdec1	equ	0xFE5
  1022                           fsr1h	equ	0xFE2
  1023                           fsr1l	equ	0xFE1
  1024                           status	equ	0xFD8
  1025                           
  1026 ;; *************** function _USART_putCharLine *****************
  1027 ;; Defined at:
  1028 ;;		line 50 in file "usart.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  c               1    wreg     unsigned char 
  1031 ;;  channel         2   10[BANK0 ] unsigned int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  c               1   14[BANK0 ] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;		None               void
  1036 ;; Registers used:
  1037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;Total ram usage:        5 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    6
  1050 ;; This function calls:
  1051 ;;		_USART_putLine
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text1
  1058  0015DE                     __ptext1:
  1059                           	opt stack 0
  1060  0015DE                     _USART_putCharLine:
  1061                           	opt stack 23
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;incstack = 0
  1065                           ;USART_putCharLine@c stored from wreg
  1066  0015DE  0100               	movlb	0	; () banked
  1067  0015E0  6FA0               	movwf	USART_putCharLine@c& (0+255),b
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;usart.c: 52: switch(channel)
  1071  0015E2  D00A               	goto	l3545
  1072  0015E4                     l276:
  1073  0015E4  A89E               	btfss	3998,4,c	;volatile
  1074  0015E6  D7FE               	goto	l276
  1075                           
  1076                           ;usart.c: 56: TXREG1 = c;
  1077  0015E8  C0A0  FFAD         	movff	USART_putCharLine@c,4013	;volatile
  1078                           
  1079                           ;usart.c: 57: break;
  1080  0015EC  D018               	goto	l3547
  1081  0015EE                     l281:
  1082  0015EE  A8A4               	btfss	4004,4,c	;volatile
  1083  0015F0  D7FE               	goto	l281
  1084                           
  1085                           ;usart.c: 60: TXREG2 = c;
  1086  0015F2  C0A0  FF73         	movff	USART_putCharLine@c,3955	;volatile
  1087                           
  1088                           ;usart.c: 61: break;
  1089  0015F6  D013               	goto	l3547
  1090  0015F8                     l3545:
  1091  0015F8  0100               	movlb	0	; () banked
  1092  0015FA  C09C  F09E         	movff	USART_putCharLine@channel,??_USART_putCharLine
  1093  0015FE  0100               	movlb	0	; () banked
  1094  001600  C09D  F09F         	movff	USART_putCharLine@channel+1,??_USART_putCharLine+1
  1095                           
  1096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1097                           ; Switch size 1, requested type "space"
  1098                           ; Number of cases is 1, Range of values is 0 to 0
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte            4     3 (average)
  1102                           ;	Chosen strategy is simple_byte
  1103  001604  0100               	movlb	0	; () banked
  1104  001606  519F               	movf	(??_USART_putCharLine+1)& (0+255),w,b
  1105  001608  0A00               	xorlw	0	; case 0
  1106  00160A  A4D8               	btfss	status,2,c
  1107  00160C  D008               	goto	l3547
  1108                           
  1109                           ; BSR set to: 0
  1110                           ; Switch size 1, requested type "space"
  1111                           ; Number of cases is 2, Range of values is 1 to 2
  1112                           ; switch strategies available:
  1113                           ; Name         Instructions Cycles
  1114                           ; simple_byte            7     4 (average)
  1115                           ;	Chosen strategy is simple_byte
  1116  00160E  0100               	movlb	0	; () banked
  1117  001610  519E               	movf	??_USART_putCharLine& (0+255),w,b
  1118  001612  0A01               	xorlw	1	; case 1
  1119  001614  B4D8               	btfsc	status,2,c
  1120  001616  D7E6               	goto	l276
  1121  001618  0A03               	xorlw	3	; case 2
  1122  00161A  B4D8               	btfsc	status,2,c
  1123  00161C  D7E8               	goto	l281
  1124  00161E                     l3547:
  1125                           
  1126                           ;usart.c: 65: USART_putLine("", channel);
  1127  00161E  0E10               	movlw	high (STR_2+20)
  1128  001620  0100               	movlb	0	; () banked
  1129  001622  6F99               	movwf	(USART_putLine@line+1)& (0+255),b
  1130  001624  0EDC               	movlw	low (STR_2+20)
  1131  001626  0100               	movlb	0	; () banked
  1132  001628  6F98               	movwf	USART_putLine@line& (0+255),b
  1133  00162A  C09C  F09A         	movff	USART_putCharLine@channel,USART_putLine@channel
  1134  00162E  C09D  F09B         	movff	USART_putCharLine@channel+1,USART_putLine@channel+1
  1135  001632  ECA1  F00C         	call	_USART_putLine	;wreg free
  1136  001636  0012               	return	
  1137  001638                     __end_of_USART_putCharLine:
  1138                           	opt stack 0
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           postinc0	equ	0xFEE
  1144                           wreg	equ	0xFE8
  1145                           postdec1	equ	0xFE5
  1146                           fsr1h	equ	0xFE2
  1147                           fsr1l	equ	0xFE1
  1148                           status	equ	0xFD8
  1149                           
  1150 ;; *************** function _USART_putLine *****************
  1151 ;; Defined at:
  1152 ;;		line 99 in file "usart.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  line            2    6[BANK0 ] PTR const unsigned char 
  1155 ;;		 -> str(32), STR_9(28), STR_8(28), STR_7(29), 
  1156 ;;		 -> STR_6(50), UART_putInt@buffer(128), STR_4(1), STR_3(22), 
  1157 ;;		 -> STR_2(21), STR_1(32), 
  1158 ;;  channel         2    8[BANK0 ] unsigned int 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;		None               void
  1163 ;; Registers used:
  1164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;Total ram usage:        4 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    5
  1177 ;; This function calls:
  1178 ;;		_USART_putChar
  1179 ;;		_USART_putString
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;;		_USART_putCharLine
  1183 ;;		_UART_putInt
  1184 ;;		_EEPROM_writeWord
  1185 ;;		_I2C_writeEEPROMPage
  1186 ;;		_I2C_readEEPROMPage
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text2
  1191  001942                     __ptext2:
  1192                           	opt stack 0
  1193  001942                     _USART_putLine:
  1194                           	opt stack 24
  1195                           
  1196                           ;usart.c: 101: USART_putString(line, channel);
  1197                           
  1198                           ;incstack = 0
  1199  001942  0100               	movlb	0	; () banked
  1200  001944  C099  F093         	movff	USART_putLine@line+1,USART_putString@string+1
  1201  001948  0100               	movlb	0	; () banked
  1202  00194A  C098  F092         	movff	USART_putLine@line,USART_putString@string
  1203  00194E  C09A  F094         	movff	USART_putLine@channel,USART_putString@channel
  1204  001952  C09B  F095         	movff	USART_putLine@channel+1,USART_putString@channel+1
  1205  001956  EC77  F009         	call	_USART_putString	;wreg free
  1206                           
  1207                           ;usart.c: 102: USART_putChar('\r', channel);
  1208  00195A  C09A  F092         	movff	USART_putLine@channel,USART_putChar@channel
  1209  00195E  C09B  F093         	movff	USART_putLine@channel+1,USART_putChar@channel+1
  1210  001962  0E0D               	movlw	13
  1211  001964  EC04  F00C         	call	_USART_putChar
  1212                           
  1213                           ;usart.c: 103: USART_putChar('\n', channel);
  1214  001968  C09A  F092         	movff	USART_putLine@channel,USART_putChar@channel
  1215  00196C  C09B  F093         	movff	USART_putLine@channel+1,USART_putChar@channel+1
  1216  001970  0E0A               	movlw	10
  1217  001972  EC04  F00C         	call	_USART_putChar
  1218  001976  0012               	return	
  1219  001978                     __end_of_USART_putLine:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1h	equ	0xFE2
  1229                           fsr1l	equ	0xFE1
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _USART_putString *****************
  1233 ;; Defined at:
  1234 ;;		line 68 in file "usart.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  string          2    0[BANK0 ] PTR const unsigned char 
  1237 ;;		 -> str(32), STR_9(28), STR_8(28), STR_7(29), 
  1238 ;;		 -> STR_6(50), UART_putInt@buffer(128), STR_4(1), STR_3(22), 
  1239 ;;		 -> STR_2(21), STR_1(32), 
  1240 ;;  channel         2    2[BANK0 ] unsigned int 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;		None               void
  1245 ;; Registers used:
  1246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1252 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;Total ram usage:        6 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    4
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_USART_putLine
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text3
  1267  0012EE                     __ptext3:
  1268                           	opt stack 0
  1269  0012EE                     _USART_putString:
  1270                           	opt stack 24
  1271                           
  1272                           ;usart.c: 70: switch(channel)
  1273                           
  1274                           ;incstack = 0
  1275  0012EE  D060               	goto	l3263
  1276  0012F0                     l292:
  1277  0012F0  A89E               	btfss	3998,4,c	;volatile
  1278  0012F2  D7FE               	goto	l292
  1279                           
  1280                           ;usart.c: 78: TX1REG=(*string);
  1281  0012F4  0100               	movlb	0	; () banked
  1282  0012F6  C092  FFF6         	movff	USART_putString@string,tblptrl
  1283  0012FA  0100               	movlb	0	; () banked
  1284  0012FC  C093  FFF7         	movff	USART_putString@string+1,tblptrh
  1285  001300  0E00               	movlw	low (__smallconst shr (0+16))
  1286  001302  6EF8               	movwf	tblptru,c
  1287  001304  0E0F               	movlw	(high __ramtop+-1)
  1288  001306  64F7               	cpfsgt	tblptrh,c
  1289  001308  D003               	bra	u1037
  1290  00130A  0008               	tblrd		*
  1291  00130C  50F5               	movf	tablat,w,c
  1292  00130E  D005               	bra	u1030
  1293  001310                     u1037:
  1294  001310  CFF6 FFE9          	movff	tblptrl,fsr0l
  1295  001314  CFF7 FFEA          	movff	tblptrh,fsr0h
  1296  001318  50EF               	movf	indf0,w,c
  1297  00131A                     u1030:
  1298  00131A  6EAD               	movwf	4013,c	;volatile
  1299                           
  1300                           ;usart.c: 80: string++;
  1301  00131C  0100               	movlb	0	; () banked
  1302  00131E  4B92               	infsnz	USART_putString@string& (0+255),f,b
  1303  001320  2B93               	incf	(USART_putString@string+1)& (0+255),f,b
  1304  001322                     l3253:
  1305  001322  0100               	movlb	0	; () banked
  1306  001324  C092  FFF6         	movff	USART_putString@string,tblptrl
  1307  001328  0100               	movlb	0	; () banked
  1308  00132A  C093  FFF7         	movff	USART_putString@string+1,tblptrh
  1309  00132E  0E00               	movlw	low (__smallconst shr (0+16))
  1310  001330  6EF8               	movwf	tblptru,c
  1311  001332  0E0F               	movlw	(high __ramtop+-1)
  1312  001334  64F7               	cpfsgt	tblptrh,c
  1313  001336  D003               	bra	u1047
  1314  001338  0008               	tblrd		*
  1315  00133A  50F5               	movf	tablat,w,c
  1316  00133C  D005               	bra	u1040
  1317  00133E                     u1047:
  1318  00133E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1319  001342  CFF7 FFEA          	movff	tblptrh,fsr0h
  1320  001346  50EF               	movf	indf0,w,c
  1321  001348                     u1040:
  1322  001348  0900               	iorlw	0
  1323  00134A  B4D8               	btfsc	status,2,c
  1324  00134C  0012               	return	
  1325  00134E  D7D0               	goto	l292
  1326  001350                     l300:
  1327  001350  A8A4               	btfss	4004,4,c	;volatile
  1328  001352  D7FE               	goto	l300
  1329                           
  1330                           ;usart.c: 89: TX2REG=(*string);
  1331  001354  0100               	movlb	0	; () banked
  1332  001356  C092  FFF6         	movff	USART_putString@string,tblptrl
  1333  00135A  0100               	movlb	0	; () banked
  1334  00135C  C093  FFF7         	movff	USART_putString@string+1,tblptrh
  1335  001360  0E00               	movlw	low (__smallconst shr (0+16))
  1336  001362  6EF8               	movwf	tblptru,c
  1337  001364  0E0F               	movlw	(high __ramtop+-1)
  1338  001366  64F7               	cpfsgt	tblptrh,c
  1339  001368  D003               	bra	u1077
  1340  00136A  0008               	tblrd		*
  1341  00136C  50F5               	movf	tablat,w,c
  1342  00136E  D005               	bra	u1070
  1343  001370                     u1077:
  1344  001370  CFF6 FFE9          	movff	tblptrl,fsr0l
  1345  001374  CFF7 FFEA          	movff	tblptrh,fsr0h
  1346  001378  50EF               	movf	indf0,w,c
  1347  00137A                     u1070:
  1348  00137A  6E73               	movwf	3955,c	;volatile
  1349                           
  1350                           ;usart.c: 91: string++;
  1351  00137C  0100               	movlb	0	; () banked
  1352  00137E  4B92               	infsnz	USART_putString@string& (0+255),f,b
  1353  001380  2B93               	incf	(USART_putString@string+1)& (0+255),f,b
  1354  001382                     l3259:
  1355  001382  0100               	movlb	0	; () banked
  1356  001384  C092  FFF6         	movff	USART_putString@string,tblptrl
  1357  001388  0100               	movlb	0	; () banked
  1358  00138A  C093  FFF7         	movff	USART_putString@string+1,tblptrh
  1359  00138E  0E00               	movlw	low (__smallconst shr (0+16))
  1360  001390  6EF8               	movwf	tblptru,c
  1361  001392  0E0F               	movlw	(high __ramtop+-1)
  1362  001394  64F7               	cpfsgt	tblptrh,c
  1363  001396  D003               	bra	u1087
  1364  001398  0008               	tblrd		*
  1365  00139A  50F5               	movf	tablat,w,c
  1366  00139C  D005               	bra	u1080
  1367  00139E                     u1087:
  1368  00139E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1369  0013A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1370  0013A6  50EF               	movf	indf0,w,c
  1371  0013A8                     u1080:
  1372  0013A8  0900               	iorlw	0
  1373  0013AA  B4D8               	btfsc	status,2,c
  1374  0013AC  0012               	return	
  1375  0013AE  D7D0               	goto	l300
  1376  0013B0                     l3263:
  1377  0013B0  0100               	movlb	0	; () banked
  1378  0013B2  C094  F096         	movff	USART_putString@channel,??_USART_putString
  1379  0013B6  0100               	movlb	0	; () banked
  1380  0013B8  C095  F097         	movff	USART_putString@channel+1,??_USART_putString+1
  1381                           
  1382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1383                           ; Switch size 1, requested type "space"
  1384                           ; Number of cases is 1, Range of values is 0 to 0
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte            4     3 (average)
  1388                           ;	Chosen strategy is simple_byte
  1389  0013BC  0100               	movlb	0	; () banked
  1390  0013BE  5197               	movf	(??_USART_putString+1)& (0+255),w,b
  1391  0013C0  0A00               	xorlw	0	; case 0
  1392  0013C2  A4D8               	btfss	status,2,c
  1393  0013C4  0012               	return	
  1394                           
  1395                           ; BSR set to: 0
  1396                           ; Switch size 1, requested type "space"
  1397                           ; Number of cases is 2, Range of values is 1 to 2
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte            7     4 (average)
  1401                           ;	Chosen strategy is simple_byte
  1402  0013C6  0100               	movlb	0	; () banked
  1403  0013C8  5196               	movf	??_USART_putString& (0+255),w,b
  1404  0013CA  0A01               	xorlw	1	; case 1
  1405  0013CC  B4D8               	btfsc	status,2,c
  1406  0013CE  D7A9               	goto	l3253
  1407  0013D0  0A03               	xorlw	3	; case 2
  1408  0013D2  A4D8               	btfss	status,2,c
  1409  0013D4  0012               	return	
  1410  0013D6  D7D5               	goto	l3259
  1411  0013D8                     __end_of_USART_putString:
  1412                           	opt stack 0
  1413                           tblptru	equ	0xFF8
  1414                           tblptrh	equ	0xFF7
  1415                           tblptrl	equ	0xFF6
  1416                           tablat	equ	0xFF5
  1417                           indf0	equ	0xFEF
  1418                           postinc0	equ	0xFEE
  1419                           fsr0h	equ	0xFEA
  1420                           fsr0l	equ	0xFE9
  1421                           wreg	equ	0xFE8
  1422                           postdec1	equ	0xFE5
  1423                           fsr1h	equ	0xFE2
  1424                           fsr1l	equ	0xFE1
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function _USART_putChar *****************
  1428 ;; Defined at:
  1429 ;;		line 5 in file "usart.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  c               1    wreg     unsigned char 
  1432 ;;  channel         2    0[BANK0 ] unsigned int 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  c               1    4[BANK0 ] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;		None               void
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;Total ram usage:        5 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_USART_putLine
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text4
  1459  001808                     __ptext4:
  1460                           	opt stack 0
  1461  001808                     _USART_putChar:
  1462                           	opt stack 24
  1463                           
  1464                           ;incstack = 0
  1465                           ;USART_putChar@c stored from wreg
  1466  001808  0100               	movlb	0	; () banked
  1467  00180A  6F96               	movwf	USART_putChar@c& (0+255),b
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;usart.c: 7: switch(channel)
  1471  00180C  D00A               	goto	l3239
  1472  00180E                     l246:
  1473  00180E  A2AC               	btfss	4012,1,c	;volatile
  1474  001810  D7FE               	goto	l246
  1475                           
  1476                           ;usart.c: 11: TXREG1 = c;
  1477  001812  C096  FFAD         	movff	USART_putChar@c,4013	;volatile
  1478                           
  1479                           ;usart.c: 12: break;
  1480  001816  0012               	return	
  1481  001818                     l251:
  1482  001818  A272               	btfss	3954,1,c	;volatile
  1483  00181A  D7FE               	goto	l251
  1484                           
  1485                           ;usart.c: 15: TXREG2 = c;
  1486  00181C  C096  FF73         	movff	USART_putChar@c,3955	;volatile
  1487                           
  1488                           ;usart.c: 16: break;
  1489  001820  0012               	return	
  1490  001822                     l3239:
  1491  001822  0100               	movlb	0	; () banked
  1492  001824  C092  F094         	movff	USART_putChar@channel,??_USART_putChar
  1493  001828  0100               	movlb	0	; () banked
  1494  00182A  C093  F095         	movff	USART_putChar@channel+1,??_USART_putChar+1
  1495                           
  1496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1497                           ; Switch size 1, requested type "space"
  1498                           ; Number of cases is 1, Range of values is 0 to 0
  1499                           ; switch strategies available:
  1500                           ; Name         Instructions Cycles
  1501                           ; simple_byte            4     3 (average)
  1502                           ;	Chosen strategy is simple_byte
  1503  00182E  0100               	movlb	0	; () banked
  1504  001830  5195               	movf	(??_USART_putChar+1)& (0+255),w,b
  1505  001832  0A00               	xorlw	0	; case 0
  1506  001834  A4D8               	btfss	status,2,c
  1507  001836  0012               	return	
  1508                           
  1509                           ; BSR set to: 0
  1510                           ; Switch size 1, requested type "space"
  1511                           ; Number of cases is 2, Range of values is 1 to 2
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte            7     4 (average)
  1515                           ;	Chosen strategy is simple_byte
  1516  001838  0100               	movlb	0	; () banked
  1517  00183A  5194               	movf	??_USART_putChar& (0+255),w,b
  1518  00183C  0A01               	xorlw	1	; case 1
  1519  00183E  B4D8               	btfsc	status,2,c
  1520  001840  D7E6               	goto	l246
  1521  001842  0A03               	xorlw	3	; case 2
  1522  001844  A4D8               	btfss	status,2,c
  1523  001846  0012               	return	
  1524  001848  D7E7               	goto	l251
  1525  00184A                     __end_of_USART_putChar:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           indf0	equ	0xFEF
  1532                           postinc0	equ	0xFEE
  1533                           fsr0h	equ	0xFEA
  1534                           fsr0l	equ	0xFE9
  1535                           wreg	equ	0xFE8
  1536                           postdec1	equ	0xFE5
  1537                           fsr1h	equ	0xFE2
  1538                           fsr1l	equ	0xFE1
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _I2C_getByteFromAddress *****************
  1542 ;; Defined at:
  1543 ;;		line 267 in file "i2c.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  channel         2   10[BANK0 ] unsigned int 
  1546 ;;  device_addre    1   12[BANK0 ] unsigned char 
  1547 ;;  page            1   13[BANK0 ] unsigned char 
  1548 ;;  address         2   14[BANK0 ] unsigned int 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  b               1   19[BANK0 ] unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      unsigned char 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1560 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;Total ram usage:       10 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    6
  1567 ;; This function calls:
  1568 ;;		_I2C_readByte
  1569 ;;		_I2C_start
  1570 ;;		_I2C_stop
  1571 ;;		_I2C_writeByte
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text5
  1578  00147C                     __ptext5:
  1579                           	opt stack 0
  1580  00147C                     _I2C_getByteFromAddress:
  1581                           	opt stack 23
  1582                           
  1583                           ;i2c.c: 269: unsigned char b;
  1584                           ;i2c.c: 270: I2C_start(channel);
  1585                           
  1586                           ;incstack = 0
  1587  00147C  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_start@channel
  1588  001480  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_start@channel+1
  1589  001484  EC46  F00C         	call	_I2C_start	;wreg free
  1590                           
  1591                           ;i2c.c: 271: device_address |= (page<<2);
  1592  001488  0100               	movlb	0	; () banked
  1593  00148A  459F               	rlncf	I2C_getByteFromAddress@page& (0+255),w,b
  1594  00148C  46E8               	rlncf	wreg,f,c
  1595  00148E  0BFC               	andlw	252
  1596  001490  0100               	movlb	0	; () banked
  1597  001492  139E               	iorwf	I2C_getByteFromAddress@device_address& (0+255),f,b
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;i2c.c: 273: I2C_writeByte(device_address<<1, channel);
  1601  001494  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1602  001498  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1603  00149C  0100               	movlb	0	; () banked
  1604  00149E  519E               	movf	I2C_getByteFromAddress@device_address& (0+255),w,b
  1605  0014A0  0100               	movlb	0	; () banked
  1606  0014A2  259E               	addwf	I2C_getByteFromAddress@device_address& (0+255),w,b
  1607  0014A4  EC1C  F00B         	call	_I2C_writeByte
  1608                           
  1609                           ;i2c.c: 275: I2C_writeByte((address & 0xFF00)>>8, channel);
  1610  0014A8  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1611  0014AC  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1612  0014B0  0100               	movlb	0	; () banked
  1613  0014B2  C0A1  F0A2         	movff	I2C_getByteFromAddress@address+1,??_I2C_getByteFromAddress
  1614  0014B6  C0A2  F0A3         	movff	??_I2C_getByteFromAddress,??_I2C_getByteFromAddress+1
  1615  0014BA  0100               	movlb	0	; () banked
  1616  0014BC  6BA4               	clrf	(??_I2C_getByteFromAddress+2)& (0+255),b
  1617  0014BE  0100               	movlb	0	; () banked
  1618  0014C0  51A3               	movf	(??_I2C_getByteFromAddress+1)& (0+255),w,b
  1619  0014C2  EC1C  F00B         	call	_I2C_writeByte
  1620                           
  1621                           ;i2c.c: 276: I2C_writeByte((unsigned char)(address & 0x00FF), channel);
  1622  0014C6  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1623  0014CA  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1624  0014CE  0100               	movlb	0	; () banked
  1625  0014D0  51A0               	movf	I2C_getByteFromAddress@address& (0+255),w,b
  1626  0014D2  EC1C  F00B         	call	_I2C_writeByte
  1627                           
  1628                           ;i2c.c: 279: I2C_start(channel);
  1629  0014D6  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_start@channel
  1630  0014DA  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_start@channel+1
  1631  0014DE  EC46  F00C         	call	_I2C_start	;wreg free
  1632                           
  1633                           ;i2c.c: 280: I2C_writeByte((device_address<<1)+1, channel);
  1634  0014E2  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1635  0014E6  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1636  0014EA  80D8               	bsf	status,0,c
  1637  0014EC  0100               	movlb	0	; () banked
  1638  0014EE  359E               	rlcf	I2C_getByteFromAddress@device_address& (0+255),w,b
  1639  0014F0  EC1C  F00B         	call	_I2C_writeByte
  1640                           
  1641                           ;i2c.c: 282: b = I2C_readByte(channel, 0);
  1642  0014F4  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_readByte@channel
  1643  0014F8  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_readByte@channel+1
  1644  0014FC  0E00               	movlw	0
  1645  0014FE  0100               	movlb	0	; () banked
  1646  001500  6F98               	movwf	I2C_readByte@ack& (0+255),b
  1647  001502  ECEC  F009         	call	_I2C_readByte	;wreg free
  1648  001506  0100               	movlb	0	; () banked
  1649  001508  6FA5               	movwf	I2C_getByteFromAddress@b& (0+255),b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;i2c.c: 283: I2C_stop(channel);
  1653  00150A  C09C  F096         	movff	I2C_getByteFromAddress@channel,I2C_stop@channel
  1654  00150E  C09D  F097         	movff	I2C_getByteFromAddress@channel+1,I2C_stop@channel+1
  1655  001512  EC25  F00C         	call	_I2C_stop	;wreg free
  1656                           
  1657                           ;i2c.c: 284: return b;
  1658  001516  0100               	movlb	0	; () banked
  1659  001518  51A5               	movf	I2C_getByteFromAddress@b& (0+255),w,b
  1660  00151A  0012               	return	
  1661  00151C                     __end_of_I2C_getByteFromAddress:
  1662                           	opt stack 0
  1663                           tblptru	equ	0xFF8
  1664                           tblptrh	equ	0xFF7
  1665                           tblptrl	equ	0xFF6
  1666                           tablat	equ	0xFF5
  1667                           indf0	equ	0xFEF
  1668                           postinc0	equ	0xFEE
  1669                           fsr0h	equ	0xFEA
  1670                           fsr0l	equ	0xFE9
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           fsr1h	equ	0xFE2
  1674                           fsr1l	equ	0xFE1
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _I2C_writeByte *****************
  1678 ;; Defined at:
  1679 ;;		line 112 in file "i2c.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  b               1    wreg     unsigned char 
  1682 ;;  channel         2    4[BANK0 ] unsigned int 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  b               1    8[BANK0 ] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;		None               void
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;Total ram usage:        5 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    5
  1701 ;; This function calls:
  1702 ;;		_I2C_wait
  1703 ;; This function is called by:
  1704 ;;		_I2C_getByteFromAddress
  1705 ;;		_I2C_putBytesPage
  1706 ;;		_I2C_getBytesPage
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text6
  1711  001638                     __ptext6:
  1712                           	opt stack 0
  1713  001638                     _I2C_writeByte:
  1714                           	opt stack 23
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;incstack = 0
  1718                           ;I2C_writeByte@b stored from wreg
  1719  001638  0100               	movlb	0	; () banked
  1720  00163A  6F9A               	movwf	I2C_writeByte@b& (0+255),b
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;i2c.c: 114: switch(channel)
  1724  00163C  D014               	goto	l3455
  1725  00163E                     l3447:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;i2c.c: 117: I2C_wait(channel);
  1729  00163E  C096  F092         	movff	I2C_writeByte@channel,I2C_wait@channel
  1730  001642  C097  F093         	movff	I2C_writeByte@channel+1,I2C_wait@channel+1
  1731  001646  EC47  F00B         	call	_I2C_wait	;wreg free
  1732                           
  1733                           ;i2c.c: 118: SSP1BUF = b;
  1734  00164A  C09A  FFC9         	movff	I2C_writeByte@b,4041	;volatile
  1735                           
  1736                           ;i2c.c: 120: break;
  1737  00164E  0012               	return	
  1738  001650                     l505:
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;i2c.c: 122: SSP2BUF = b;
  1742  001650  C09A  FF6F         	movff	I2C_writeByte@b,3951	;volatile
  1743  001654                     l506:
  1744                           
  1745                           ; BSR set to: 0
  1746  001654  B06D               	btfsc	3949,0,c	;volatile
  1747  001656  D7FE               	goto	l506
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;i2c.c: 124: I2C_wait(channel);
  1751                           
  1752                           ; BSR set to: 0
  1753  001658  C096  F092         	movff	I2C_writeByte@channel,I2C_wait@channel
  1754  00165C  C097  F093         	movff	I2C_writeByte@channel+1,I2C_wait@channel+1
  1755  001660  EC47  F00B         	call	_I2C_wait	;wreg free
  1756                           
  1757                           ;i2c.c: 125: break;
  1758  001664  0012               	return	
  1759  001666                     l3455:
  1760  001666  0100               	movlb	0	; () banked
  1761  001668  C096  F098         	movff	I2C_writeByte@channel,??_I2C_writeByte
  1762  00166C  0100               	movlb	0	; () banked
  1763  00166E  C097  F099         	movff	I2C_writeByte@channel+1,??_I2C_writeByte+1
  1764                           
  1765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1766                           ; Switch size 1, requested type "space"
  1767                           ; Number of cases is 1, Range of values is 0 to 0
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte            4     3 (average)
  1771                           ;	Chosen strategy is simple_byte
  1772  001672  0100               	movlb	0	; () banked
  1773  001674  5199               	movf	(??_I2C_writeByte+1)& (0+255),w,b
  1774  001676  0A00               	xorlw	0	; case 0
  1775  001678  A4D8               	btfss	status,2,c
  1776  00167A  0012               	return	
  1777                           
  1778                           ; BSR set to: 0
  1779                           ; Switch size 1, requested type "space"
  1780                           ; Number of cases is 2, Range of values is 1 to 2
  1781                           ; switch strategies available:
  1782                           ; Name         Instructions Cycles
  1783                           ; simple_byte            7     4 (average)
  1784                           ;	Chosen strategy is simple_byte
  1785  00167C  0100               	movlb	0	; () banked
  1786  00167E  5198               	movf	??_I2C_writeByte& (0+255),w,b
  1787  001680  0A01               	xorlw	1	; case 1
  1788  001682  B4D8               	btfsc	status,2,c
  1789  001684  D7DC               	goto	l3447
  1790  001686  0A03               	xorlw	3	; case 2
  1791  001688  A4D8               	btfss	status,2,c
  1792  00168A  0012               	return	
  1793  00168C  D7E1               	goto	l505
  1794  00168E                     __end_of_I2C_writeByte:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           indf0	equ	0xFEF
  1801                           postinc0	equ	0xFEE
  1802                           fsr0h	equ	0xFEA
  1803                           fsr0l	equ	0xFE9
  1804                           wreg	equ	0xFE8
  1805                           postdec1	equ	0xFE5
  1806                           fsr1h	equ	0xFE2
  1807                           fsr1l	equ	0xFE1
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function _I2C_stop *****************
  1811 ;; Defined at:
  1812 ;;		line 42 in file "i2c.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  channel         2    4[BANK0 ] unsigned int 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;		None               void
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;Total ram usage:        4 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    5
  1833 ;; This function calls:
  1834 ;;		_I2C_wait
  1835 ;; This function is called by:
  1836 ;;		_I2C_getByteFromAddress
  1837 ;;		_I2C_writeEEPROMPage
  1838 ;;		_I2C_readEEPROMPage
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text7
  1843  00184A                     __ptext7:
  1844                           	opt stack 0
  1845  00184A                     _I2C_stop:
  1846                           	opt stack 23
  1847                           
  1848                           ;i2c.c: 44: switch(channel)
  1849                           
  1850                           ;incstack = 0
  1851  00184A  D00C               	goto	l3437
  1852  00184C                     l3431:
  1853                           
  1854                           ;i2c.c: 47: I2C_wait(channel);
  1855  00184C  C096  F092         	movff	I2C_stop@channel,I2C_wait@channel
  1856  001850  C097  F093         	movff	I2C_stop@channel+1,I2C_wait@channel+1
  1857  001854  EC47  F00B         	call	_I2C_wait	;wreg free
  1858                           
  1859                           ;i2c.c: 48: SSP1CON2bits.PEN1 = 1;
  1860  001858  84C5               	bsf	4037,2,c	;volatile
  1861                           
  1862                           ;i2c.c: 49: break;
  1863  00185A  0012               	return	
  1864  00185C                     l464:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;i2c.c: 51: SSP2CON2bits.PEN2 = 1;
  1868  00185C  846B               	bsf	3947,2,c	;volatile
  1869  00185E                     l465:
  1870  00185E  A46B               	btfss	3947,2,c	;volatile
  1871  001860  0012               	return	
  1872  001862  D7FD               	goto	l465
  1873  001864                     l3437:
  1874  001864  0100               	movlb	0	; () banked
  1875  001866  C096  F098         	movff	I2C_stop@channel,??_I2C_stop
  1876  00186A  0100               	movlb	0	; () banked
  1877  00186C  C097  F099         	movff	I2C_stop@channel+1,??_I2C_stop+1
  1878                           
  1879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1880                           ; Switch size 1, requested type "space"
  1881                           ; Number of cases is 1, Range of values is 0 to 0
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte            4     3 (average)
  1885                           ;	Chosen strategy is simple_byte
  1886  001870  0100               	movlb	0	; () banked
  1887  001872  5199               	movf	(??_I2C_stop+1)& (0+255),w,b
  1888  001874  0A00               	xorlw	0	; case 0
  1889  001876  A4D8               	btfss	status,2,c
  1890  001878  0012               	return	
  1891                           
  1892                           ; BSR set to: 0
  1893                           ; Switch size 1, requested type "space"
  1894                           ; Number of cases is 2, Range of values is 1 to 2
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; simple_byte            7     4 (average)
  1898                           ;	Chosen strategy is simple_byte
  1899  00187A  0100               	movlb	0	; () banked
  1900  00187C  5198               	movf	??_I2C_stop& (0+255),w,b
  1901  00187E  0A01               	xorlw	1	; case 1
  1902  001880  B4D8               	btfsc	status,2,c
  1903  001882  D7E4               	goto	l3431
  1904  001884  0A03               	xorlw	3	; case 2
  1905  001886  A4D8               	btfss	status,2,c
  1906  001888  0012               	return	
  1907  00188A  D7E8               	goto	l464
  1908  00188C                     __end_of_I2C_stop:
  1909                           	opt stack 0
  1910                           tblptru	equ	0xFF8
  1911                           tblptrh	equ	0xFF7
  1912                           tblptrl	equ	0xFF6
  1913                           tablat	equ	0xFF5
  1914                           indf0	equ	0xFEF
  1915                           postinc0	equ	0xFEE
  1916                           fsr0h	equ	0xFEA
  1917                           fsr0l	equ	0xFE9
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1h	equ	0xFE2
  1921                           fsr1l	equ	0xFE1
  1922                           status	equ	0xFD8
  1923                           
  1924 ;; *************** function _I2C_start *****************
  1925 ;; Defined at:
  1926 ;;		line 8 in file "i2c.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  channel         2    4[BANK0 ] unsigned int 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;		None               void
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        4 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    5
  1947 ;; This function calls:
  1948 ;;		_I2C_wait
  1949 ;; This function is called by:
  1950 ;;		_I2C_getByteFromAddress
  1951 ;;		_I2C_putBytesPage
  1952 ;;		_I2C_getBytesPage
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text8
  1957  00188C                     __ptext8:
  1958                           	opt stack 0
  1959  00188C                     _I2C_start:
  1960                           	opt stack 23
  1961                           
  1962                           ;i2c.c: 10: switch(channel)
  1963                           
  1964                           ;incstack = 0
  1965  00188C  D00C               	goto	l3421
  1966  00188E                     l3415:
  1967                           
  1968                           ;i2c.c: 13: I2C_wait(channel);
  1969  00188E  C096  F092         	movff	I2C_start@channel,I2C_wait@channel
  1970  001892  C097  F093         	movff	I2C_start@channel+1,I2C_wait@channel+1
  1971  001896  EC47  F00B         	call	_I2C_wait	;wreg free
  1972                           
  1973                           ;i2c.c: 14: SSP1CON2bits.SEN = 1;
  1974  00189A  80C5               	bsf	4037,0,c	;volatile
  1975                           
  1976                           ;i2c.c: 15: break;
  1977  00189C  0012               	return	
  1978  00189E                     l442:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;i2c.c: 17: SSP2CON2bits.SEN2 = 1;
  1982  00189E  806B               	bsf	3947,0,c	;volatile
  1983  0018A0                     l443:
  1984  0018A0  A06B               	btfss	3947,0,c	;volatile
  1985  0018A2  0012               	return	
  1986  0018A4  D7FD               	goto	l443
  1987  0018A6                     l3421:
  1988  0018A6  0100               	movlb	0	; () banked
  1989  0018A8  C096  F098         	movff	I2C_start@channel,??_I2C_start
  1990  0018AC  0100               	movlb	0	; () banked
  1991  0018AE  C097  F099         	movff	I2C_start@channel+1,??_I2C_start+1
  1992                           
  1993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1994                           ; Switch size 1, requested type "space"
  1995                           ; Number of cases is 1, Range of values is 0 to 0
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            4     3 (average)
  1999                           ;	Chosen strategy is simple_byte
  2000  0018B2  0100               	movlb	0	; () banked
  2001  0018B4  5199               	movf	(??_I2C_start+1)& (0+255),w,b
  2002  0018B6  0A00               	xorlw	0	; case 0
  2003  0018B8  A4D8               	btfss	status,2,c
  2004  0018BA  0012               	return	
  2005                           
  2006                           ; BSR set to: 0
  2007                           ; Switch size 1, requested type "space"
  2008                           ; Number of cases is 2, Range of values is 1 to 2
  2009                           ; switch strategies available:
  2010                           ; Name         Instructions Cycles
  2011                           ; simple_byte            7     4 (average)
  2012                           ;	Chosen strategy is simple_byte
  2013  0018BC  0100               	movlb	0	; () banked
  2014  0018BE  5198               	movf	??_I2C_start& (0+255),w,b
  2015  0018C0  0A01               	xorlw	1	; case 1
  2016  0018C2  B4D8               	btfsc	status,2,c
  2017  0018C4  D7E4               	goto	l3415
  2018  0018C6  0A03               	xorlw	3	; case 2
  2019  0018C8  A4D8               	btfss	status,2,c
  2020  0018CA  0012               	return	
  2021  0018CC  D7E8               	goto	l442
  2022  0018CE                     __end_of_I2C_start:
  2023                           	opt stack 0
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           indf0	equ	0xFEF
  2029                           postinc0	equ	0xFEE
  2030                           fsr0h	equ	0xFEA
  2031                           fsr0l	equ	0xFE9
  2032                           wreg	equ	0xFE8
  2033                           postdec1	equ	0xFE5
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _I2C_readByte *****************
  2039 ;; Defined at:
  2040 ;;		line 131 in file "i2c.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  channel         2    4[BANK0 ] unsigned int 
  2043 ;;  ack             1    6[BANK0 ] unsigned char 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  temp            1    9[BANK0 ] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      unsigned char 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:        6 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    5
  2062 ;; This function calls:
  2063 ;;		_I2C_ack
  2064 ;;		_I2C_nack
  2065 ;;		_I2C_wait
  2066 ;; This function is called by:
  2067 ;;		_I2C_getByteFromAddress
  2068 ;;		_I2C_getBytesPage
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text9
  2073  0013D8                     __ptext9:
  2074                           	opt stack 0
  2075  0013D8                     _I2C_readByte:
  2076                           	opt stack 23
  2077                           
  2078                           ;i2c.c: 133: unsigned char temp;
  2079                           ;i2c.c: 134: switch(channel)
  2080                           
  2081                           ;incstack = 0
  2082  0013D8  D03D               	goto	l3495
  2083  0013DA                     l3465:
  2084                           
  2085                           ;i2c.c: 138: I2C_wait(channel);
  2086  0013DA  C096  F092         	movff	I2C_readByte@channel,I2C_wait@channel
  2087  0013DE  C097  F093         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2088  0013E2  EC47  F00B         	call	_I2C_wait	;wreg free
  2089                           
  2090                           ;i2c.c: 139: SSP1CON2bits.RCEN1 = 1;
  2091  0013E6  86C5               	bsf	4037,3,c	;volatile
  2092                           
  2093                           ;i2c.c: 140: I2C_wait(channel);
  2094  0013E8  C096  F092         	movff	I2C_readByte@channel,I2C_wait@channel
  2095  0013EC  C097  F093         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2096  0013F0  EC47  F00B         	call	_I2C_wait	;wreg free
  2097                           
  2098                           ;i2c.c: 141: temp = SSP1BUF;
  2099  0013F4  CFC9 F09B          	movff	4041,I2C_readByte@temp	;volatile
  2100                           
  2101                           ;i2c.c: 142: I2C_wait(channel);
  2102  0013F8  C096  F092         	movff	I2C_readByte@channel,I2C_wait@channel
  2103  0013FC  C097  F093         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2104  001400  EC47  F00B         	call	_I2C_wait	;wreg free
  2105                           
  2106                           ;i2c.c: 144: if(ack)
  2107  001404  0100               	movlb	0	; () banked
  2108  001406  5198               	movf	I2C_readByte@ack& (0+255),w,b
  2109  001408  B4D8               	btfsc	status,2,c
  2110  00140A  D007               	goto	l3475
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;i2c.c: 145: {
  2114                           ;i2c.c: 146: I2C_ack(channel);
  2115  00140C  C096  F092         	movff	I2C_readByte@channel,I2C_ack@channel
  2116  001410  C097  F093         	movff	I2C_readByte@channel+1,I2C_ack@channel+1
  2117  001414  ECD7  F00C         	call	_I2C_ack	;wreg free
  2118                           
  2119                           ;i2c.c: 147: }
  2120  001418  D006               	goto	l3477
  2121  00141A                     l3475:
  2122                           
  2123                           ;i2c.c: 148: else
  2124                           ;i2c.c: 149: {
  2125                           ;i2c.c: 150: I2C_nack(channel);
  2126  00141A  C096  F092         	movff	I2C_readByte@channel,I2C_nack@channel
  2127  00141E  C097  F093         	movff	I2C_readByte@channel+1,I2C_nack@channel+1
  2128  001422  ECBC  F00C         	call	_I2C_nack	;wreg free
  2129  001426                     l3477:
  2130                           
  2131                           ;i2c.c: 151: }
  2132                           ;i2c.c: 153: return temp;
  2133  001426  0100               	movlb	0	; () banked
  2134  001428  519B               	movf	I2C_readByte@temp& (0+255),w,b
  2135  00142A  0012               	return	
  2136  00142C                     l518:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;i2c.c: 155: SSP2CON2bits.RCEN2 = 1;
  2140  00142C  866B               	bsf	3947,3,c	;volatile
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;i2c.c: 156: I2C_wait(channel);
  2144  00142E  C096  F092         	movff	I2C_readByte@channel,I2C_wait@channel
  2145  001432  C097  F093         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2146  001436  EC47  F00B         	call	_I2C_wait	;wreg free
  2147                           
  2148                           ;i2c.c: 157: temp = SSP2BUF;
  2149  00143A  CF6F F09B          	movff	3951,I2C_readByte@temp	;volatile
  2150                           
  2151                           ;i2c.c: 158: I2C_wait(channel);
  2152  00143E  C096  F092         	movff	I2C_readByte@channel,I2C_wait@channel
  2153  001442  C097  F093         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2154  001446  EC47  F00B         	call	_I2C_wait	;wreg free
  2155                           
  2156                           ;i2c.c: 159: return temp;
  2157  00144A  0100               	movlb	0	; () banked
  2158  00144C  519B               	movf	I2C_readByte@temp& (0+255),w,b
  2159  00144E  0012               	return	
  2160  001450                     l3489:
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;i2c.c: 161: return 99;
  2164  001450  0E63               	movlw	99
  2165  001452  0012               	return	
  2166  001454                     l3495:
  2167  001454  0100               	movlb	0	; () banked
  2168  001456  C096  F099         	movff	I2C_readByte@channel,??_I2C_readByte
  2169  00145A  0100               	movlb	0	; () banked
  2170  00145C  C097  F09A         	movff	I2C_readByte@channel+1,??_I2C_readByte+1
  2171                           
  2172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2173                           ; Switch size 1, requested type "space"
  2174                           ; Number of cases is 1, Range of values is 0 to 0
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            4     3 (average)
  2178                           ;	Chosen strategy is simple_byte
  2179  001460  0100               	movlb	0	; () banked
  2180  001462  519A               	movf	(??_I2C_readByte+1)& (0+255),w,b
  2181  001464  0A00               	xorlw	0	; case 0
  2182  001466  A4D8               	btfss	status,2,c
  2183  001468  D7F3               	goto	l3489
  2184                           
  2185                           ; BSR set to: 0
  2186                           ; Switch size 1, requested type "space"
  2187                           ; Number of cases is 2, Range of values is 1 to 2
  2188                           ; switch strategies available:
  2189                           ; Name         Instructions Cycles
  2190                           ; simple_byte            7     4 (average)
  2191                           ;	Chosen strategy is simple_byte
  2192  00146A  0100               	movlb	0	; () banked
  2193  00146C  5199               	movf	??_I2C_readByte& (0+255),w,b
  2194  00146E  0A01               	xorlw	1	; case 1
  2195  001470  B4D8               	btfsc	status,2,c
  2196  001472  D7B3               	goto	l3465
  2197  001474  0A03               	xorlw	3	; case 2
  2198  001476  B4D8               	btfsc	status,2,c
  2199  001478  D7D9               	goto	l518
  2200  00147A  D7EA               	goto	l3489
  2201  00147C                     __end_of_I2C_readByte:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           indf0	equ	0xFEF
  2208                           postinc0	equ	0xFEE
  2209                           fsr0h	equ	0xFEA
  2210                           fsr0l	equ	0xFE9
  2211                           wreg	equ	0xFE8
  2212                           postdec1	equ	0xFE5
  2213                           fsr1h	equ	0xFE2
  2214                           fsr1l	equ	0xFE1
  2215                           status	equ	0xFD8
  2216                           
  2217 ;; *************** function _I2C_wait *****************
  2218 ;; Defined at:
  2219 ;;		line 97 in file "i2c.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  channel         2    0[BANK0 ] unsigned int 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;		None               void
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;Total ram usage:        4 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    4
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_I2C_start
  2244 ;;		_I2C_stop
  2245 ;;		_I2C_writeByte
  2246 ;;		_I2C_readByte
  2247 ;;		_I2C_restart
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text10
  2252  00168E                     __ptext10:
  2253                           	opt stack 0
  2254  00168E                     _I2C_wait:
  2255                           	opt stack 23
  2256                           
  2257                           ;i2c.c: 99: switch(channel)
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;incstack = 0
  2261  00168E  D014               	goto	l3281
  2262  001690                     l3271:
  2263  001690  CFC5 F094          	movff	4037,??_I2C_wait	;volatile
  2264  001694  0E1F               	movlw	31
  2265  001696  0100               	movlb	0	; () banked
  2266  001698  1794               	andwf	??_I2C_wait& (0+255),f,b
  2267  00169A  A4D8               	btfss	status,2,c
  2268  00169C  D7F9               	goto	l3271
  2269                           
  2270                           ; BSR set to: 0
  2271  00169E  A4C7               	btfss	4039,2,c	;volatile
  2272  0016A0  0012               	return	
  2273  0016A2  D7F6               	goto	l3271
  2274  0016A4                     l3275:
  2275                           
  2276                           ; BSR set to: 0
  2277  0016A4  CF6B F094          	movff	3947,??_I2C_wait	;volatile
  2278  0016A8  0E1F               	movlw	31
  2279  0016AA  0100               	movlb	0	; () banked
  2280  0016AC  1794               	andwf	??_I2C_wait& (0+255),f,b
  2281  0016AE  A4D8               	btfss	status,2,c
  2282  0016B0  D7F9               	goto	l3275
  2283                           
  2284                           ; BSR set to: 0
  2285  0016B2  A46D               	btfss	3949,2,c	;volatile
  2286  0016B4  0012               	return	
  2287  0016B6  D7F6               	goto	l3275
  2288  0016B8                     l3281:
  2289  0016B8  0100               	movlb	0	; () banked
  2290  0016BA  C092  F094         	movff	I2C_wait@channel,??_I2C_wait
  2291  0016BE  0100               	movlb	0	; () banked
  2292  0016C0  C093  F095         	movff	I2C_wait@channel+1,??_I2C_wait+1
  2293                           
  2294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2295                           ; Switch size 1, requested type "space"
  2296                           ; Number of cases is 1, Range of values is 0 to 0
  2297                           ; switch strategies available:
  2298                           ; Name         Instructions Cycles
  2299                           ; simple_byte            4     3 (average)
  2300                           ;	Chosen strategy is simple_byte
  2301  0016C4  0100               	movlb	0	; () banked
  2302  0016C6  5195               	movf	(??_I2C_wait+1)& (0+255),w,b
  2303  0016C8  0A00               	xorlw	0	; case 0
  2304  0016CA  A4D8               	btfss	status,2,c
  2305  0016CC  0012               	return	
  2306                           
  2307                           ; BSR set to: 0
  2308                           ; Switch size 1, requested type "space"
  2309                           ; Number of cases is 2, Range of values is 1 to 2
  2310                           ; switch strategies available:
  2311                           ; Name         Instructions Cycles
  2312                           ; simple_byte            7     4 (average)
  2313                           ;	Chosen strategy is simple_byte
  2314  0016CE  0100               	movlb	0	; () banked
  2315  0016D0  5194               	movf	??_I2C_wait& (0+255),w,b
  2316  0016D2  0A01               	xorlw	1	; case 1
  2317  0016D4  B4D8               	btfsc	status,2,c
  2318  0016D6  D7DC               	goto	l3271
  2319  0016D8  0A03               	xorlw	3	; case 2
  2320  0016DA  A4D8               	btfss	status,2,c
  2321  0016DC  0012               	return	
  2322  0016DE  D7E2               	goto	l3275
  2323  0016E0                     __end_of_I2C_wait:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           indf0	equ	0xFEF
  2330                           postinc0	equ	0xFEE
  2331                           fsr0h	equ	0xFEA
  2332                           fsr0l	equ	0xFE9
  2333                           wreg	equ	0xFE8
  2334                           postdec1	equ	0xFE5
  2335                           fsr1h	equ	0xFE2
  2336                           fsr1l	equ	0xFE1
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _I2C_nack *****************
  2340 ;; Defined at:
  2341 ;;		line 78 in file "i2c.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  channel         2    0[BANK0 ] unsigned int 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    4
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_I2C_readByte
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text11
  2370  001978                     __ptext11:
  2371                           	opt stack 0
  2372  001978                     _I2C_nack:
  2373                           	opt stack 23
  2374                           
  2375                           ;i2c.c: 80: switch(channel)
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;incstack = 0
  2379  001978  D006               	goto	l3303
  2380  00197A                     l481:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;i2c.c: 83: SSP1CON2bits.ACKDT1 = 1;
  2384  00197A  8AC5               	bsf	4037,5,c	;volatile
  2385                           
  2386                           ;i2c.c: 84: SSP1CON2bits.ACKEN1 = 1;
  2387  00197C  88C5               	bsf	4037,4,c	;volatile
  2388                           
  2389                           ;i2c.c: 86: break;
  2390  00197E  0012               	return	
  2391  001980                     l483:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;i2c.c: 88: SSP2CON2bits.ACKDT2 = 1;
  2395  001980  8A6B               	bsf	3947,5,c	;volatile
  2396                           
  2397                           ;i2c.c: 89: SSP2CON2bits.ACKEN2 = 1;
  2398  001982  886B               	bsf	3947,4,c	;volatile
  2399                           
  2400                           ;i2c.c: 91: break;
  2401  001984  0012               	return	
  2402  001986                     l3303:
  2403  001986  0100               	movlb	0	; () banked
  2404  001988  C092  F094         	movff	I2C_nack@channel,??_I2C_nack
  2405  00198C  0100               	movlb	0	; () banked
  2406  00198E  C093  F095         	movff	I2C_nack@channel+1,??_I2C_nack+1
  2407                           
  2408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2409                           ; Switch size 1, requested type "space"
  2410                           ; Number of cases is 1, Range of values is 0 to 0
  2411                           ; switch strategies available:
  2412                           ; Name         Instructions Cycles
  2413                           ; simple_byte            4     3 (average)
  2414                           ;	Chosen strategy is simple_byte
  2415  001992  0100               	movlb	0	; () banked
  2416  001994  5195               	movf	(??_I2C_nack+1)& (0+255),w,b
  2417  001996  0A00               	xorlw	0	; case 0
  2418  001998  A4D8               	btfss	status,2,c
  2419  00199A  0012               	return	
  2420                           
  2421                           ; BSR set to: 0
  2422                           ; Switch size 1, requested type "space"
  2423                           ; Number of cases is 2, Range of values is 1 to 2
  2424                           ; switch strategies available:
  2425                           ; Name         Instructions Cycles
  2426                           ; simple_byte            7     4 (average)
  2427                           ;	Chosen strategy is simple_byte
  2428  00199C  0100               	movlb	0	; () banked
  2429  00199E  5194               	movf	??_I2C_nack& (0+255),w,b
  2430  0019A0  0A01               	xorlw	1	; case 1
  2431  0019A2  B4D8               	btfsc	status,2,c
  2432  0019A4  D7EA               	goto	l481
  2433  0019A6  0A03               	xorlw	3	; case 2
  2434  0019A8  A4D8               	btfss	status,2,c
  2435  0019AA  0012               	return	
  2436  0019AC  D7E9               	goto	l483
  2437  0019AE                     __end_of_I2C_nack:
  2438                           	opt stack 0
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           indf0	equ	0xFEF
  2444                           postinc0	equ	0xFEE
  2445                           fsr0h	equ	0xFEA
  2446                           fsr0l	equ	0xFE9
  2447                           wreg	equ	0xFE8
  2448                           postdec1	equ	0xFE5
  2449                           fsr1h	equ	0xFE2
  2450                           fsr1l	equ	0xFE1
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _I2C_ack *****************
  2454 ;; Defined at:
  2455 ;;		line 59 in file "i2c.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  channel         2    0[BANK0 ] unsigned int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;Total ram usage:        4 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    4
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_I2C_readByte
  2480 ;;		_I2C_getBytesPage
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text12
  2485  0019AE                     __ptext12:
  2486                           	opt stack 0
  2487  0019AE                     _I2C_ack:
  2488                           	opt stack 23
  2489                           
  2490                           ;i2c.c: 61: switch(channel)
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;incstack = 0
  2494  0019AE  D006               	goto	l3291
  2495  0019B0                     l473:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;i2c.c: 64: SSP1CON2bits.ACKDT1 = 0;
  2499  0019B0  9AC5               	bcf	4037,5,c	;volatile
  2500                           
  2501                           ;i2c.c: 65: SSP1CON2bits.ACKEN1 = 1;
  2502  0019B2  88C5               	bsf	4037,4,c	;volatile
  2503                           
  2504                           ;i2c.c: 67: break;
  2505  0019B4  0012               	return	
  2506  0019B6                     l475:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;i2c.c: 69: SSP2CON2bits.ACKDT2 = 0;
  2510  0019B6  9A6B               	bcf	3947,5,c	;volatile
  2511                           
  2512                           ;i2c.c: 70: SSP2CON2bits.ACKEN2 = 1;
  2513  0019B8  886B               	bsf	3947,4,c	;volatile
  2514                           
  2515                           ;i2c.c: 72: break;
  2516  0019BA  0012               	return	
  2517  0019BC                     l3291:
  2518  0019BC  0100               	movlb	0	; () banked
  2519  0019BE  C092  F094         	movff	I2C_ack@channel,??_I2C_ack
  2520  0019C2  0100               	movlb	0	; () banked
  2521  0019C4  C093  F095         	movff	I2C_ack@channel+1,??_I2C_ack+1
  2522                           
  2523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2524                           ; Switch size 1, requested type "space"
  2525                           ; Number of cases is 1, Range of values is 0 to 0
  2526                           ; switch strategies available:
  2527                           ; Name         Instructions Cycles
  2528                           ; simple_byte            4     3 (average)
  2529                           ;	Chosen strategy is simple_byte
  2530  0019C8  0100               	movlb	0	; () banked
  2531  0019CA  5195               	movf	(??_I2C_ack+1)& (0+255),w,b
  2532  0019CC  0A00               	xorlw	0	; case 0
  2533  0019CE  A4D8               	btfss	status,2,c
  2534  0019D0  0012               	return	
  2535                           
  2536                           ; BSR set to: 0
  2537                           ; Switch size 1, requested type "space"
  2538                           ; Number of cases is 2, Range of values is 1 to 2
  2539                           ; switch strategies available:
  2540                           ; Name         Instructions Cycles
  2541                           ; simple_byte            7     4 (average)
  2542                           ;	Chosen strategy is simple_byte
  2543  0019D2  0100               	movlb	0	; () banked
  2544  0019D4  5194               	movf	??_I2C_ack& (0+255),w,b
  2545  0019D6  0A01               	xorlw	1	; case 1
  2546  0019D8  B4D8               	btfsc	status,2,c
  2547  0019DA  D7EA               	goto	l473
  2548  0019DC  0A03               	xorlw	3	; case 2
  2549  0019DE  A4D8               	btfss	status,2,c
  2550  0019E0  0012               	return	
  2551  0019E2  D7E9               	goto	l475
  2552  0019E4                     __end_of_I2C_ack:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           indf0	equ	0xFEF
  2559                           postinc0	equ	0xFEE
  2560                           fsr0h	equ	0xFEA
  2561                           fsr0l	equ	0xFE9
  2562                           wreg	equ	0xFE8
  2563                           postdec1	equ	0xFE5
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _HW_init *****************
  2569 ;; Defined at:
  2570 ;;		line 24 in file "system.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;		None               void
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    5
  2591 ;; This function calls:
  2592 ;;		_ADC_init
  2593 ;;		_GPIO_init
  2594 ;;		_I2C_init
  2595 ;;		_IRQ_init
  2596 ;;		_OSC_init
  2597 ;;		_USART_init
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text13
  2604  001778                     __ptext13:
  2605                           	opt stack 0
  2606  001778                     _HW_init:
  2607                           	opt stack 24
  2608                           
  2609                           ;system.c: 27: OSC_init();
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;incstack = 0
  2613  001778  EC37  F00D         	call	_OSC_init	;wreg free
  2614                           
  2615                           ;system.c: 29: GPIO_init();
  2616  00177C  ECF2  F00C         	call	_GPIO_init	;wreg free
  2617                           
  2618                           ;system.c: 31: ADC_init((unsigned int)0);
  2619  001780  0E00               	movlw	0
  2620  001782  0100               	movlb	0	; () banked
  2621  001784  6F93               	movwf	(ADC_init@channel+1)& (0+255),b
  2622  001786  0E00               	movlw	0
  2623  001788  0100               	movlb	0	; () banked
  2624  00178A  6F92               	movwf	ADC_init@channel& (0+255),b
  2625  00178C  EC28  F00D         	call	_ADC_init	;wreg free
  2626                           
  2627                           ;system.c: 33: USART_init((unsigned int)1, 115200);
  2628  001790  0E00               	movlw	0
  2629  001792  0100               	movlb	0	; () banked
  2630  001794  6F93               	movwf	(USART_init@channel+1)& (0+255),b
  2631  001796  0E01               	movlw	1
  2632  001798  0100               	movlb	0	; () banked
  2633  00179A  6F92               	movwf	USART_init@channel& (0+255),b
  2634  00179C  0EC2               	movlw	194
  2635  00179E  0100               	movlb	0	; () banked
  2636  0017A0  6F95               	movwf	(USART_init@baudrate+1)& (0+255),b
  2637  0017A2  0E00               	movlw	0
  2638  0017A4  0100               	movlb	0	; () banked
  2639  0017A6  6F94               	movwf	USART_init@baudrate& (0+255),b
  2640  0017A8  ECFC  F008         	call	_USART_init	;wreg free
  2641                           
  2642                           ;system.c: 34: IRQ_init();
  2643  0017AC  EC3C  F00D         	call	_IRQ_init	;wreg free
  2644                           
  2645                           ;system.c: 35: I2C_init(1);
  2646  0017B0  0E00               	movlw	0
  2647  0017B2  0100               	movlb	0	; () banked
  2648  0017B4  6F93               	movwf	(I2C_init@channel+1)& (0+255),b
  2649  0017B6  0E01               	movlw	1
  2650  0017B8  0100               	movlb	0	; () banked
  2651  0017BA  6F92               	movwf	I2C_init@channel& (0+255),b
  2652  0017BC  EC70  F00B         	call	_I2C_init	;wreg free
  2653  0017C0  0012               	return	
  2654  0017C2                     __end_of_HW_init:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           indf0	equ	0xFEF
  2661                           postinc0	equ	0xFEE
  2662                           fsr0h	equ	0xFEA
  2663                           fsr0l	equ	0xFE9
  2664                           wreg	equ	0xFE8
  2665                           postdec1	equ	0xFE5
  2666                           fsr1h	equ	0xFE2
  2667                           fsr1l	equ	0xFE1
  2668                           status	equ	0xFD8
  2669                           
  2670 ;; *************** function _USART_init *****************
  2671 ;; Defined at:
  2672 ;;		line 184 in file "system.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  channel         2    0[BANK0 ] unsigned int 
  2675 ;;  baudrate        2    2[BANK0 ] unsigned int 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  baudConfig      2    6[BANK0 ] unsigned int 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;Total ram usage:        8 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    4
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_HW_init
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text14
  2702  0011F8                     __ptext14:
  2703                           	opt stack 0
  2704  0011F8                     _USART_init:
  2705                           	opt stack 24
  2706                           
  2707                           ;system.c: 186: unsigned int baudConfig=0;
  2708                           
  2709                           ;incstack = 0
  2710  0011F8  0E00               	movlw	0
  2711  0011FA  0100               	movlb	0	; () banked
  2712  0011FC  6F99               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2713  0011FE  0E00               	movlw	0
  2714  001200  0100               	movlb	0	; () banked
  2715  001202  6F98               	movwf	USART_init@baudConfig& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;system.c: 187: RCIE = 1;
  2719  001204  8A9D               	bsf	3997,5,c	;volatile
  2720                           
  2721                           ;system.c: 188: switch(baudrate)
  2722  001206  D016               	goto	l3355
  2723  001208                     l3345:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;system.c: 191: baudConfig = 103;
  2727  001208  0E00               	movlw	0
  2728  00120A  0100               	movlb	0	; () banked
  2729  00120C  6F99               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2730  00120E  0E67               	movlw	103
  2731  001210  D00E               	goto	L5
  2732  001212                     l3347:
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;system.c: 194: baudConfig = 51;
  2736  001212  0E00               	movlw	0
  2737  001214  0100               	movlb	0	; () banked
  2738  001216  6F99               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2739  001218  0E33               	movlw	51
  2740  00121A  D009               	goto	L5
  2741  00121C                     l3349:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;system.c: 197: baudConfig = 16;
  2745  00121C  0E00               	movlw	0
  2746  00121E  0100               	movlb	0	; () banked
  2747  001220  6F99               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2748  001222  0E10               	movlw	16
  2749  001224  D004               	goto	L5
  2750  001226                     l3351:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;system.c: 200: baudConfig = 8;
  2754  001226  0E00               	movlw	0
  2755  001228  0100               	movlb	0	; () banked
  2756  00122A  6F99               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2757  00122C  0E08               	movlw	8
  2758  00122E                     L5:
  2759  00122E  0100               	movlb	0	; () banked
  2760  001230  6F98               	movwf	USART_init@baudConfig& (0+255),b
  2761                           
  2762                           ;system.c: 201: break;
  2763  001232  D049               	goto	l3359
  2764  001234                     l3355:
  2765                           
  2766                           ; BSR set to: 0
  2767  001234  0100               	movlb	0	; () banked
  2768  001236  C094  F096         	movff	USART_init@baudrate,??_USART_init
  2769  00123A  0100               	movlb	0	; () banked
  2770  00123C  C095  F097         	movff	USART_init@baudrate+1,??_USART_init+1
  2771                           
  2772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  2773                           ; Switch size 1, requested type "space"
  2774                           ; Number of cases is 4, Range of values is 37 to 225
  2775                           ; switch strategies available:
  2776                           ; Name         Instructions Cycles
  2777                           ; simple_byte           13     7 (average)
  2778                           ;	Chosen strategy is simple_byte
  2779  001240  0100               	movlb	0	; () banked
  2780  001242  5197               	movf	(??_USART_init+1)& (0+255),w,b
  2781  001244  0A25               	xorlw	37	; case 37
  2782  001246  B4D8               	btfsc	status,2,c
  2783  001248  D00A               	goto	l4259
  2784  00124A  0A6E               	xorlw	110	; case 75
  2785  00124C  B4D8               	btfsc	status,2,c
  2786  00124E  D00D               	goto	l4261
  2787  001250  0A89               	xorlw	137	; case 194
  2788  001252  B4D8               	btfsc	status,2,c
  2789  001254  D010               	goto	l4263
  2790  001256  0A23               	xorlw	35	; case 225
  2791  001258  B4D8               	btfsc	status,2,c
  2792  00125A  D013               	goto	l4265
  2793  00125C  D034               	goto	l3359
  2794  00125E                     l4259:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ; Switch size 1, requested type "space"
  2798                           ; Number of cases is 1, Range of values is 128 to 128
  2799                           ; switch strategies available:
  2800                           ; Name         Instructions Cycles
  2801                           ; simple_byte            4     3 (average)
  2802                           ;	Chosen strategy is simple_byte
  2803  00125E  0100               	movlb	0	; () banked
  2804  001260  5196               	movf	??_USART_init& (0+255),w,b
  2805  001262  0A80               	xorlw	128	; case 128
  2806  001264  B4D8               	btfsc	status,2,c
  2807  001266  D7D0               	goto	l3345
  2808  001268  D02E               	goto	l3359
  2809  00126A                     l4261:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ; Switch size 1, requested type "space"
  2813                           ; Number of cases is 1, Range of values is 0 to 0
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte            4     3 (average)
  2817                           ;	Chosen strategy is simple_byte
  2818  00126A  0100               	movlb	0	; () banked
  2819  00126C  5196               	movf	??_USART_init& (0+255),w,b
  2820  00126E  0A00               	xorlw	0	; case 0
  2821  001270  B4D8               	btfsc	status,2,c
  2822  001272  D7CF               	goto	l3347
  2823  001274  D028               	goto	l3359
  2824  001276                     l4263:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ; Switch size 1, requested type "space"
  2828                           ; Number of cases is 1, Range of values is 0 to 0
  2829                           ; switch strategies available:
  2830                           ; Name         Instructions Cycles
  2831                           ; simple_byte            4     3 (average)
  2832                           ;	Chosen strategy is simple_byte
  2833  001276  0100               	movlb	0	; () banked
  2834  001278  5196               	movf	??_USART_init& (0+255),w,b
  2835  00127A  0A00               	xorlw	0	; case 0
  2836  00127C  B4D8               	btfsc	status,2,c
  2837  00127E  D7D3               	goto	l3351
  2838  001280  D022               	goto	l3359
  2839  001282                     l4265:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ; Switch size 1, requested type "space"
  2843                           ; Number of cases is 1, Range of values is 0 to 0
  2844                           ; switch strategies available:
  2845                           ; Name         Instructions Cycles
  2846                           ; simple_byte            4     3 (average)
  2847                           ;	Chosen strategy is simple_byte
  2848  001282  0100               	movlb	0	; () banked
  2849  001284  5196               	movf	??_USART_init& (0+255),w,b
  2850  001286  0A00               	xorlw	0	; case 0
  2851  001288  B4D8               	btfsc	status,2,c
  2852  00128A  D7C8               	goto	l3349
  2853  00128C  D01C               	goto	l3359
  2854  00128E                     l171:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;system.c: 209: TRISCbits.RC6 = 1;
  2858  00128E  8C94               	bsf	3988,6,c	;volatile
  2859                           
  2860                           ;system.c: 211: TRISCbits.RC7 = 1;
  2861  001290  8E94               	bsf	3988,7,c	;volatile
  2862                           
  2863                           ;system.c: 212: ANSELCbits.ANSC6 = 0;
  2864  001292  010F               	movlb	15	; () banked
  2865  001294  9D3A               	bcf	58,6,b	;volatile
  2866                           
  2867                           ;system.c: 213: ANSELCbits.ANSC7 = 0;
  2868  001296  010F               	movlb	15	; () banked
  2869  001298  9F3A               	bcf	58,7,b	;volatile
  2870                           
  2871                           ;system.c: 216: TXSTA1bits.SYNC = 0;
  2872  00129A  98AC               	bcf	4012,4,c	;volatile
  2873                           
  2874                           ;system.c: 217: RCSTA1bits.SPEN = 1;
  2875  00129C  8EAB               	bsf	4011,7,c	;volatile
  2876                           
  2877                           ;system.c: 219: PIE1bits.RC1IE = 1;
  2878  00129E  8A9D               	bsf	3997,5,c	;volatile
  2879                           
  2880                           ;system.c: 221: TXSTA1bits.BRGH = 0;
  2881  0012A0  94AC               	bcf	4012,2,c	;volatile
  2882                           
  2883                           ;system.c: 222: BAUDCON1bits.BRG16 = 0;
  2884  0012A2  96B8               	bcf	4024,3,c	;volatile
  2885                           
  2886                           ;system.c: 223: SPBRG1 = baudConfig;
  2887  0012A4  C098  FFAF         	movff	USART_init@baudConfig,4015	;volatile
  2888                           
  2889                           ;system.c: 224: TXSTA1bits.TXEN = 1;
  2890  0012A8  8AAC               	bsf	4012,5,c	;volatile
  2891                           
  2892                           ;system.c: 225: RCSTA1bits.CREN = 1;
  2893  0012AA  88AB               	bsf	4011,4,c	;volatile
  2894                           
  2895                           ;system.c: 226: break;
  2896  0012AC  0012               	return	
  2897  0012AE                     l173:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;system.c: 229: TRISBbits.RB6 = 1;
  2901  0012AE  8C93               	bsf	3987,6,c	;volatile
  2902                           
  2903                           ;system.c: 231: TRISBbits.RB7 = 1;
  2904  0012B0  8E93               	bsf	3987,7,c	;volatile
  2905                           
  2906                           ;system.c: 234: RCSTA2bits.SPEN = 1;
  2907  0012B2  8E71               	bsf	3953,7,c	;volatile
  2908                           
  2909                           ;system.c: 237: PIE3bits.RC2IE = 1;
  2910  0012B4  8AA3               	bsf	4003,5,c	;volatile
  2911                           
  2912                           ;system.c: 240: TXSTA2bits.SYNC = 0;
  2913  0012B6  9872               	bcf	3954,4,c	;volatile
  2914                           
  2915                           ;system.c: 241: TXSTA2bits.BRGH = 0;
  2916  0012B8  9472               	bcf	3954,2,c	;volatile
  2917                           
  2918                           ;system.c: 243: BAUDCON2bits.BRG16 = 0;
  2919  0012BA  9670               	bcf	3952,3,c	;volatile
  2920                           
  2921                           ;system.c: 244: SPBRG2 = baudConfig;
  2922  0012BC  C098  FF75         	movff	USART_init@baudConfig,3957	;volatile
  2923                           
  2924                           ;system.c: 245: TXSTA2bits.TXEN = 1;
  2925  0012C0  8A72               	bsf	3954,5,c	;volatile
  2926                           
  2927                           ;system.c: 246: RCSTA2bits.CREN = 1;
  2928  0012C2  8871               	bsf	3953,4,c	;volatile
  2929                           
  2930                           ;system.c: 247: break;
  2931  0012C4  0012               	return	
  2932  0012C6                     l3359:
  2933                           
  2934                           ; BSR set to: 0
  2935  0012C6  0100               	movlb	0	; () banked
  2936  0012C8  C092  F096         	movff	USART_init@channel,??_USART_init
  2937  0012CC  0100               	movlb	0	; () banked
  2938  0012CE  C093  F097         	movff	USART_init@channel+1,??_USART_init+1
  2939                           
  2940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2941                           ; Switch size 1, requested type "space"
  2942                           ; Number of cases is 1, Range of values is 0 to 0
  2943                           ; switch strategies available:
  2944                           ; Name         Instructions Cycles
  2945                           ; simple_byte            4     3 (average)
  2946                           ;	Chosen strategy is simple_byte
  2947  0012D2  0100               	movlb	0	; () banked
  2948  0012D4  5197               	movf	(??_USART_init+1)& (0+255),w,b
  2949  0012D6  0A00               	xorlw	0	; case 0
  2950  0012D8  A4D8               	btfss	status,2,c
  2951  0012DA  0012               	return	
  2952                           
  2953                           ; BSR set to: 0
  2954                           ; Switch size 1, requested type "space"
  2955                           ; Number of cases is 2, Range of values is 1 to 2
  2956                           ; switch strategies available:
  2957                           ; Name         Instructions Cycles
  2958                           ; simple_byte            7     4 (average)
  2959                           ;	Chosen strategy is simple_byte
  2960  0012DC  0100               	movlb	0	; () banked
  2961  0012DE  5196               	movf	??_USART_init& (0+255),w,b
  2962  0012E0  0A01               	xorlw	1	; case 1
  2963  0012E2  B4D8               	btfsc	status,2,c
  2964  0012E4  D7D4               	goto	l171
  2965  0012E6  0A03               	xorlw	3	; case 2
  2966  0012E8  A4D8               	btfss	status,2,c
  2967  0012EA  0012               	return	
  2968  0012EC  D7E0               	goto	l173
  2969  0012EE                     __end_of_USART_init:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           indf0	equ	0xFEF
  2976                           postinc0	equ	0xFEE
  2977                           fsr0h	equ	0xFEA
  2978                           fsr0l	equ	0xFE9
  2979                           wreg	equ	0xFE8
  2980                           postdec1	equ	0xFE5
  2981                           fsr1h	equ	0xFE2
  2982                           fsr1l	equ	0xFE1
  2983                           status	equ	0xFD8
  2984                           
  2985 ;; *************** function _OSC_init *****************
  2986 ;; Defined at:
  2987 ;;		line 38 in file "system.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;		None               void
  2994 ;; Registers used:
  2995 ;;		None
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    4
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_HW_init
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text15
  3016  001A6E                     __ptext15:
  3017                           	opt stack 0
  3018  001A6E                     _OSC_init:
  3019                           	opt stack 24
  3020                           
  3021                           ;system.c: 44: OSCCONbits.IRCF0 = 1;
  3022                           
  3023                           ;incstack = 0
  3024  001A6E  88D3               	bsf	4051,4,c	;volatile
  3025                           
  3026                           ;system.c: 45: OSCCONbits.IRCF1 = 1;
  3027  001A70  8AD3               	bsf	4051,5,c	;volatile
  3028                           
  3029                           ;system.c: 46: OSCCONbits.IRCF2 = 1;
  3030  001A72  8CD3               	bsf	4051,6,c	;volatile
  3031                           
  3032                           ;system.c: 47: PLLEN = 1;
  3033  001A74  8C9B               	bsf	3995,6,c	;volatile
  3034  001A76  0012               	return	
  3035  001A78                     __end_of_OSC_init:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           indf0	equ	0xFEF
  3042                           postinc0	equ	0xFEE
  3043                           fsr0h	equ	0xFEA
  3044                           fsr0l	equ	0xFE9
  3045                           wreg	equ	0xFE8
  3046                           postdec1	equ	0xFE5
  3047                           fsr1h	equ	0xFE2
  3048                           fsr1l	equ	0xFE1
  3049                           status	equ	0xFD8
  3050                           
  3051 ;; *************** function _IRQ_init *****************
  3052 ;; Defined at:
  3053 ;;		line 101 in file "system.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;		None               void
  3060 ;; Registers used:
  3061 ;;		None
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    4
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_HW_init
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text16
  3082  001A78                     __ptext16:
  3083                           	opt stack 0
  3084  001A78                     _IRQ_init:
  3085                           	opt stack 24
  3086                           
  3087                           ;system.c: 103: GIE = 1;
  3088                           
  3089                           ;incstack = 0
  3090  001A78  8EF2               	bsf	intcon,7,c	;volatile
  3091                           
  3092                           ;system.c: 104: PEIE = 1;
  3093  001A7A  8CF2               	bsf	intcon,6,c	;volatile
  3094                           
  3095                           ;system.c: 105: IPEN = 1;
  3096  001A7C  8ED0               	bsf	4048,7,c	;volatile
  3097                           
  3098                           ;system.c: 107: RC1IE = 1;
  3099  001A7E  8A9D               	bsf	3997,5,c	;volatile
  3100  001A80  0012               	return	
  3101  001A82                     __end_of_IRQ_init:
  3102                           	opt stack 0
  3103                           tblptru	equ	0xFF8
  3104                           tblptrh	equ	0xFF7
  3105                           tblptrl	equ	0xFF6
  3106                           tablat	equ	0xFF5
  3107                           intcon	equ	0xFF2
  3108                           indf0	equ	0xFEF
  3109                           postinc0	equ	0xFEE
  3110                           fsr0h	equ	0xFEA
  3111                           fsr0l	equ	0xFE9
  3112                           wreg	equ	0xFE8
  3113                           postdec1	equ	0xFE5
  3114                           fsr1h	equ	0xFE2
  3115                           fsr1l	equ	0xFE1
  3116                           status	equ	0xFD8
  3117                           
  3118 ;; *************** function _I2C_init *****************
  3119 ;; Defined at:
  3120 ;;		line 253 in file "system.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  channel         2    0[BANK0 ] unsigned int 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;		None               void
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;Total ram usage:        4 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    4
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_HW_init
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text17
  3149  0016E0                     __ptext17:
  3150                           	opt stack 0
  3151  0016E0                     _I2C_init:
  3152                           	opt stack 24
  3153                           
  3154                           ;system.c: 256: switch(channel)
  3155                           
  3156                           ;incstack = 0
  3157  0016E0  D011               	goto	l3405
  3158  0016E2                     l179:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;system.c: 259: TRISCbits.RC3 = 1;
  3162  0016E2  8694               	bsf	3988,3,c	;volatile
  3163                           
  3164                           ;system.c: 260: TRISCbits.RC4 = 1;
  3165  0016E4  8894               	bsf	3988,4,c	;volatile
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;system.c: 261: SSP1STAT = 0xC0;
  3169  0016E6  0EC0               	movlw	192
  3170  0016E8  6EC7               	movwf	4039,c	;volatile
  3171                           
  3172                           ;system.c: 262: SSP1CON1 = 0x28;
  3173  0016EA  0E28               	movlw	40
  3174  0016EC  6EC6               	movwf	4038,c	;volatile
  3175                           
  3176                           ;system.c: 265: SSP1ADD = 9;
  3177  0016EE  0E09               	movlw	9
  3178  0016F0  6EC8               	movwf	4040,c	;volatile
  3179                           
  3180                           ;system.c: 268: break;
  3181  0016F2  0012               	return	
  3182  0016F4                     l181:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;system.c: 270: TRISBbits.RB1 = 1;
  3186  0016F4  8293               	bsf	3987,1,c	;volatile
  3187                           
  3188                           ;system.c: 271: TRISBbits.RB2 = 1;
  3189  0016F6  8493               	bsf	3987,2,c	;volatile
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;system.c: 272: SSP2STAT |= 0x80;
  3193  0016F8  8E6D               	bsf	3949,7,c	;volatile
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;system.c: 273: SSP2CON1 = 0x28;
  3197  0016FA  0E28               	movlw	40
  3198  0016FC  6E6C               	movwf	3948,c	;volatile
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;system.c: 276: SSP2ADD = 39;
  3202  0016FE  0E27               	movlw	39
  3203  001700  6E6E               	movwf	3950,c	;volatile
  3204                           
  3205                           ;system.c: 277: break;
  3206  001702  0012               	return	
  3207  001704                     l3405:
  3208  001704  0100               	movlb	0	; () banked
  3209  001706  C092  F094         	movff	I2C_init@channel,??_I2C_init
  3210  00170A  0100               	movlb	0	; () banked
  3211  00170C  C093  F095         	movff	I2C_init@channel+1,??_I2C_init+1
  3212                           
  3213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3214                           ; Switch size 1, requested type "space"
  3215                           ; Number of cases is 1, Range of values is 0 to 0
  3216                           ; switch strategies available:
  3217                           ; Name         Instructions Cycles
  3218                           ; simple_byte            4     3 (average)
  3219                           ;	Chosen strategy is simple_byte
  3220  001710  0100               	movlb	0	; () banked
  3221  001712  5195               	movf	(??_I2C_init+1)& (0+255),w,b
  3222  001714  0A00               	xorlw	0	; case 0
  3223  001716  A4D8               	btfss	status,2,c
  3224  001718  0012               	return	
  3225                           
  3226                           ; BSR set to: 0
  3227                           ; Switch size 1, requested type "space"
  3228                           ; Number of cases is 2, Range of values is 1 to 2
  3229                           ; switch strategies available:
  3230                           ; Name         Instructions Cycles
  3231                           ; simple_byte            7     4 (average)
  3232                           ;	Chosen strategy is simple_byte
  3233  00171A  0100               	movlb	0	; () banked
  3234  00171C  5194               	movf	??_I2C_init& (0+255),w,b
  3235  00171E  0A01               	xorlw	1	; case 1
  3236  001720  B4D8               	btfsc	status,2,c
  3237  001722  D7DF               	goto	l179
  3238  001724  0A03               	xorlw	3	; case 2
  3239  001726  A4D8               	btfss	status,2,c
  3240  001728  0012               	return	
  3241  00172A  D7E4               	goto	l181
  3242  00172C                     __end_of_I2C_init:
  3243                           	opt stack 0
  3244                           tblptru	equ	0xFF8
  3245                           tblptrh	equ	0xFF7
  3246                           tblptrl	equ	0xFF6
  3247                           tablat	equ	0xFF5
  3248                           intcon	equ	0xFF2
  3249                           indf0	equ	0xFEF
  3250                           postinc0	equ	0xFEE
  3251                           fsr0h	equ	0xFEA
  3252                           fsr0l	equ	0xFE9
  3253                           wreg	equ	0xFE8
  3254                           postdec1	equ	0xFE5
  3255                           fsr1h	equ	0xFE2
  3256                           fsr1l	equ	0xFE1
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function _GPIO_init *****************
  3260 ;; Defined at:
  3261 ;;		line 58 in file "system.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;		None               void
  3268 ;; Registers used:
  3269 ;;		wreg, status,2
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    4
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_HW_init
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text18
  3290  0019E4                     __ptext18:
  3291                           	opt stack 0
  3292  0019E4                     _GPIO_init:
  3293                           	opt stack 24
  3294                           
  3295                           ;system.c: 62: TRISCbits.RC5 = 1;
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;incstack = 0
  3299  0019E4  8A94               	bsf	3988,5,c	;volatile
  3300                           
  3301                           ;system.c: 66: TRISEbits.RE2 = 0;
  3302  0019E6  9496               	bcf	3990,2,c	;volatile
  3303                           
  3304                           ;system.c: 68: TRISBbits.RB0 = 0;
  3305  0019E8  9093               	bcf	3987,0,c	;volatile
  3306                           
  3307                           ;system.c: 74: TRISAbits.RA0 = 1;
  3308  0019EA  8092               	bsf	3986,0,c	;volatile
  3309                           
  3310                           ;system.c: 76: TRISAbits.RA1 = 1;
  3311  0019EC  8292               	bsf	3986,1,c	;volatile
  3312                           
  3313                           ;system.c: 78: TRISAbits.RA2 = 1;
  3314  0019EE  8492               	bsf	3986,2,c	;volatile
  3315                           
  3316                           ;system.c: 80: TRISAbits.RA3 = 1;
  3317  0019F0  8692               	bsf	3986,3,c	;volatile
  3318                           
  3319                           ;system.c: 82: TRISAbits.RA5 = 1;
  3320  0019F2  8A92               	bsf	3986,5,c	;volatile
  3321                           
  3322                           ;system.c: 84: TRISEbits.RE0 = 1;
  3323  0019F4  8096               	bsf	3990,0,c	;volatile
  3324                           
  3325                           ;system.c: 86: ANSELAbits.ANSA0 = 1;
  3326  0019F6  010F               	movlb	15	; () banked
  3327  0019F8  8138               	bsf	56,0,b	;volatile
  3328                           
  3329                           ;system.c: 87: ANSELAbits.ANSA1 = 1;
  3330  0019FA  010F               	movlb	15	; () banked
  3331  0019FC  8338               	bsf	56,1,b	;volatile
  3332                           
  3333                           ;system.c: 88: ANSELAbits.ANSA2 = 1;
  3334  0019FE  010F               	movlb	15	; () banked
  3335  001A00  8538               	bsf	56,2,b	;volatile
  3336                           
  3337                           ;system.c: 89: ANSELAbits.ANSA3 = 1;
  3338  001A02  010F               	movlb	15	; () banked
  3339  001A04  8738               	bsf	56,3,b	;volatile
  3340                           
  3341                           ;system.c: 90: ANSELAbits.ANSA5 = 1;
  3342  001A06  010F               	movlb	15	; () banked
  3343  001A08  8B38               	bsf	56,5,b	;volatile
  3344                           
  3345                           ;system.c: 91: ANSELEbits.ANSE0 = 1;
  3346  001A0A  010F               	movlb	15	; () banked
  3347  001A0C  813C               	bsf	60,0,b	;volatile
  3348                           
  3349                           ;system.c: 95: TRISCbits.RC3 = 1;
  3350  001A0E  8694               	bsf	3988,3,c	;volatile
  3351                           
  3352                           ;system.c: 96: TRISCbits.RC4 = 1;
  3353  001A10  8894               	bsf	3988,4,c	;volatile
  3354                           
  3355                           ; BSR set to: 15
  3356                           ;system.c: 98: ANSELC = 0x00;
  3357  001A12  0E00               	movlw	0
  3358  001A14  010F               	movlb	15	; () banked
  3359  001A16  6F3A               	movwf	58,b	;volatile
  3360                           
  3361                           ; BSR set to: 15
  3362  001A18  0012               	return	
  3363  001A1A                     __end_of_GPIO_init:
  3364                           	opt stack 0
  3365                           tblptru	equ	0xFF8
  3366                           tblptrh	equ	0xFF7
  3367                           tblptrl	equ	0xFF6
  3368                           tablat	equ	0xFF5
  3369                           intcon	equ	0xFF2
  3370                           indf0	equ	0xFEF
  3371                           postinc0	equ	0xFEE
  3372                           fsr0h	equ	0xFEA
  3373                           fsr0l	equ	0xFE9
  3374                           wreg	equ	0xFE8
  3375                           postdec1	equ	0xFE5
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           status	equ	0xFD8
  3379                           
  3380 ;; *************** function _ADC_init *****************
  3381 ;; Defined at:
  3382 ;;		line 163 in file "system.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  channel         2    0[BANK0 ] unsigned int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;		None               void
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    4
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_HW_init
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text19
  3411  001A50                     __ptext19:
  3412                           	opt stack 0
  3413  001A50                     _ADC_init:
  3414                           	opt stack 24
  3415                           
  3416                           ;system.c: 165: ADCON0 = (unsigned char)(channel<<2);
  3417                           
  3418                           ; BSR set to: 15
  3419                           ;incstack = 0
  3420  001A50  0100               	movlb	0	; () banked
  3421  001A52  4592               	rlncf	ADC_init@channel& (0+255),w,b
  3422  001A54  46E8               	rlncf	wreg,f,c
  3423  001A56  0BFC               	andlw	252
  3424  001A58  6EC2               	movwf	4034,c	;volatile
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;system.c: 168: ADCON1 = 0x00;
  3428  001A5A  0E00               	movlw	0
  3429  001A5C  6EC1               	movwf	4033,c	;volatile
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;system.c: 171: ADCON2bits.ADFM = 1;
  3433  001A5E  8EC0               	bsf	4032,7,c	;volatile
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;system.c: 172: ADCON2bits.ACQT0 = 0;
  3437  001A60  96C0               	bcf	4032,3,c	;volatile
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;system.c: 173: ADCON2bits.ACQT1 = 1;
  3441  001A62  88C0               	bsf	4032,4,c	;volatile
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;system.c: 174: ADCON2bits.ACQT2 = 0;
  3445  001A64  9AC0               	bcf	4032,5,c	;volatile
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;system.c: 177: ADCON2bits.ADCS0 = 1;
  3449  001A66  80C0               	bsf	4032,0,c	;volatile
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;system.c: 178: ADCON2bits.ADCS1 = 1;
  3453  001A68  82C0               	bsf	4032,1,c	;volatile
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;system.c: 179: ADCON2bits.ADCS2 = 1;
  3457  001A6A  84C0               	bsf	4032,2,c	;volatile
  3458                           
  3459                           ; BSR set to: 0
  3460  001A6C  0012               	return	
  3461  001A6E                     __end_of_ADC_init:
  3462                           	opt stack 0
  3463                           tblptru	equ	0xFF8
  3464                           tblptrh	equ	0xFF7
  3465                           tblptrl	equ	0xFF6
  3466                           tablat	equ	0xFF5
  3467                           intcon	equ	0xFF2
  3468                           indf0	equ	0xFEF
  3469                           postinc0	equ	0xFEE
  3470                           fsr0h	equ	0xFEA
  3471                           fsr0l	equ	0xFE9
  3472                           wreg	equ	0xFE8
  3473                           postdec1	equ	0xFE5
  3474                           fsr1h	equ	0xFE2
  3475                           fsr1l	equ	0xFE1
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _ISRHandler *****************
  3479 ;; Defined at:
  3480 ;;		line 8 in file "interruptHandler.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  c               1   33[COMRAM] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;		None               void
  3487 ;; Registers used:
  3488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:       15 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    3
  3501 ;; This function calls:
  3502 ;;		_I2C_putByteAtAddress
  3503 ;;		_USART_getChar
  3504 ;; This function is called by:
  3505 ;;		Interrupt level 2
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	intcode
  3510  000008                     __pintcode:
  3511                           	opt stack 0
  3512  000008                     _ISRHandler:
  3513                           	opt stack 23
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;incstack = 0
  3517  000008  CFFA F014          	movff	pclath,??_ISRHandler
  3518  00000C  CFFB F015          	movff	pclatu,??_ISRHandler+1
  3519  000010  CFE9 F016          	movff	fsr0l,??_ISRHandler+2
  3520  000014  CFEA F017          	movff	fsr0h,??_ISRHandler+3
  3521  000018  CFE1 F018          	movff	fsr1l,??_ISRHandler+4
  3522  00001C  CFE2 F019          	movff	fsr1h,??_ISRHandler+5
  3523  000020  CFD9 F01A          	movff	fsr2l,??_ISRHandler+6
  3524  000024  CFDA F01B          	movff	fsr2h,??_ISRHandler+7
  3525  000028  CFF3 F01C          	movff	prodl,??_ISRHandler+8
  3526  00002C  CFF4 F01D          	movff	prodh,??_ISRHandler+9
  3527  000030  CFF6 F01E          	movff	tblptrl,??_ISRHandler+10
  3528  000034  CFF7 F01F          	movff	tblptrh,??_ISRHandler+11
  3529  000038  CFF8 F020          	movff	tblptru,??_ISRHandler+12
  3530  00003C  CFF5 F021          	movff	tablat,??_ISRHandler+13
  3531                           
  3532                           ;interruptHandler.c: 10: if(RC1IF)
  3533  000040  AA9E               	btfss	3998,5,c	;volatile
  3534  000042  D029               	goto	i2l568
  3535                           
  3536                           ;interruptHandler.c: 11: {
  3537                           ;interruptHandler.c: 12: char c = USART_getChar((unsigned int)1);
  3538  000044  0E00               	movlw	0
  3539  000046  6E02               	movwf	USART_getChar@channel+1,c
  3540  000048  0E01               	movlw	1
  3541  00004A  6E01               	movwf	USART_getChar@channel,c
  3542  00004C  EC0D  F00D         	call	_USART_getChar	;wreg free
  3543  000050  6E22               	movwf	ISRHandler@c,c
  3544                           
  3545                           ;interruptHandler.c: 21: currentLine[index] = c;
  3546  000052  0101               	movlb	1	; () banked
  3547  000054  0E00               	movlw	low _currentLine
  3548  000056  243E               	addwf	_index,w,c
  3549  000058  6ED9               	movwf	fsr2l,c
  3550  00005A  0101               	movlb	1	; () banked
  3551  00005C  0E01               	movlw	high _currentLine
  3552  00005E  203F               	addwfc	_index+1,w,c
  3553  000060  6EDA               	movwf	fsr2h,c
  3554  000062  C022  FFDF         	movff	ISRHandler@c,indf2
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;interruptHandler.c: 22: index++;
  3558  000066  4A3E               	infsnz	_index,f,c
  3559  000068  2A3F               	incf	_index+1,f,c
  3560                           
  3561                           ; BSR set to: 1
  3562                           ;interruptHandler.c: 23: addr++;
  3563  00006A  0E01               	movlw	1
  3564  00006C  2623               	addwf	_addr,f,c
  3565  00006E  0E00               	movlw	0
  3566  000070  2224               	addwfc	_addr+1,f,c
  3567  000072  2225               	addwfc	_addr+2,f,c
  3568  000074  2226               	addwfc	_addr+3,f,c
  3569                           
  3570                           ; BSR set to: 1
  3571                           ;interruptHandler.c: 24: I2C_putByteAtAddress((unsigned int)1, (unsigned char)0x53, 0, a
      +                          ddr, c);
  3572  000076  0E00               	movlw	0
  3573  000078  6E0B               	movwf	I2C_putByteAtAddress@channel+1,c
  3574  00007A  0E01               	movlw	1
  3575  00007C  6E0A               	movwf	I2C_putByteAtAddress@channel,c
  3576  00007E  0E53               	movlw	83
  3577  000080  6E0C               	movwf	I2C_putByteAtAddress@device_address,c
  3578  000082  0E00               	movlw	0
  3579  000084  6E0D               	movwf	I2C_putByteAtAddress@page,c
  3580  000086  C023  F00E         	movff	_addr,I2C_putByteAtAddress@address
  3581  00008A  C024  F00F         	movff	_addr+1,I2C_putByteAtAddress@address+1
  3582  00008E  C022  F010         	movff	ISRHandler@c,I2C_putByteAtAddress@byte
  3583  000092  EC8E  F00A         	call	_I2C_putByteAtAddress	;wreg free
  3584  000096                     i2l568:
  3585  000096  C021  FFF5         	movff	??_ISRHandler+13,tablat
  3586  00009A  C020  FFF8         	movff	??_ISRHandler+12,tblptru
  3587  00009E  C01F  FFF7         	movff	??_ISRHandler+11,tblptrh
  3588  0000A2  C01E  FFF6         	movff	??_ISRHandler+10,tblptrl
  3589  0000A6  C01D  FFF4         	movff	??_ISRHandler+9,prodh
  3590  0000AA  C01C  FFF3         	movff	??_ISRHandler+8,prodl
  3591  0000AE  C01B  FFDA         	movff	??_ISRHandler+7,fsr2h
  3592  0000B2  C01A  FFD9         	movff	??_ISRHandler+6,fsr2l
  3593  0000B6  C019  FFE2         	movff	??_ISRHandler+5,fsr1h
  3594  0000BA  C018  FFE1         	movff	??_ISRHandler+4,fsr1l
  3595  0000BE  C017  FFEA         	movff	??_ISRHandler+3,fsr0h
  3596  0000C2  C016  FFE9         	movff	??_ISRHandler+2,fsr0l
  3597  0000C6  C015  FFFB         	movff	??_ISRHandler+1,pclatu
  3598  0000CA  C014  FFFA         	movff	??_ISRHandler,pclath
  3599  0000CE  0011               	retfie		f
  3600  0000D0                     __end_of_ISRHandler:
  3601                           	opt stack 0
  3602                           pclatu	equ	0xFFB
  3603                           pclath	equ	0xFFA
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           prodh	equ	0xFF4
  3609                           prodl	equ	0xFF3
  3610                           intcon	equ	0xFF2
  3611                           indf0	equ	0xFEF
  3612                           postinc0	equ	0xFEE
  3613                           fsr0h	equ	0xFEA
  3614                           fsr0l	equ	0xFE9
  3615                           wreg	equ	0xFE8
  3616                           postdec1	equ	0xFE5
  3617                           fsr1h	equ	0xFE2
  3618                           fsr1l	equ	0xFE1
  3619                           indf2	equ	0xFDF
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _USART_getChar *****************
  3625 ;; Defined at:
  3626 ;;		line 113 in file "usart.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  channel         2    0[COMRAM] unsigned int 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      unsigned char 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        4 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_ISRHandler
  3650 ;;		_USART_getLine
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text21
  3655  001A1A                     __ptext21:
  3656                           	opt stack 0
  3657  001A1A                     _USART_getChar:
  3658                           	opt stack 25
  3659                           
  3660                           ;usart.c: 115: switch(channel)
  3661                           
  3662                           ;incstack = 0
  3663  001A1A  D00A               	goto	i2l2531
  3664  001A1C                     i2l315:
  3665                           
  3666                           ;usart.c: 118: rx1 = RCREG1;
  3667  001A1C  CFAE F041          	movff	4014,_rx1	;volatile
  3668                           
  3669                           ;usart.c: 119: return rx1;
  3670  001A20  5041               	movf	_rx1,w,c
  3671  001A22  0012               	return	
  3672  001A24                     i2l317:
  3673                           
  3674                           ;usart.c: 121: rx2 = RCREG2;
  3675  001A24  CF74 F042          	movff	3956,_rx2	;volatile
  3676                           
  3677                           ;usart.c: 122: return rx2;
  3678  001A28  5042               	movf	_rx2,w,c
  3679  001A2A  0012               	return	
  3680  001A2C                     i2l2525:
  3681                           
  3682                           ;usart.c: 124: return -1;
  3683  001A2C  0EFF               	movlw	255
  3684  001A2E  0012               	return	
  3685  001A30                     i2l2531:
  3686  001A30  C001  F003         	movff	USART_getChar@channel,??_USART_getChar
  3687  001A34  C002  F004         	movff	USART_getChar@channel+1,??_USART_getChar+1
  3688                           
  3689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3690                           ; Switch size 1, requested type "space"
  3691                           ; Number of cases is 1, Range of values is 0 to 0
  3692                           ; switch strategies available:
  3693                           ; Name         Instructions Cycles
  3694                           ; simple_byte            4     3 (average)
  3695                           ;	Chosen strategy is simple_byte
  3696  001A38  5004               	movf	??_USART_getChar+1,w,c
  3697  001A3A  0A00               	xorlw	0	; case 0
  3698  001A3C  A4D8               	btfss	status,2,c
  3699  001A3E  D7F6               	goto	i2l2525
  3700                           
  3701                           ; Switch size 1, requested type "space"
  3702                           ; Number of cases is 2, Range of values is 1 to 2
  3703                           ; switch strategies available:
  3704                           ; Name         Instructions Cycles
  3705                           ; simple_byte            7     4 (average)
  3706                           ;	Chosen strategy is simple_byte
  3707  001A40  5003               	movf	??_USART_getChar,w,c
  3708  001A42  0A01               	xorlw	1	; case 1
  3709  001A44  B4D8               	btfsc	status,2,c
  3710  001A46  D7EA               	goto	i2l315
  3711  001A48  0A03               	xorlw	3	; case 2
  3712  001A4A  B4D8               	btfsc	status,2,c
  3713  001A4C  D7EB               	goto	i2l317
  3714  001A4E  D7EE               	goto	i2l2525
  3715  001A50                     __end_of_USART_getChar:
  3716                           	opt stack 0
  3717                           pclatu	equ	0xFFB
  3718                           pclath	equ	0xFFA
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           prodh	equ	0xFF4
  3724                           prodl	equ	0xFF3
  3725                           intcon	equ	0xFF2
  3726                           indf0	equ	0xFEF
  3727                           postinc0	equ	0xFEE
  3728                           fsr0h	equ	0xFEA
  3729                           fsr0l	equ	0xFE9
  3730                           wreg	equ	0xFE8
  3731                           postdec1	equ	0xFE5
  3732                           fsr1h	equ	0xFE2
  3733                           fsr1l	equ	0xFE1
  3734                           indf2	equ	0xFDF
  3735                           fsr2h	equ	0xFDA
  3736                           fsr2l	equ	0xFD9
  3737                           status	equ	0xFD8
  3738                           
  3739 ;; *************** function _I2C_putByteAtAddress *****************
  3740 ;; Defined at:
  3741 ;;		line 165 in file "i2c.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  channel         2    9[COMRAM] unsigned int 
  3744 ;;  device_addre    1   11[COMRAM] unsigned char 
  3745 ;;  page            1   12[COMRAM] unsigned char 
  3746 ;;  address         2   13[COMRAM] unsigned int 
  3747 ;;  byte            1   15[COMRAM] unsigned char 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;		None               void
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3759 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;Total ram usage:       10 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    2
  3766 ;; This function calls:
  3767 ;;		i2_I2C_start
  3768 ;;		i2_I2C_stop
  3769 ;;		i2_I2C_writeByte
  3770 ;; This function is called by:
  3771 ;;		_ISRHandler
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text22
  3776  00151C                     __ptext22:
  3777                           	opt stack 0
  3778  00151C                     _I2C_putByteAtAddress:
  3779                           	opt stack 23
  3780                           
  3781                           ;i2c.c: 168: I2C_start(channel);
  3782                           
  3783                           ;incstack = 0
  3784  00151C  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_start@channel
  3785  001520  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_start@channel+1
  3786  001524  EC84  F00C         	call	i2_I2C_start	;wreg free
  3787                           
  3788                           ;i2c.c: 169: device_address |= (page<<2);
  3789  001528  440D               	rlncf	I2C_putByteAtAddress@page,w,c
  3790  00152A  46E8               	rlncf	wreg,f,c
  3791  00152C  0BFC               	andlw	252
  3792  00152E  120C               	iorwf	I2C_putByteAtAddress@device_address,f,c
  3793                           
  3794                           ;i2c.c: 170: I2C_writeByte(device_address<<1, channel);
  3795  001530  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3796  001534  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3797  001538  500C               	movf	I2C_putByteAtAddress@device_address,w,c
  3798  00153A  240C               	addwf	I2C_putByteAtAddress@device_address,w,c
  3799  00153C  EC96  F00B         	call	i2_I2C_writeByte
  3800                           
  3801                           ;i2c.c: 173: I2C_writeByte((address & 0xFF00)>>8, channel);
  3802  001540  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3803  001544  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3804  001548  C00F  F011         	movff	I2C_putByteAtAddress@address+1,??_I2C_putByteAtAddress
  3805  00154C  C011  F012         	movff	??_I2C_putByteAtAddress,??_I2C_putByteAtAddress+1
  3806  001550  6A13               	clrf	(??_I2C_putByteAtAddress+2)& (0+255),c
  3807  001552  5012               	movf	??_I2C_putByteAtAddress+1,w,c
  3808  001554  EC96  F00B         	call	i2_I2C_writeByte
  3809                           
  3810                           ;i2c.c: 175: I2C_writeByte((unsigned char)(address & 0x00FF), channel);
  3811  001558  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3812  00155C  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3813  001560  500E               	movf	I2C_putByteAtAddress@address,w,c
  3814  001562  EC96  F00B         	call	i2_I2C_writeByte
  3815                           
  3816                           ;i2c.c: 176: I2C_writeByte(byte, channel);
  3817  001566  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3818  00156A  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3819  00156E  5010               	movf	I2C_putByteAtAddress@byte,w,c
  3820  001570  EC96  F00B         	call	i2_I2C_writeByte
  3821                           
  3822                           ;i2c.c: 177: I2C_stop(channel);
  3823  001574  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_stop@channel
  3824  001578  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_stop@channel+1
  3825  00157C  EC67  F00C         	call	i2_I2C_stop	;wreg free
  3826  001580  0012               	return	
  3827  001582                     __end_of_I2C_putByteAtAddress:
  3828                           	opt stack 0
  3829                           pclatu	equ	0xFFB
  3830                           pclath	equ	0xFFA
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           intcon	equ	0xFF2
  3838                           indf0	equ	0xFEF
  3839                           postinc0	equ	0xFEE
  3840                           fsr0h	equ	0xFEA
  3841                           fsr0l	equ	0xFE9
  3842                           wreg	equ	0xFE8
  3843                           postdec1	equ	0xFE5
  3844                           fsr1h	equ	0xFE2
  3845                           fsr1l	equ	0xFE1
  3846                           indf2	equ	0xFDF
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8
  3850                           
  3851 ;; *************** function i2_I2C_writeByte *****************
  3852 ;; Defined at:
  3853 ;;		line 112 in file "i2c.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  b               1    wreg     unsigned char 
  3856 ;;  channel         2    4[COMRAM] unsigned int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  b               1    8[COMRAM] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;		None               void
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;Total ram usage:        5 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    1
  3875 ;; This function calls:
  3876 ;;		i2_I2C_wait
  3877 ;; This function is called by:
  3878 ;;		_I2C_putByteAtAddress
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text23
  3883  00172C                     __ptext23:
  3884                           	opt stack 0
  3885  00172C                     i2_I2C_writeByte:
  3886                           	opt stack 23
  3887                           
  3888                           ;incstack = 0
  3889                           ;i2I2C_writeByte@b stored from wreg
  3890  00172C  6E09               	movwf	i2I2C_writeByte@b,c
  3891                           
  3892                           ;i2c.c: 114: switch(channel)
  3893  00172E  D014               	goto	i2l2471
  3894  001730                     i2l2463:
  3895                           
  3896                           ;i2c.c: 117: I2C_wait(channel);
  3897  001730  C005  F001         	movff	i2I2C_writeByte@channel,i2I2C_wait@channel
  3898  001734  C006  F002         	movff	i2I2C_writeByte@channel+1,i2I2C_wait@channel+1
  3899  001738  ECE1  F00B         	call	i2_I2C_wait	;wreg free
  3900                           
  3901                           ;i2c.c: 118: SSP1BUF = b;
  3902  00173C  C009  FFC9         	movff	i2I2C_writeByte@b,4041	;volatile
  3903                           
  3904                           ;i2c.c: 120: break;
  3905  001740  0012               	return	
  3906  001742                     i2l505:
  3907                           
  3908                           ;i2c.c: 122: SSP2BUF = b;
  3909  001742  C009  FF6F         	movff	i2I2C_writeByte@b,3951	;volatile
  3910  001746                     i2l506:
  3911  001746  B06D               	btfsc	3949,0,c	;volatile
  3912  001748  D7FE               	goto	i2l506
  3913                           
  3914                           ;i2c.c: 124: I2C_wait(channel);
  3915  00174A  C005  F001         	movff	i2I2C_writeByte@channel,i2I2C_wait@channel
  3916  00174E  C006  F002         	movff	i2I2C_writeByte@channel+1,i2I2C_wait@channel+1
  3917  001752  ECE1  F00B         	call	i2_I2C_wait	;wreg free
  3918                           
  3919                           ;i2c.c: 125: break;
  3920  001756  0012               	return	
  3921  001758                     i2l2471:
  3922  001758  C005  F007         	movff	i2I2C_writeByte@channel,??i2_I2C_writeByte
  3923  00175C  C006  F008         	movff	i2I2C_writeByte@channel+1,??i2_I2C_writeByte+1
  3924                           
  3925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3926                           ; Switch size 1, requested type "space"
  3927                           ; Number of cases is 1, Range of values is 0 to 0
  3928                           ; switch strategies available:
  3929                           ; Name         Instructions Cycles
  3930                           ; simple_byte            4     3 (average)
  3931                           ;	Chosen strategy is simple_byte
  3932  001760  5008               	movf	??i2_I2C_writeByte+1,w,c
  3933  001762  0A00               	xorlw	0	; case 0
  3934  001764  A4D8               	btfss	status,2,c
  3935  001766  0012               	return	
  3936                           
  3937                           ; Switch size 1, requested type "space"
  3938                           ; Number of cases is 2, Range of values is 1 to 2
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte            7     4 (average)
  3942                           ;	Chosen strategy is simple_byte
  3943  001768  5007               	movf	??i2_I2C_writeByte,w,c
  3944  00176A  0A01               	xorlw	1	; case 1
  3945  00176C  B4D8               	btfsc	status,2,c
  3946  00176E  D7E0               	goto	i2l2463
  3947  001770  0A03               	xorlw	3	; case 2
  3948  001772  A4D8               	btfss	status,2,c
  3949  001774  0012               	return	
  3950  001776  D7E5               	goto	i2l505
  3951  001778                     __end_ofi2_I2C_writeByte:
  3952                           	opt stack 0
  3953                           pclatu	equ	0xFFB
  3954                           pclath	equ	0xFFA
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           prodh	equ	0xFF4
  3960                           prodl	equ	0xFF3
  3961                           intcon	equ	0xFF2
  3962                           indf0	equ	0xFEF
  3963                           postinc0	equ	0xFEE
  3964                           fsr0h	equ	0xFEA
  3965                           fsr0l	equ	0xFE9
  3966                           wreg	equ	0xFE8
  3967                           postdec1	equ	0xFE5
  3968                           fsr1h	equ	0xFE2
  3969                           fsr1l	equ	0xFE1
  3970                           indf2	equ	0xFDF
  3971                           fsr2h	equ	0xFDA
  3972                           fsr2l	equ	0xFD9
  3973                           status	equ	0xFD8
  3974                           
  3975 ;; *************** function i2_I2C_stop *****************
  3976 ;; Defined at:
  3977 ;;		line 42 in file "i2c.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  channel         2    4[COMRAM] unsigned int 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        4 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    1
  3998 ;; This function calls:
  3999 ;;		i2_I2C_wait
  4000 ;; This function is called by:
  4001 ;;		_I2C_putByteAtAddress
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text24
  4006  0018CE                     __ptext24:
  4007                           	opt stack 0
  4008  0018CE                     i2_I2C_stop:
  4009                           	opt stack 23
  4010                           
  4011                           ;i2c.c: 44: switch(channel)
  4012                           
  4013                           ;incstack = 0
  4014  0018CE  D00C               	goto	i2l2455
  4015  0018D0                     i2l2449:
  4016                           
  4017                           ;i2c.c: 47: I2C_wait(channel);
  4018  0018D0  C005  F001         	movff	i2I2C_stop@channel,i2I2C_wait@channel
  4019  0018D4  C006  F002         	movff	i2I2C_stop@channel+1,i2I2C_wait@channel+1
  4020  0018D8  ECE1  F00B         	call	i2_I2C_wait	;wreg free
  4021                           
  4022                           ;i2c.c: 48: SSP1CON2bits.PEN1 = 1;
  4023  0018DC  84C5               	bsf	4037,2,c	;volatile
  4024                           
  4025                           ;i2c.c: 49: break;
  4026  0018DE  0012               	return	
  4027  0018E0                     i2l464:
  4028                           
  4029                           ;i2c.c: 51: SSP2CON2bits.PEN2 = 1;
  4030  0018E0  846B               	bsf	3947,2,c	;volatile
  4031  0018E2                     i2l465:
  4032  0018E2  A46B               	btfss	3947,2,c	;volatile
  4033  0018E4  0012               	return	
  4034  0018E6  D7FD               	goto	i2l465
  4035  0018E8                     i2l2455:
  4036  0018E8  C005  F007         	movff	i2I2C_stop@channel,??i2_I2C_stop
  4037  0018EC  C006  F008         	movff	i2I2C_stop@channel+1,??i2_I2C_stop+1
  4038                           
  4039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4040                           ; Switch size 1, requested type "space"
  4041                           ; Number of cases is 1, Range of values is 0 to 0
  4042                           ; switch strategies available:
  4043                           ; Name         Instructions Cycles
  4044                           ; simple_byte            4     3 (average)
  4045                           ;	Chosen strategy is simple_byte
  4046  0018F0  5008               	movf	??i2_I2C_stop+1,w,c
  4047  0018F2  0A00               	xorlw	0	; case 0
  4048  0018F4  A4D8               	btfss	status,2,c
  4049  0018F6  0012               	return	
  4050                           
  4051                           ; Switch size 1, requested type "space"
  4052                           ; Number of cases is 2, Range of values is 1 to 2
  4053                           ; switch strategies available:
  4054                           ; Name         Instructions Cycles
  4055                           ; simple_byte            7     4 (average)
  4056                           ;	Chosen strategy is simple_byte
  4057  0018F8  5007               	movf	??i2_I2C_stop,w,c
  4058  0018FA  0A01               	xorlw	1	; case 1
  4059  0018FC  B4D8               	btfsc	status,2,c
  4060  0018FE  D7E8               	goto	i2l2449
  4061  001900  0A03               	xorlw	3	; case 2
  4062  001902  A4D8               	btfss	status,2,c
  4063  001904  0012               	return	
  4064  001906  D7EC               	goto	i2l464
  4065  001908                     __end_ofi2_I2C_stop:
  4066                           	opt stack 0
  4067                           pclatu	equ	0xFFB
  4068                           pclath	equ	0xFFA
  4069                           tblptru	equ	0xFF8
  4070                           tblptrh	equ	0xFF7
  4071                           tblptrl	equ	0xFF6
  4072                           tablat	equ	0xFF5
  4073                           prodh	equ	0xFF4
  4074                           prodl	equ	0xFF3
  4075                           intcon	equ	0xFF2
  4076                           indf0	equ	0xFEF
  4077                           postinc0	equ	0xFEE
  4078                           fsr0h	equ	0xFEA
  4079                           fsr0l	equ	0xFE9
  4080                           wreg	equ	0xFE8
  4081                           postdec1	equ	0xFE5
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           indf2	equ	0xFDF
  4085                           fsr2h	equ	0xFDA
  4086                           fsr2l	equ	0xFD9
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function i2_I2C_start *****************
  4090 ;; Defined at:
  4091 ;;		line 8 in file "i2c.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  channel         2    4[COMRAM] unsigned int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;Total ram usage:        4 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    1
  4112 ;; This function calls:
  4113 ;;		i2_I2C_wait
  4114 ;; This function is called by:
  4115 ;;		_I2C_putByteAtAddress
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text25
  4120  001908                     __ptext25:
  4121                           	opt stack 0
  4122  001908                     i2_I2C_start:
  4123                           	opt stack 23
  4124                           
  4125                           ;i2c.c: 10: switch(channel)
  4126                           
  4127                           ;incstack = 0
  4128  001908  D00C               	goto	i2l2441
  4129  00190A                     i2l2435:
  4130                           
  4131                           ;i2c.c: 13: I2C_wait(channel);
  4132  00190A  C005  F001         	movff	i2I2C_start@channel,i2I2C_wait@channel
  4133  00190E  C006  F002         	movff	i2I2C_start@channel+1,i2I2C_wait@channel+1
  4134  001912  ECE1  F00B         	call	i2_I2C_wait	;wreg free
  4135                           
  4136                           ;i2c.c: 14: SSP1CON2bits.SEN = 1;
  4137  001916  80C5               	bsf	4037,0,c	;volatile
  4138                           
  4139                           ;i2c.c: 15: break;
  4140  001918  0012               	return	
  4141  00191A                     i2l442:
  4142                           
  4143                           ;i2c.c: 17: SSP2CON2bits.SEN2 = 1;
  4144  00191A  806B               	bsf	3947,0,c	;volatile
  4145  00191C                     i2l443:
  4146  00191C  A06B               	btfss	3947,0,c	;volatile
  4147  00191E  0012               	return	
  4148  001920  D7FD               	goto	i2l443
  4149  001922                     i2l2441:
  4150  001922  C005  F007         	movff	i2I2C_start@channel,??i2_I2C_start
  4151  001926  C006  F008         	movff	i2I2C_start@channel+1,??i2_I2C_start+1
  4152                           
  4153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4154                           ; Switch size 1, requested type "space"
  4155                           ; Number of cases is 1, Range of values is 0 to 0
  4156                           ; switch strategies available:
  4157                           ; Name         Instructions Cycles
  4158                           ; simple_byte            4     3 (average)
  4159                           ;	Chosen strategy is simple_byte
  4160  00192A  5008               	movf	??i2_I2C_start+1,w,c
  4161  00192C  0A00               	xorlw	0	; case 0
  4162  00192E  A4D8               	btfss	status,2,c
  4163  001930  0012               	return	
  4164                           
  4165                           ; Switch size 1, requested type "space"
  4166                           ; Number of cases is 2, Range of values is 1 to 2
  4167                           ; switch strategies available:
  4168                           ; Name         Instructions Cycles
  4169                           ; simple_byte            7     4 (average)
  4170                           ;	Chosen strategy is simple_byte
  4171  001932  5007               	movf	??i2_I2C_start,w,c
  4172  001934  0A01               	xorlw	1	; case 1
  4173  001936  B4D8               	btfsc	status,2,c
  4174  001938  D7E8               	goto	i2l2435
  4175  00193A  0A03               	xorlw	3	; case 2
  4176  00193C  A4D8               	btfss	status,2,c
  4177  00193E  0012               	return	
  4178  001940  D7EC               	goto	i2l442
  4179  001942                     __end_ofi2_I2C_start:
  4180                           	opt stack 0
  4181                           pclatu	equ	0xFFB
  4182                           pclath	equ	0xFFA
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           prodh	equ	0xFF4
  4188                           prodl	equ	0xFF3
  4189                           intcon	equ	0xFF2
  4190                           indf0	equ	0xFEF
  4191                           postinc0	equ	0xFEE
  4192                           fsr0h	equ	0xFEA
  4193                           fsr0l	equ	0xFE9
  4194                           wreg	equ	0xFE8
  4195                           postdec1	equ	0xFE5
  4196                           fsr1h	equ	0xFE2
  4197                           fsr1l	equ	0xFE1
  4198                           indf2	equ	0xFDF
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function i2_I2C_wait *****************
  4204 ;; Defined at:
  4205 ;;		line 97 in file "i2c.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  channel         2    0[COMRAM] unsigned int 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;		None               void
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;Total ram usage:        4 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		i2_I2C_start
  4229 ;;		i2_I2C_stop
  4230 ;;		i2_I2C_writeByte
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text26
  4235  0017C2                     __ptext26:
  4236                           	opt stack 0
  4237  0017C2                     i2_I2C_wait:
  4238                           	opt stack 23
  4239                           
  4240                           ;i2c.c: 99: switch(channel)
  4241                           
  4242                           ;incstack = 0
  4243  0017C2  D012               	goto	i2l2339
  4244  0017C4                     i2l2329:
  4245  0017C4  CFC5 F003          	movff	4037,??i2_I2C_wait	;volatile
  4246  0017C8  0E1F               	movlw	31
  4247  0017CA  1603               	andwf	??i2_I2C_wait,f,c
  4248  0017CC  A4D8               	btfss	status,2,c
  4249  0017CE  D7FA               	goto	i2l2329
  4250  0017D0  A4C7               	btfss	4039,2,c	;volatile
  4251  0017D2  0012               	return	
  4252  0017D4  D7F7               	goto	i2l2329
  4253  0017D6                     i2l2333:
  4254  0017D6  CF6B F003          	movff	3947,??i2_I2C_wait	;volatile
  4255  0017DA  0E1F               	movlw	31
  4256  0017DC  1603               	andwf	??i2_I2C_wait,f,c
  4257  0017DE  A4D8               	btfss	status,2,c
  4258  0017E0  D7FA               	goto	i2l2333
  4259  0017E2  A46D               	btfss	3949,2,c	;volatile
  4260  0017E4  0012               	return	
  4261  0017E6  D7F7               	goto	i2l2333
  4262  0017E8                     i2l2339:
  4263  0017E8  C001  F003         	movff	i2I2C_wait@channel,??i2_I2C_wait
  4264  0017EC  C002  F004         	movff	i2I2C_wait@channel+1,??i2_I2C_wait+1
  4265                           
  4266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4267                           ; Switch size 1, requested type "space"
  4268                           ; Number of cases is 1, Range of values is 0 to 0
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte            4     3 (average)
  4272                           ;	Chosen strategy is simple_byte
  4273  0017F0  5004               	movf	??i2_I2C_wait+1,w,c
  4274  0017F2  0A00               	xorlw	0	; case 0
  4275  0017F4  A4D8               	btfss	status,2,c
  4276  0017F6  0012               	return	
  4277                           
  4278                           ; Switch size 1, requested type "space"
  4279                           ; Number of cases is 2, Range of values is 1 to 2
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            7     4 (average)
  4283                           ;	Chosen strategy is simple_byte
  4284  0017F8  5003               	movf	??i2_I2C_wait,w,c
  4285  0017FA  0A01               	xorlw	1	; case 1
  4286  0017FC  B4D8               	btfsc	status,2,c
  4287  0017FE  D7E2               	goto	i2l2329
  4288  001800  0A03               	xorlw	3	; case 2
  4289  001802  A4D8               	btfss	status,2,c
  4290  001804  0012               	return	
  4291  001806  D7E7               	goto	i2l2333
  4292  001808                     __end_ofi2_I2C_wait:
  4293                           	opt stack 0
  4294                           pclatu	equ	0xFFB
  4295                           pclath	equ	0xFFA
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           prodh	equ	0xFF4
  4301                           prodl	equ	0xFF3
  4302                           intcon	equ	0xFF2
  4303                           indf0	equ	0xFEF
  4304                           postinc0	equ	0xFEE
  4305                           fsr0h	equ	0xFEA
  4306                           fsr0l	equ	0xFE9
  4307                           wreg	equ	0xFE8
  4308                           postdec1	equ	0xFE5
  4309                           fsr1h	equ	0xFE2
  4310                           fsr1l	equ	0xFE1
  4311                           indf2	equ	0xFDF
  4312                           fsr2h	equ	0xFDA
  4313                           fsr2l	equ	0xFD9
  4314                           status	equ	0xFD8
  4315                           pclatu	equ	0xFFB
  4316                           pclath	equ	0xFFA
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           indf0	equ	0xFEF
  4325                           postinc0	equ	0xFEE
  4326                           fsr0h	equ	0xFEA
  4327                           fsr0l	equ	0xFE9
  4328                           wreg	equ	0xFE8
  4329                           postdec1	equ	0xFE5
  4330                           fsr1h	equ	0xFE2
  4331                           fsr1l	equ	0xFE1
  4332                           indf2	equ	0xFDF
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337                           	psect	rparam
  4338  0000                     pclatu	equ	0xFFB
  4339                           pclath	equ	0xFFA
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           prodh	equ	0xFF4
  4345                           prodl	equ	0xFF3
  4346                           intcon	equ	0xFF2
  4347                           indf0	equ	0xFEF
  4348                           postinc0	equ	0xFEE
  4349                           fsr0h	equ	0xFEA
  4350                           fsr0l	equ	0xFE9
  4351                           wreg	equ	0xFE8
  4352                           postdec1	equ	0xFE5
  4353                           fsr1h	equ	0xFE2
  4354                           fsr1l	equ	0xFE1
  4355                           indf2	equ	0xFDF
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8


Data Sizes:
    Strings     216
    Constant    10
    Data        1
    BSS         594
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      67
    BANK0           160     26      76
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S2060$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    sp__USART_getLine	PTR unsigned char  size(2) Largest target is 256
		 -> temp(BANK2[256]), 

    USART_putLine@line	PTR const unsigned char  size(2) Largest target is 128
		 -> str(BANK0[32]), STR_9(CODE[28]), STR_8(CODE[28]), STR_7(CODE[29]), 
		 -> STR_6(CODE[50]), UART_putInt@buffer(BANK0[128]), STR_4(CODE[1]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[32]), 

    USART_putString@string	PTR const unsigned char  size(2) Largest target is 128
		 -> str(BANK0[32]), STR_9(CODE[28]), STR_8(CODE[28]), STR_7(CODE[29]), 
		 -> STR_6(CODE[50]), UART_putInt@buffer(BANK0[128]), STR_4(CODE[1]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISRHandler in COMRAM

    _ISRHandler->_I2C_putByteAtAddress
    _I2C_putByteAtAddress->i2_I2C_writeByte
    i2_I2C_writeByte->i2_I2C_wait
    i2_I2C_stop->i2_I2C_wait
    i2_I2C_start->i2_I2C_wait

Critical Paths under _main in BANK0

    _main->_I2C_getByteFromAddress
    _USART_putCharLine->_USART_putLine
    _USART_putLine->_USART_putString
    _I2C_getByteFromAddress->_I2C_readByte
    _I2C_writeByte->_I2C_wait
    _I2C_stop->_I2C_wait
    _I2C_start->_I2C_wait
    _I2C_readByte->_I2C_ack
    _I2C_readByte->_I2C_nack
    _I2C_readByte->_I2C_wait
    _HW_init->_USART_init

Critical Paths under _ISRHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISRHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISRHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISRHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   12187
                                             20 BANK0      6     6      0
                            _HW_init
             _I2C_getByteFromAddress
                  _USART_putCharLine
                      _USART_putLine
 ---------------------------------------------------------------------------------
 (1) _USART_putCharLine                                    5     3      2    2427
                                             10 BANK0      5     3      2
                      _USART_putLine
 ---------------------------------------------------------------------------------
 (1) _USART_putLine                                        4     0      4    2226
                                              6 BANK0      4     0      4
                      _USART_putChar
                    _USART_putString
 ---------------------------------------------------------------------------------
 (2) _USART_putString                                      6     2      4     315
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_putChar                                        5     3      2     247
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _I2C_getByteFromAddress                              10     4      6    6971
                                             10 BANK0     10     4      6
                       _I2C_readByte
                          _I2C_start
                           _I2C_stop
                      _I2C_writeByte
 ---------------------------------------------------------------------------------
 (2) _I2C_writeByte                                        5     3      2    2048
                                              4 BANK0      5     3      2
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             4     2      2    1136
                                              4 BANK0      4     2      2
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            4     2      2    1290
                                              4 BANK0      4     2      2
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_readByte                                         6     3      3    1749
                                              4 BANK0      6     3      3
                            _I2C_ack
                           _I2C_nack
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_wait                                             4     2      2     801
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_nack                                             4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_ack                                              4     2      2     185
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _HW_init                                              0     0      0     393
                           _ADC_init
                          _GPIO_init
                           _I2C_init
                           _IRQ_init
                           _OSC_init
                         _USART_init
 ---------------------------------------------------------------------------------
 (2) _USART_init                                           8     4      4     221
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IRQ_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             4     2      2      86
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRHandler                                          15    15      0    1490
                                             19 COMRAM    15    15      0
               _I2C_putByteAtAddress
                      _USART_getChar
 ---------------------------------------------------------------------------------
 (5) _USART_getChar                                        4     2      2     150
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2C_putByteAtAddress                                10     3      7    1295
                                              9 COMRAM    10     3      7
                        i2_I2C_start
                         i2_I2C_stop
                    i2_I2C_writeByte
 ---------------------------------------------------------------------------------
 (6) i2_I2C_writeByte                                      5     3      2     340
                                              4 COMRAM     5     3      2
                         i2_I2C_wait
 ---------------------------------------------------------------------------------
 (6) i2_I2C_stop                                           4     2      2     196
                                              4 COMRAM     4     2      2
                         i2_I2C_wait
 ---------------------------------------------------------------------------------
 (6) i2_I2C_start                                          4     2      2     196
                                              4 COMRAM     4     2      2
                         i2_I2C_wait
 ---------------------------------------------------------------------------------
 (7) i2_I2C_wait                                           4     2      2     126
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HW_init
     _ADC_init
     _GPIO_init
     _I2C_init
     _IRQ_init
     _OSC_init
     _USART_init
   _I2C_getByteFromAddress
     _I2C_readByte
       _I2C_ack
       _I2C_nack
       _I2C_wait
     _I2C_start
       _I2C_wait
     _I2C_stop
       _I2C_wait
     _I2C_writeByte
       _I2C_wait
   _USART_putCharLine
     _USART_putLine
       _USART_putChar
       _USART_putString
   _USART_putLine
     _USART_putChar
     _USART_putString

 _ISRHandler (ROOT)
   _I2C_putByteAtAddress
     i2_I2C_start
       i2_I2C_wait
     i2_I2C_stop
       i2_I2C_wait
     i2_I2C_writeByte
       i2_I2C_wait
   _USART_getChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      4C       5       47.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      43       1       70.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28F      12        0.0%
DATA                 0      0     28F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jan 26 15:37:44 2016

                    i2I2C_writeByte@b 0009                                     _a 003C  
                                   _e 002A                                     _u 0036  
                                   _y 0039                                    _e1 002D  
                                  _e2 0030                                    _k1 0033  
                                  _k2 0060                                    _k3 0063  
                                  _kd 0066                                    _ki 0069  
                                  _kp 006C                         _USART_putChar 1808  
                       _USART_putLine 1942                          __CFG_CP0$OFF 000000  
                        __CFG_CP1$OFF 000000                    __size_of_I2C_start 0042  
                        __CFG_CP2$OFF 000000                          __CFG_CP3$OFF 000000  
                                 l300 1350                                   l171 128E  
                                 l251 1818                                   l181 16F4  
                                 l173 12AE                                   l246 180E  
                                 l505 1650                                   l281 15EE  
                                 l442 189E                                   l506 1654  
                                 l179 16E2                                   l443 18A0  
                                 l292 12F0                                   l276 15E4  
                                 l518 142C                                   l464 185C  
                                 l473 19B0                                   l481 197A  
                                 l465 185E                                   l475 19B6  
                                 l483 1980                                   _GIE 007F97  
                        __CFG_CPB$OFF 000000                                   _PR2 000FBB  
                                 _PR4 000F52                          __CFG_CPD$OFF 000000  
                                 _rx1 0041                                   _rx2 0042  
                                 _str 0072                       __end_of_I2C_ack 19E4  
                                 wreg 000FE8                            _TXSTA1bits 000FAC  
                          _TXSTA2bits 000F72                           ?i2_I2C_wait 0001  
                         ?i2_I2C_stop 0005                          __CFG_LVP$OFF 000000  
                                l3303 1986                                  l3405 1704  
                                l3421 18A6                                  l3253 1322  
                                l3351 1226                                  l3271 1690  
                                l3415 188E                                  l3431 184C  
                                l3239 1822                                  l3263 13B0  
                                l3345 1208                                  l3281 16B8  
                                l3347 1212                                  l3355 1234  
                                l3291 19BC                                  l3275 16A4  
                                l3259 1382                                  l4261 126A  
                                l3349 121C                                  l3437 1864  
                                l4263 1276                                  l3359 12C6  
                                l3447 163E                                  l3455 1666  
                                l4265 1282                                  l3465 13DA  
                                l3545 15F8                                  l4259 125E  
                                l3475 141A                                  l3547 161E  
                                l3477 1426                                  l3495 1454  
                                l3575 1130                                  l3489 1450  
                                l3585 1168                                  STR_1 103D  
                                STR_2 10C8                                  STR_3 10B2  
                                STR_4 10DC                                  STR_5 10E0  
                                STR_6 100B                                  STR_7 105D  
                                STR_8 1096                                  STR_9 107A  
                                u1030 131A                                  u1040 1348  
                                u1037 1310                                  u1070 137A  
                                u1047 133E                                  u1080 13A8  
                                u1307 11E8                                  u1077 1370  
                                u1087 139E                                  u1287 10F0  
                                u1297 1156                                  _IPEN 007E87  
                                _PEIE 007F96                                  _RCIE 007CED  
                                _addr 0023                                  _data 0043  
                                _main 10E4                                  _temp 0200  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                indf0 000FEF                                  fsr0l 000FE9  
                                fsr2h 000FDA                                  fsr1l 000FE1  
                                indf2 000FDF                                  fsr2l 000FD9  
                       __CFG_BORV$190 000000                                  pclat 000FFA  
                     __end_of_HW_init 17C2                      __end_of_I2C_nack 19AE  
                    __end_of_I2C_init 172C                                  prodh 000FF4  
                                prodl 000FF3                      __end_of_I2C_wait 16E0  
                                start 00D0                        ?_USART_getChar 0001  
                    __end_of_I2C_stop 188C                      __end_of_ADC_init 1A6E  
                       __CFG_IESO$OFF 000000              I2C_putByteAtAddress@page 000D  
            I2C_putByteAtAddress@byte 0010                    __size_of_GPIO_init 0036  
                        ?i2_I2C_start 0005                           ?_ISRHandler 0001  
                     _USART_putString 12EE                      ?i2_I2C_writeByte 0005  
                      ?_USART_putChar 0092                        ?_USART_putLine 0098  
                        _BAUDCON1bits 000FB8                          _BAUDCON2bits 000F70  
                               ?_main 0001                                 _EEADR 000FA9  
                               STR_10 10DD                                 _RC1IE 007CED  
                               _RC1IF 007CF5                                 _RC2IF 007D25  
                               _T4CON 000F51                                 i2l315 1A1C  
                       __CFG_WDTEN$ON 000000                                 i2l317 1A24  
                               i2l505 1742                                 i2l442 191A  
                               i2l506 1746                                 i2l443 191C  
                               i2l464 18E0                                 i2l465 18E2  
                               i2l568 0096                                 _PLLEN 007CDE  
                               _TX1IF 007CF4                                 _TX2IF 007D24  
                               _TRMT1 007D61                                 _TRMT2 007B91  
                       __CFG_WRT0$OFF 000000                         __CFG_WRT1$OFF 000000  
                       __CFG_WRT2$OFF 000000                         __CFG_WRT3$OFF 000000  
                      __CFG_EBTR0$OFF 000000                        __CFG_FCMEN$OFF 000000  
                      __CFG_EBTR1$OFF 000000                        __CFG_EBTR2$OFF 000000  
                    __end_of_IRQ_init 1A82                        __CFG_EBTR3$OFF 000000  
                       __CFG_WRTB$OFF 000000                         __CFG_WRTC$OFF 000000  
                       __CFG_WRTD$OFF 000000                        __CFG_EBTRB$OFF 000000  
                     __end_of_dpowers 100B                      __end_of_OSC_init 1A78  
                               _index 003E                    __CFG_MCLRE$EXTMCLR 000000  
                               main@i 00A8                                 main@t 00A7  
                               tablat 000FF5                                 status 000FD8  
               __size_of_I2C_readByte 00A4                     __end_of_I2C_start 18CE  
                      __CFG_HFOFST$ON 000000                        __CFG_PBADEN$ON 000000  
                         ?_USART_init 0092                       __initialization 1582  
                 __size_ofi2_I2C_wait 0046                          __end_of_main 11F8  
                 __size_ofi2_I2C_stop 003A          __end_of_I2C_putByteAtAddress 1582  
       I2C_getByteFromAddress@address 00A0               I2C_getByteFromAddress@b 00A5  
       I2C_getByteFromAddress@channel 009C                             ??_I2C_ack 0094  
                              ??_main 00A6                         __activetblptr 000002  
                      I2C_writeByte@b 009A                     __end_of_GPIO_init 1A1A  
                        _I2C_readByte 13D8                                _ADCON0 000FC2  
                              _ADCON1 000FC1                   __size_of_ISRHandler 00C8  
                              _EEADRH 000FAA                                _EEDATA 000FA8  
                              _CCPR1L 000FBE                                _EECON2 000FA7  
                              _ANSELC 000F3A                             ??_HW_init 009A  
                              i2l2333 17D6                                i2l2329 17C4  
                              i2l2441 1922                                i2l2339 17E8  
                              i2l2435 190A                                i2l2531 1A30  
                              i2l2525 1A2C                                i2l2455 18E8  
                              i2l2463 1730                                i2l2471 1758  
                              i2l2449 18D0                                _RCREG1 000FAE  
                              _RCREG2 000F74                                _SPBRG1 000FAF  
                              _SPBRG2 000F75                                _TX1REG 000FAD  
                              _TX2REG 000F73                       ??_USART_getChar 0003  
                              _TXREG1 000FAD                                _TXREG2 000F73  
             __end_of_USART_putString 13D8                i2I2C_writeByte@channel 0005  
                      __CFG_XINST$OFF 000000                       ??_USART_putChar 0094  
                     ??_USART_putLine 009C                        __CFG_STVREN$ON 000000  
                     I2C_stop@channel 0096                                clear_0 158A  
                              clear_1 159E                                clear_2 15B0  
                              clear_3 15BC                          __pdataCOMRAM 0043  
                           ?_I2C_nack 0092                          __mediumconst 0000  
                           ?_I2C_init 0092                             ?_I2C_wait 0092  
                   _USART_putCharLine 15DE                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                           ?_I2C_stop 0096                             ?_ADC_init 0092  
                 __size_of_USART_init 00F6                    ?_USART_putCharLine 009C  
                          __accesstop 0060               __end_of__initialization 15D4  
                USART_putChar@channel 0092                   ??_USART_putCharLine 009E  
                      __pcstackCOMRAM 0001                             ?_IRQ_init 0001  
                __size_ofi2_I2C_start 003A                       ADC_init@channel 0092  
                           ?_OSC_init 0001             __end_of_USART_putCharLine 1638  
                          ??_I2C_nack 0094                            ??_I2C_init 0094  
                        ??i2_I2C_wait 0003                            ??_I2C_wait 0094  
                        ??i2_I2C_stop 0007                            ??_I2C_stop 0098  
                          ??_ADC_init 0094                           ISRHandler@c 0022  
              __size_of_I2C_writeByte 0056                  _I2C_putByteAtAddress 151C  
                          __pbssBANK0 0060                            __pbssBANK1 0100  
                          __pbssBANK2 0200                       __CFG_PLLCFG$OFF 000000  
          I2C_getByteFromAddress@page 009F                      ?_USART_putString 0092  
                  __CFG_CCP2MX$PORTC1 000000                          ??_ISRHandler 0014  
                          ??_IRQ_init 0092                    __end_ofi2_I2C_wait 1808  
                  __CFG_CCP3MX$PORTB5 000000                    __end_ofi2_I2C_stop 1908  
                    I2C_start@channel 0096                               _CCP1CON 000FBD  
                          ??_OSC_init 0092                               _I2C_ack 19AE  
                             _SSP1ADD 000FC8                               _SSP2ADD 000F6E  
                             _SSP1BUF 000FC9                               _SSP2BUF 000F6F  
               ?_I2C_putByteAtAddress 000A                    __end_of_ISRHandler 00D0  
                             _HW_init 1778                 USART_putString@string 0092  
                             _i2cread 0040                       __CFG_PWRTEN$OFF 000000  
                             __Hparam 0000                               __Lparam 0000  
                           _I2C_start 188C                          ??_USART_init 0096  
                       _I2C_writeByte 1638                          __psmallconst 1000  
            ??_I2C_getByteFromAddress 00A2                               __pcinit 1582  
                             __ramtop 1000                               _delta_u 0027  
                             __ptext0 10E4                               __ptext1 15DE  
                             __ptext2 1942                               __ptext3 12EE  
                             __ptext4 1808                               __ptext5 147C  
                             __ptext6 1638                               __ptext7 184A  
                             __ptext8 188C                               __ptext9 13D8  
          __size_of_USART_putCharLine 005A                               _dpowers 1001  
                           _T2CONbits 000FBA              __size_ofi2_I2C_writeByte 004C  
                  __end_of_USART_init 12EE                  end_of_initialization 15D4  
                           _GPIO_init 19E4                         __Lmediumconst 0000  
                   USART_init@channel 0092                            ?_I2C_start 0096  
                      ?_I2C_writeByte 0096                               postdec1 000FE5  
                             postinc0 000FEE                      __CFG_FOSC$INTIO7 000000  
                           _TRISAbits 000F92                             _TRISBbits 000F93  
                           _TRISCbits 000F94                             _TRISEbits 000F96  
              ??_I2C_putByteAtAddress 0011                   I2C_readByte@channel 0096  
                   __size_of_I2C_nack 0036                     __size_of_I2C_init 004C  
                   __size_of_I2C_wait 0052                     __size_of_I2C_stop 0042  
                   __size_of_ADC_init 001E                            ?_GPIO_init 0001  
               __end_of_USART_getChar 1A50              USART_putCharLine@channel 009C  
               __end_of_USART_putChar 184A                 __end_of_USART_putLine 1978  
     __size_of_I2C_getByteFromAddress 00A0                         __pidataCOMRAM 1A82  
                   __size_of_IRQ_init 000A                     __size_of_OSC_init 000A  
                 start_initialization 1582                      I2C_readByte@temp 009B  
                  USART_putCharLine@c 00A0                        I2C_ack@channel 0092  
                   ??i2_I2C_writeByte 0007                       ??_I2C_writeByte 0098  
                     I2C_nack@channel 0092                  I2C_writeByte@channel 0096  
                      USART_putChar@c 0096                         ??i2_I2C_start 0007  
                         ??_I2C_start 0098                              ?_I2C_ack 0092  
                         __pbssCOMRAM 0023                  USART_putLine@channel 009A  
                       __pcstackBANK0 0092                   __end_of__stringdata 10E3  
                            ?_HW_init 0001                _I2C_getByteFromAddress 147C  
                         ??_GPIO_init 0092                  USART_getChar@channel 0001  
                   i2I2C_wait@channel 0001                             __pintcode 0008  
            __size_of_USART_putString 00EA                  USART_init@baudConfig 0098  
                 __end_ofi2_I2C_start 1942                      __CFG_PRICLKEN$ON 000000  
                         __smallconst 1000                    i2I2C_start@channel 0005  
                            _I2C_nack 1978                              _I2C_init 16E0  
                            _I2C_wait 168E                              _I2C_stop 184A  
                            _ADC_init 1A50                         ?_I2C_readByte 0096  
                            _PIE1bits 000F9D                              _PIE3bits 000FA3  
                     I2C_init@channel 0092                      __CFG_WDTPS$32768 000000  
              USART_putString@channel 0094                              _IRQ_init 1A78  
                            _SSP1CON1 000FC6                              _SSP1CON2 000FC5  
                            _SSP2CON1 000F6C                              _SSP2CON2 000F6B  
                            _SSP1STAT 000FC7                              _SSP2STAT 000F6D  
                            _OSC_init 1A6E                      __size_of_I2C_ack 0036  
                         __stringdata 100B                            _ADCON2bits 000FC0  
                      ??_I2C_readByte 0099  I2C_getByteFromAddress@device_address 009E  
                     I2C_readByte@ack 0098                      __size_of_HW_init 004A  
                          _EECON1bits 000FA6                              __Hrparam 0000  
                            __Lrparam 0000                           i2_I2C_start 1908  
                  __CFG_BOREN$SBORDIS 000000                     __CFG_P2BMX$PORTD2 000000  
                          _ANSELAbits 000F38                            _ANSELCbits 000F3A  
                          _ANSELEbits 000F3C                       i2_I2C_writeByte 172C  
                         _currentLine 0100                     ??_USART_putString 0096  
                   USART_putLine@line 0098                              __ptext10 168E  
                            __ptext11 1978                              __ptext12 19AE  
                            __ptext21 1A1A                              __ptext13 1778  
                            __ptext22 151C                              __ptext14 11F8  
                            __ptext23 172C                              __ptext15 1A6E  
                            __ptext24 18CE                              __ptext16 1A78  
                            __ptext25 1908                              __ptext17 16E0  
                            __ptext26 17C2                              __ptext18 19E4  
                            __ptext19 1A50                          _SSP1CON2bits 000FC5  
                        _SSP2CON2bits 000F6B         __size_of_I2C_putByteAtAddress 0066  
  I2C_putByteAtAddress@device_address 000C           I2C_putByteAtAddress@address 000E  
                       __size_of_main 0114           I2C_putByteAtAddress@channel 000A  
                            _setpoint 006F                              main@i_65 00AA  
                        _SSP2STATbits 000F6D                     i2I2C_stop@channel 0005  
                          _INTCONbits 000FF2                __size_of_USART_getChar 0036  
                          i2_I2C_wait 17C2                            i2_I2C_stop 18CE  
             ?_I2C_getByteFromAddress 009C                              intlevel2 0000  
              __size_of_USART_putChar 0042                __size_of_USART_putLine 0036  
                        _VREFCON0bits 000F42                            _RCSTA1bits 000FAB  
                          _RCSTA2bits 000F71                    USART_init@baudrate 0094  
                          _OSCCONbits 000FD3                  __end_of_I2C_readByte 147C  
                          _ISRHandler 0008                 __end_of_I2C_writeByte 168E  
             __end_ofi2_I2C_writeByte 1778        __end_of_I2C_getByteFromAddress 151C  
                   __CFG_T3CMX$PORTC0 000000                       I2C_wait@channel 0092  
                       _USART_getChar 1A1A                            _USART_init 11F8  
