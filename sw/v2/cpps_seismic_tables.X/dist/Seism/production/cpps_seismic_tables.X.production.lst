

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Jan 26 16:03:14 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  001A58                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _data
    49  001A58  61                 	db	97
    50                           
    51                           	psect	smallconst
    52  001000                     __psmallconst:
    53                           	opt stack 0
    54  001000  00                 	db	0
    55  001001                     _dpowers:
    56                           	opt stack 0
    57  001001  0001               	dw	1
    58  001003  000A               	dw	10
    59  001005  0064               	dw	100
    60  001007  03E8               	dw	1000
    61  001009  2710               	dw	10000
    62  00100B                     __end_of_dpowers:
    63                           	opt stack 0
    64  0000                     _ADCON0	set	4034
    65  0000                     _ADCON1	set	4033
    66  0000                     _ADCON2bits	set	4032
    67  0000                     _ANSELAbits	set	3896
    68  0000                     _ANSELC	set	3898
    69  0000                     _ANSELCbits	set	3898
    70  0000                     _ANSELEbits	set	3900
    71  0000                     _BAUDCON1bits	set	4024
    72  0000                     _BAUDCON2bits	set	3952
    73  0000                     _CCP1CON	set	4029
    74  0000                     _CCPR1L	set	4030
    75  0000                     _EEADR	set	4009
    76  0000                     _EEADRH	set	4010
    77  0000                     _EECON1bits	set	4006
    78  0000                     _EECON2	set	4007
    79  0000                     _EEDATA	set	4008
    80  0000                     _INTCONbits	set	4082
    81  0000                     _OSCCONbits	set	4051
    82  0000                     _PIE1bits	set	3997
    83  0000                     _PIE3bits	set	4003
    84  0000                     _PR2	set	4027
    85  0000                     _PR4	set	3922
    86  0000                     _RCREG1	set	4014
    87  0000                     _RCREG2	set	3956
    88  0000                     _RCSTA1bits	set	4011
    89  0000                     _RCSTA2bits	set	3953
    90  0000                     _SPBRG1	set	4015
    91  0000                     _SPBRG2	set	3957
    92  0000                     _SSP1ADD	set	4040
    93  0000                     _SSP1BUF	set	4041
    94  0000                     _SSP1CON1	set	4038
    95  0000                     _SSP1CON2	set	4037
    96  0000                     _SSP1CON2bits	set	4037
    97  0000                     _SSP1STAT	set	4039
    98  0000                     _SSP2ADD	set	3950
    99  0000                     _SSP2BUF	set	3951
   100  0000                     _SSP2CON1	set	3948
   101  0000                     _SSP2CON2	set	3947
   102  0000                     _SSP2CON2bits	set	3947
   103  0000                     _SSP2STAT	set	3949
   104  0000                     _SSP2STATbits	set	3949
   105  0000                     _T2CONbits	set	4026
   106  0000                     _T4CON	set	3921
   107  0000                     _TRISAbits	set	3986
   108  0000                     _TRISBbits	set	3987
   109  0000                     _TRISCbits	set	3988
   110  0000                     _TRISEbits	set	3990
   111  0000                     _TX1REG	set	4013
   112  0000                     _TX2REG	set	3955
   113  0000                     _TXREG1	set	4013
   114  0000                     _TXREG2	set	3955
   115  0000                     _TXSTA1bits	set	4012
   116  0000                     _TXSTA2bits	set	3954
   117  0000                     _VREFCON0bits	set	3906
   118  0000                     _GIE	set	32663
   119  0000                     _IPEN	set	32391
   120  0000                     _PEIE	set	32662
   121  0000                     _PLLEN	set	31966
   122  0000                     _RC1IE	set	31981
   123  0000                     _RC1IF	set	31989
   124  0000                     _RC2IF	set	32037
   125  0000                     _RCIE	set	31981
   126  0000                     _TRMT1	set	32097
   127  0000                     _TRMT2	set	31633
   128  0000                     _TX1IF	set	31988
   129  0000                     _TX2IF	set	32036
   130  00100B                     __stringdata:
   131                           	opt stack 0
   132  00100B  59                 	db	89	;'Y'
   133  00100C  6F                 	db	111	;'o'
   134  00100D  75                 	db	117	;'u'
   135  00100E  20                 	db	32
   136  00100F  74                 	db	116	;'t'
   137  001010  72                 	db	114	;'r'
   138  001011  79                 	db	121	;'y'
   139  001012  20                 	db	32
   140  001013  74                 	db	116	;'t'
   141  001014  6F                 	db	111	;'o'
   142  001015  20                 	db	32
   143  001016  61                 	db	97	;'a'
   144  001017  63                 	db	99	;'c'
   145  001018  63                 	db	99	;'c'
   146  001019  65                 	db	101	;'e'
   147  00101A  73                 	db	115	;'s'
   148  00101B  73                 	db	115	;'s'
   149  00101C  20                 	db	32
   150  00101D  61                 	db	97	;'a'
   151  00101E  6E                 	db	110	;'n'
   152  00101F  20                 	db	32
   153  001020  61                 	db	97	;'a'
   154  001021  64                 	db	100	;'d'
   155  001022  64                 	db	100	;'d'
   156  001023  72                 	db	114	;'r'
   157  001024  65                 	db	101	;'e'
   158  001025  73                 	db	115	;'s'
   159  001026  73                 	db	115	;'s'
   160  001027  20                 	db	32
   161  001028  77                 	db	119	;'w'
   162  001029  68                 	db	104	;'h'
   163  00102A  69                 	db	105	;'i'
   164  00102B  63                 	db	99	;'c'
   165  00102C  68                 	db	104	;'h'
   166  00102D  20                 	db	32
   167  00102E  64                 	db	100	;'d'
   168  00102F  6F                 	db	111	;'o'
   169  001030  65                 	db	101	;'e'
   170  001031  73                 	db	115	;'s'
   171  001032  6E                 	db	110	;'n'
   172  001033  27                 	db	39
   173  001034  74                 	db	116	;'t'
   174  001035  20                 	db	32
   175  001036  65                 	db	101	;'e'
   176  001037  78                 	db	120	;'x'
   177  001038  69                 	db	105	;'i'
   178  001039  73                 	db	115	;'s'
   179  00103A  74                 	db	116	;'t'
   180  00103B  2E                 	db	46
   181  00103C  00                 	db	0
   182  00103D                     STR_1:
   183  00103D  57                 	db	87	;'W'
   184  00103E  65                 	db	101	;'e'
   185  00103F  6C                 	db	108	;'l'
   186  001040  63                 	db	99	;'c'
   187  001041  6F                 	db	111	;'o'
   188  001042  6D                 	db	109	;'m'
   189  001043  65                 	db	101	;'e'
   190  001044  20                 	db	32
   191  001045  74                 	db	116	;'t'
   192  001046  6F                 	db	111	;'o'
   193  001047  20                 	db	32
   194  001048  74                 	db	116	;'t'
   195  001049  68                 	db	104	;'h'
   196  00104A  65                 	db	101	;'e'
   197  00104B  20                 	db	32
   198  00104C  53                 	db	83	;'S'
   199  00104D  65                 	db	101	;'e'
   200  00104E  69                 	db	105	;'i'
   201  00104F  73                 	db	115	;'s'
   202  001050  6D                 	db	109	;'m'
   203  001051  69                 	db	105	;'i'
   204  001052  63                 	db	99	;'c'
   205  001053  20                 	db	32
   206  001054  74                 	db	116	;'t'
   207  001055  61                 	db	97	;'a'
   208  001056  62                 	db	98	;'b'
   209  001057  6C                 	db	108	;'l'
   210  001058  65                 	db	101	;'e'
   211  001059  20                 	db	32
   212  00105A  53                 	db	83	;'S'
   213  00105B  57                 	db	87	;'W'
   214  00105C  00                 	db	0
   215  00105D  45                 	db	69	;'E'
   216  00105E  45                 	db	69	;'E'
   217  00105F  50                 	db	80	;'P'
   218  001060  52                 	db	82	;'R'
   219  001061  4F                 	db	79	;'O'
   220  001062  4D                 	db	77	;'M'
   221  001063  20                 	db	32
   222  001064  77                 	db	119	;'w'
   223  001065  72                 	db	114	;'r'
   224  001066  69                 	db	105	;'i'
   225  001067  74                 	db	116	;'t'
   226  001068  65                 	db	101	;'e'
   227  001069  20                 	db	32
   228  00106A  70                 	db	112	;'p'
   229  00106B  72                 	db	114	;'r'
   230  00106C  6F                 	db	111	;'o'
   231  00106D  63                 	db	99	;'c'
   232  00106E  65                 	db	101	;'e'
   233  00106F  73                 	db	115	;'s'
   234  001070  73                 	db	115	;'s'
   235  001071  20                 	db	32
   236  001072  66                 	db	102	;'f'
   237  001073  61                 	db	97	;'a'
   238  001074  69                 	db	105	;'i'
   239  001075  6C                 	db	108	;'l'
   240  001076  65                 	db	101	;'e'
   241  001077  64                 	db	100	;'d'
   242  001078  2E                 	db	46
   243  001079  00                 	db	0
   244  00107A  52                 	db	82	;'R'
   245  00107B  65                 	db	101	;'e'
   246  00107C  61                 	db	97	;'a'
   247  00107D  64                 	db	100	;'d'
   248  00107E  69                 	db	105	;'i'
   249  00107F  6E                 	db	110	;'n'
   250  001080  67                 	db	103	;'g'
   251  001081  20                 	db	32
   252  001082  64                 	db	100	;'d'
   253  001083  61                 	db	97	;'a'
   254  001084  74                 	db	116	;'t'
   255  001085  61                 	db	97	;'a'
   256  001086  20                 	db	32
   257  001087  66                 	db	102	;'f'
   258  001088  72                 	db	114	;'r'
   259  001089  6F                 	db	111	;'o'
   260  00108A  6D                 	db	109	;'m'
   261  00108B  20                 	db	32
   262  00108C  45                 	db	69	;'E'
   263  00108D  45                 	db	69	;'E'
   264  00108E  50                 	db	80	;'P'
   265  00108F  52                 	db	82	;'R'
   266  001090  4F                 	db	79	;'O'
   267  001091  4D                 	db	77	;'M'
   268  001092  2E                 	db	46
   269  001093  2E                 	db	46
   270  001094  2E                 	db	46
   271  001095  00                 	db	0
   272  001096  46                 	db	70	;'F'
   273  001097  69                 	db	105	;'i'
   274  001098  6C                 	db	108	;'l'
   275  001099  6C                 	db	108	;'l'
   276  00109A  69                 	db	105	;'i'
   277  00109B  6E                 	db	110	;'n'
   278  00109C  67                 	db	103	;'g'
   279  00109D  20                 	db	32
   280  00109E  45                 	db	69	;'E'
   281  00109F  45                 	db	69	;'E'
   282  0010A0  50                 	db	80	;'P'
   283  0010A1  52                 	db	82	;'R'
   284  0010A2  4F                 	db	79	;'O'
   285  0010A3  4D                 	db	77	;'M'
   286  0010A4  20                 	db	32
   287  0010A5  77                 	db	119	;'w'
   288  0010A6  69                 	db	105	;'i'
   289  0010A7  74                 	db	116	;'t'
   290  0010A8  68                 	db	104	;'h'
   291  0010A9  20                 	db	32
   292  0010AA  64                 	db	100	;'d'
   293  0010AB  61                 	db	97	;'a'
   294  0010AC  74                 	db	116	;'t'
   295  0010AD  61                 	db	97	;'a'
   296  0010AE  2E                 	db	46
   297  0010AF  2E                 	db	46
   298  0010B0  2E                 	db	46
   299  0010B1  00                 	db	0
   300  0010B2                     STR_3:
   301  0010B2  52                 	db	82	;'R'
   302  0010B3  65                 	db	101	;'e'
   303  0010B4  61                 	db	97	;'a'
   304  0010B5  64                 	db	100	;'d'
   305  0010B6  69                 	db	105	;'i'
   306  0010B7  6E                 	db	110	;'n'
   307  0010B8  67                 	db	103	;'g'
   308  0010B9  20                 	db	32
   309  0010BA  66                 	db	102	;'f'
   310  0010BB  69                 	db	105	;'i'
   311  0010BC  6C                 	db	108	;'l'
   312  0010BD  6C                 	db	108	;'l'
   313  0010BE  65                 	db	101	;'e'
   314  0010BF  64                 	db	100	;'d'
   315  0010C0  20                 	db	32
   316  0010C1  45                 	db	69	;'E'
   317  0010C2  45                 	db	69	;'E'
   318  0010C3  50                 	db	80	;'P'
   319  0010C4  52                 	db	82	;'R'
   320  0010C5  4F                 	db	79	;'O'
   321  0010C6  4D                 	db	77	;'M'
   322  0010C7  00                 	db	0
   323  0010C8                     STR_2:
   324  0010C8  2D                 	db	45
   325  0010C9  2D                 	db	45
   326  0010CA  2D                 	db	45
   327  0010CB  2D                 	db	45
   328  0010CC  2D                 	db	45
   329  0010CD  2D                 	db	45
   330  0010CE  2D                 	db	45
   331  0010CF  2D                 	db	45
   332  0010D0  2D                 	db	45
   333  0010D1  2D                 	db	45
   334  0010D2  2D                 	db	45
   335  0010D3  2D                 	db	45
   336  0010D4  2D                 	db	45
   337  0010D5  2D                 	db	45
   338  0010D6  2D                 	db	45
   339  0010D7  2D                 	db	45
   340  0010D8  2D                 	db	45
   341  0010D9  2D                 	db	45
   342  0010DA  2D                 	db	45
   343  0010DB  2D                 	db	45
   344  0010DC  00                 	db	0
   345  0010DD                     STR_4:
   346  0010DD  52                 	db	82	;'R'
   347  0010DE  65                 	db	101	;'e'
   348  0010DF  61                 	db	97	;'a'
   349  0010E0  64                 	db	100	;'d'
   350  0010E1  69                 	db	105	;'i'
   351  0010E2  6E                 	db	110	;'n'
   352  0010E3  67                 	db	103	;'g'
   353  0010E4  20                 	db	32
   354  0010E5  73                 	db	115	;'s'
   355  0010E6  75                 	db	117	;'u'
   356  0010E7  63                 	db	99	;'c'
   357  0010E8  63                 	db	99	;'c'
   358  0010E9  65                 	db	101	;'e'
   359  0010EA  73                 	db	115	;'s'
   360  0010EB  73                 	db	115	;'s'
   361  0010EC  66                 	db	102	;'f'
   362  0010ED  75                 	db	117	;'u'
   363  0010EE  6C                 	db	108	;'l'
   364  0010EF  00                 	db	0
   365  0010F0  25                 	db	37
   366  0010F1  63                 	db	99	;'c'
   367  0010F2  00                 	db	0
   368  0010F3  25                 	db	37
   369  0010F4  64                 	db	100	;'d'
   370  0010F5  00                 	db	0
   371  0010F6                     __end_of__stringdata:
   372                           	opt stack 0
   373                           
   374                           ; #config settings
   375  0010F6  00                 	db	0	; dummy byte at the end
   376  0000                     
   377                           	psect	cinit
   378  0015B2                     __pcinit:
   379                           	opt stack 0
   380  0015B2                     start_initialization:
   381                           	opt stack 0
   382  0015B2                     __initialization:
   383                           	opt stack 0
   384                           
   385                           ; Clear objects allocated to BANK2 (256 bytes)
   386  0015B2  EE02  F000         	lfsr	0,__pbssBANK2
   387  0015B6  EE11 F000          	lfsr	1,256
   388  0015BA                     clear_0:
   389  0015BA  6AEE               	clrf	postinc0,c
   390  0015BC  50E5               	movf	postdec1,w,c
   391  0015BE  50E1               	movf	fsr1l,w,c
   392  0015C0  E1FC               	bnz	clear_0
   393  0015C2  50E2               	movf	fsr1h,w,c
   394  0015C4  E1FA               	bnz	clear_0
   395                           
   396                           ; Clear objects allocated to BANK1 (256 bytes)
   397  0015C6  EE01  F000         	lfsr	0,__pbssBANK1
   398  0015CA  EE11 F000          	lfsr	1,256
   399  0015CE                     clear_1:
   400  0015CE  6AEE               	clrf	postinc0,c
   401  0015D0  50E5               	movf	postdec1,w,c
   402  0015D2  50E1               	movf	fsr1l,w,c
   403  0015D4  E1FC               	bnz	clear_1
   404  0015D6  50E2               	movf	fsr1h,w,c
   405  0015D8  E1FA               	bnz	clear_1
   406                           
   407                           ; Clear objects allocated to BANK0 (48 bytes)
   408  0015DA  EE00  F060         	lfsr	0,__pbssBANK0
   409  0015DE  0E30               	movlw	48
   410  0015E0                     clear_2:
   411  0015E0  6AEE               	clrf	postinc0,c
   412  0015E2  06E8               	decf	wreg,f,c
   413  0015E4  E1FD               	bnz	clear_2
   414                           
   415                           ; Clear objects allocated to COMRAM (34 bytes)
   416  0015E6  EE00  F026         	lfsr	0,__pbssCOMRAM
   417  0015EA  0E22               	movlw	34
   418  0015EC                     clear_3:
   419  0015EC  6AEE               	clrf	postinc0,c
   420  0015EE  06E8               	decf	wreg,f,c
   421  0015F0  E1FD               	bnz	clear_3
   422                           
   423                           ; Initialize objects allocated to COMRAM (1 bytes)
   424                           ; load TBLPTR registers with __pidataCOMRAM
   425  0015F2  0E58               	movlw	low __pidataCOMRAM
   426  0015F4  6EF6               	movwf	tblptrl,c
   427  0015F6  0E1A               	movlw	high __pidataCOMRAM
   428  0015F8  6EF7               	movwf	tblptrh,c
   429  0015FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   430  0015FC  6EF8               	movwf	tblptru,c
   431  0015FE  0009               	tblrd		*+	;fetch initializer
   432  001600  CFF5 F048          	movff	tablat,__pdataCOMRAM
   433  001604                     end_of_initialization:
   434                           	opt stack 0
   435  001604                     __end_of__initialization:
   436                           	opt stack 0
   437  001604  0E00               	movlw	low (__Lmediumconst shr (0+16))
   438  001606  6EF8               	movwf	tblptru,c
   439  001608  0100               	movlb	0
   440  00160A  EF7C  F008         	goto	_main	;jump to C main() function
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1h	equ	0xFE2
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	bssCOMRAM
   452  000026                     __pbssCOMRAM:
   453                           	opt stack 0
   454  000026                     _delta_u:
   455                           	opt stack 0
   456  000026                     	ds	3
   457  000029                     _e:
   458                           	opt stack 0
   459  000029                     	ds	3
   460  00002C                     _e1:
   461                           	opt stack 0
   462  00002C                     	ds	3
   463  00002F                     _e2:
   464                           	opt stack 0
   465  00002F                     	ds	3
   466  000032                     _k1:
   467                           	opt stack 0
   468  000032                     	ds	3
   469  000035                     _k2:
   470                           	opt stack 0
   471  000035                     	ds	3
   472  000038                     _k3:
   473                           	opt stack 0
   474  000038                     	ds	3
   475  00003B                     _u:
   476                           	opt stack 0
   477  00003B                     	ds	3
   478  00003E                     _y:
   479                           	opt stack 0
   480  00003E                     	ds	3
   481  000041                     _a:
   482                           	opt stack 0
   483  000041                     	ds	2
   484  000043                     _index:
   485                           	opt stack 0
   486  000043                     	ds	2
   487  000045                     _i2cread:
   488                           	opt stack 0
   489  000045                     	ds	1
   490  000046                     _rx1:
   491                           	opt stack 0
   492  000046                     	ds	1
   493  000047                     _rx2:
   494                           	opt stack 0
   495  000047                     	ds	1
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1h	equ	0xFE2
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	dataCOMRAM
   507  000048                     __pdataCOMRAM:
   508                           	opt stack 0
   509  000048                     _data:
   510                           	opt stack 0
   511  000048                     	ds	1
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1h	equ	0xFE2
   520                           fsr1l	equ	0xFE1
   521                           
   522                           	psect	bssBANK0
   523  000060                     __pbssBANK0:
   524                           	opt stack 0
   525  000060                     _addr:
   526                           	opt stack 0
   527  000060                     	ds	4
   528  000064                     _kd:
   529                           	opt stack 0
   530  000064                     	ds	3
   531  000067                     _ki:
   532                           	opt stack 0
   533  000067                     	ds	3
   534  00006A                     _kp:
   535                           	opt stack 0
   536  00006A                     	ds	3
   537  00006D                     _setpoint:
   538                           	opt stack 0
   539  00006D                     	ds	3
   540  000070                     _str:
   541                           	opt stack 0
   542  000070                     	ds	32
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           postdec1	equ	0xFE5
   550                           fsr1h	equ	0xFE2
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	bssBANK1
   554  000100                     __pbssBANK1:
   555                           	opt stack 0
   556  000100                     _currentLine:
   557                           	opt stack 0
   558  000100                     	ds	256
   559                           tblptru	equ	0xFF8
   560                           tblptrh	equ	0xFF7
   561                           tblptrl	equ	0xFF6
   562                           tablat	equ	0xFF5
   563                           postinc0	equ	0xFEE
   564                           wreg	equ	0xFE8
   565                           postdec1	equ	0xFE5
   566                           fsr1h	equ	0xFE2
   567                           fsr1l	equ	0xFE1
   568                           
   569                           	psect	bssBANK2
   570  000200                     __pbssBANK2:
   571                           	opt stack 0
   572  000200                     _temp:
   573                           	opt stack 0
   574  000200                     	ds	256
   575                           tblptru	equ	0xFF8
   576                           tblptrh	equ	0xFF7
   577                           tblptrl	equ	0xFF6
   578                           tablat	equ	0xFF5
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           postdec1	equ	0xFE5
   582                           fsr1h	equ	0xFE2
   583                           fsr1l	equ	0xFE1
   584                           
   585                           	psect	cstackBANK0
   586  000090                     __pcstackBANK0:
   587                           	opt stack 0
   588  000090                     ADC_init@channel:
   589                           	opt stack 0
   590  000090                     USART_init@channel:
   591                           	opt stack 0
   592  000090                     I2C_init@channel:
   593                           	opt stack 0
   594  000090                     USART_putChar@channel:
   595                           	opt stack 0
   596  000090                     USART_putString@string:
   597                           	opt stack 0
   598  000090                     I2C_ack@channel:
   599                           	opt stack 0
   600  000090                     I2C_nack@channel:
   601                           	opt stack 0
   602  000090                     I2C_wait@channel:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x0
   606  000090                     	ds	2
   607  000092                     ??_USART_putChar:
   608  000092                     ??_I2C_init:
   609  000092                     ??_I2C_wait:
   610  000092                     ??_I2C_ack:
   611  000092                     ??_I2C_nack:
   612  000092                     USART_init@baudrate:
   613                           	opt stack 0
   614  000092                     USART_putString@channel:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x2
   618  000092                     	ds	2
   619  000094                     ??_USART_init:
   620  000094                     ??_USART_putString:
   621  000094                     USART_putChar@c:
   622                           	opt stack 0
   623  000094                     I2C_start@channel:
   624                           	opt stack 0
   625  000094                     I2C_stop@channel:
   626                           	opt stack 0
   627  000094                     I2C_writeByte@channel:
   628                           	opt stack 0
   629  000094                     I2C_readByte@channel:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x4
   633  000094                     	ds	2
   634  000096                     ??_I2C_start:
   635  000096                     ??_I2C_stop:
   636  000096                     ??_I2C_writeByte:
   637  000096                     I2C_readByte@ack:
   638                           	opt stack 0
   639  000096                     USART_init@baudConfig:
   640                           	opt stack 0
   641  000096                     USART_putLine@line:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x6
   645  000096                     	ds	1
   646  000097                     ??_I2C_readByte:
   647                           
   648                           ; 0 bytes @ 0x7
   649  000097                     	ds	1
   650  000098                     I2C_writeByte@b:
   651                           	opt stack 0
   652  000098                     USART_putLine@channel:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x8
   656  000098                     	ds	1
   657  000099                     I2C_readByte@temp:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x9
   661  000099                     	ds	1
   662  00009A                     I2C_getByteFromAddress@channel:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0xA
   666  00009A                     	ds	2
   667  00009C                     I2C_getByteFromAddress@device_address:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0xC
   671  00009C                     	ds	1
   672  00009D                     I2C_getByteFromAddress@page:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0xD
   676  00009D                     	ds	1
   677  00009E                     I2C_getByteFromAddress@address:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0xE
   681  00009E                     	ds	2
   682  0000A0                     ??_I2C_getByteFromAddress:
   683                           
   684                           ; 0 bytes @ 0x10
   685  0000A0                     	ds	3
   686  0000A3                     I2C_getByteFromAddress@b:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x13
   690  0000A3                     	ds	1
   691  0000A4                     ??_main:
   692                           
   693                           ; 0 bytes @ 0x14
   694  0000A4                     	ds	1
   695  0000A5                     main@t:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x15
   699  0000A5                     	ds	1
   700  0000A6                     main@i:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x16
   704  0000A6                     	ds	2
   705  0000A8                     main@i_65:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x18
   709  0000A8                     	ds	2
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1h	equ	0xFE2
   718                           fsr1l	equ	0xFE1
   719                           
   720                           	psect	cstackCOMRAM
   721  000001                     __pcstackCOMRAM:
   722                           	opt stack 0
   723  000001                     USART_getChar@channel:
   724                           	opt stack 0
   725  000001                     i2I2C_wait@channel:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x0
   729  000001                     	ds	2
   730  000003                     ??_USART_getChar:
   731  000003                     ??i2_I2C_wait:
   732                           
   733                           ; 0 bytes @ 0x2
   734  000003                     	ds	2
   735  000005                     i2I2C_start@channel:
   736                           	opt stack 0
   737  000005                     i2I2C_stop@channel:
   738                           	opt stack 0
   739  000005                     i2I2C_writeByte@channel:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x4
   743  000005                     	ds	2
   744  000007                     ??i2_I2C_start:
   745  000007                     ??i2_I2C_stop:
   746  000007                     ??i2_I2C_writeByte:
   747                           
   748                           ; 0 bytes @ 0x6
   749  000007                     	ds	2
   750  000009                     i2I2C_writeByte@b:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x8
   754  000009                     	ds	1
   755  00000A                     I2C_putByteAtAddress@channel:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x9
   759  00000A                     	ds	2
   760  00000C                     I2C_putByteAtAddress@device_address:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0xB
   764  00000C                     	ds	1
   765  00000D                     I2C_putByteAtAddress@page:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0xC
   769  00000D                     	ds	1
   770  00000E                     I2C_putByteAtAddress@address:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0xD
   774  00000E                     	ds	2
   775  000010                     I2C_putByteAtAddress@byte:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0xF
   779  000010                     	ds	1
   780  000011                     ??_I2C_putByteAtAddress:
   781                           
   782                           ; 0 bytes @ 0x10
   783  000011                     	ds	3
   784  000014                     ??_ISRHandler:
   785                           
   786                           ; 0 bytes @ 0x13
   787  000014                     	ds	15
   788  000023                     ISRHandler@c:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x22
   792  000023                     	ds	1
   793  000024                     ISRHandler@i:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x23
   797  000024                     	ds	2
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           postdec1	equ	0xFE5
   805                           fsr1h	equ	0xFE2
   806                           fsr1l	equ	0xFE1
   807                           
   808 ;;
   809 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   810 ;;
   811 ;; *************** function _main *****************
   812 ;; Defined at:
   813 ;;		line 34 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  i               2   24[BANK0 ] unsigned int 
   818 ;;  i               2   22[BANK0 ] int 
   819 ;;  t               1   21[BANK0 ] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;		None               void
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        6 bytes
   834 ;; Hardware stack levels required when called:    7
   835 ;; This function calls:
   836 ;;		_HW_init
   837 ;;		_I2C_getByteFromAddress
   838 ;;		_USART_putChar
   839 ;;		_USART_putLine
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text0
   846  0010F8                     __ptext0:
   847                           	opt stack 0
   848  0010F8                     _main:
   849                           	opt stack 24
   850                           
   851                           ;main.c: 37: unsigned char t;
   852                           ;main.c: 38: HW_init();
   853                           
   854                           ;incstack = 0
   855  0010F8  ECA7  F00B         	call	_HW_init	;wreg free
   856                           
   857                           ;main.c: 39: _delay((unsigned long)((10000)*(64000000L/4000000.0)));
   858  0010FC  0ED0               	movlw	208
   859  0010FE  0100               	movlb	0	; () banked
   860  001100  6FA4               	movwf	??_main& (0+255),b
   861  001102  0ECA               	movlw	202
   862  001104                     u1327:
   863  001104  2EE8               	decfsz	wreg,f,c
   864  001106  D7FE               	goto	u1327
   865  001108  2FA4               	decfsz	??_main& (0+255),f,b
   866  00110A  D7FC               	goto	u1327
   867                           
   868                           ;main.c: 41: USART_putLine("Welcome to the Seismic table SW", (unsigned int)1);
   869  00110C  0E10               	movlw	high STR_1
   870  00110E  0100               	movlb	0	; () banked
   871  001110  6F97               	movwf	(USART_putLine@line+1)& (0+255),b
   872  001112  0E3D               	movlw	low STR_1
   873  001114  0100               	movlb	0	; () banked
   874  001116  6F96               	movwf	USART_putLine@line& (0+255),b
   875  001118  0E00               	movlw	0
   876  00111A  0100               	movlb	0	; () banked
   877  00111C  6F99               	movwf	(USART_putLine@channel+1)& (0+255),b
   878  00111E  0E01               	movlw	1
   879  001120  0100               	movlb	0	; () banked
   880  001122  6F98               	movwf	USART_putLine@channel& (0+255),b
   881  001124  EC8C  F00C         	call	_USART_putLine	;wreg free
   882                           
   883                           ;main.c: 46: USART_putLine("--------------------", (unsigned int)1);
   884  001128  0E10               	movlw	high STR_2
   885  00112A  0100               	movlb	0	; () banked
   886  00112C  6F97               	movwf	(USART_putLine@line+1)& (0+255),b
   887  00112E  0EC8               	movlw	low STR_2
   888  001130  0100               	movlb	0	; () banked
   889  001132  6F96               	movwf	USART_putLine@line& (0+255),b
   890  001134  0E00               	movlw	0
   891  001136  0100               	movlb	0	; () banked
   892  001138  6F99               	movwf	(USART_putLine@channel+1)& (0+255),b
   893  00113A  0E01               	movlw	1
   894  00113C  0100               	movlb	0	; () banked
   895  00113E  6F98               	movwf	USART_putLine@channel& (0+255),b
   896  001140  EC8C  F00C         	call	_USART_putLine	;wreg free
   897  001144                     l3641:
   898                           
   899                           ;main.c: 53: {
   900                           ;main.c: 63: for(int i = 0; i < 1000; i++)
   901  001144  0E00               	movlw	0
   902  001146  0100               	movlb	0	; () banked
   903  001148  6FA7               	movwf	(main@i+1)& (0+255),b
   904  00114A  0E00               	movlw	0
   905  00114C  0100               	movlb	0	; () banked
   906  00114E  6FA6               	movwf	main@i& (0+255),b
   907  001150                     
   908                           ; BSR set to: 0
   909  001150  0100               	movlb	0	; () banked
   910  001152  51A7               	movf	(main@i+1)& (0+255),w,b
   911  001154  0A80               	xorlw	128
   912  001156  0F7D               	addlw	-131
   913  001158  0EE8               	movlw	232
   914  00115A  B4D8               	btfsc	status,2,c
   915  00115C  5DA6               	subwf	main@i& (0+255),w,b
   916  00115E  B0D8               	btfsc	status,0,c
   917  001160  D00D               	goto	l3651
   918                           
   919                           ; BSR set to: 0
   920                           ;main.c: 64: {
   921                           ;main.c: 65: _delay((unsigned long)((5)*(64000000L/4000.0)));
   922                           
   923                           ; BSR set to: 0
   924                           
   925                           ; BSR set to: 0
   926  001162  0E68               	movlw	104
   927  001164  0100               	movlb	0	; () banked
   928  001166  6FA4               	movwf	??_main& (0+255),b
   929  001168  0EE4               	movlw	228
   930  00116A                     u1337:
   931  00116A  2EE8               	decfsz	wreg,f,c
   932  00116C  D7FE               	goto	u1337
   933  00116E  2FA4               	decfsz	??_main& (0+255),f,b
   934  001170  D7FC               	goto	u1337
   935  001172  D000               	nop2	
   936  001174  0100               	movlb	0	; () banked
   937  001176  4BA6               	infsnz	main@i& (0+255),f,b
   938  001178  2BA7               	incf	(main@i+1)& (0+255),f,b
   939  00117A  D7EA               	goto	L1
   940  00117C                     l3651:
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 66: }
   944                           ;main.c: 71: USART_putLine("Reading filled EEPROM", (unsigned int)1);
   945  00117C  0E10               	movlw	high STR_3
   946  00117E  0100               	movlb	0	; () banked
   947  001180  6F97               	movwf	(USART_putLine@line+1)& (0+255),b
   948  001182  0EB2               	movlw	low STR_3
   949  001184  0100               	movlb	0	; () banked
   950  001186  6F96               	movwf	USART_putLine@line& (0+255),b
   951  001188  0E00               	movlw	0
   952  00118A  0100               	movlb	0	; () banked
   953  00118C  6F99               	movwf	(USART_putLine@channel+1)& (0+255),b
   954  00118E  0E01               	movlw	1
   955  001190  0100               	movlb	0	; () banked
   956  001192  6F98               	movwf	USART_putLine@channel& (0+255),b
   957  001194  EC8C  F00C         	call	_USART_putLine	;wreg free
   958                           
   959                           ;main.c: 72: for(unsigned int i = 0; i < 0x1000; i++)
   960  001198  0E00               	movlw	0
   961  00119A  0100               	movlb	0	; () banked
   962  00119C  6FA9               	movwf	(main@i_65+1)& (0+255),b
   963  00119E  0E00               	movlw	0
   964  0011A0  0100               	movlb	0	; () banked
   965  0011A2  6FA8               	movwf	main@i_65& (0+255),b
   966  0011A4                     
   967                           ; BSR set to: 0
   968  0011A4  0E00               	movlw	0
   969  0011A6  0100               	movlb	0	; () banked
   970  0011A8  5DA8               	subwf	main@i_65& (0+255),w,b
   971  0011AA  0E10               	movlw	16
   972  0011AC  0100               	movlb	0	; () banked
   973  0011AE  59A9               	subwfb	(main@i_65+1)& (0+255),w,b
   974  0011B0  B0D8               	btfsc	status,0,c
   975  0011B2  D02B               	goto	l3667
   976                           
   977                           ; BSR set to: 0
   978                           ;main.c: 73: {
   979                           ;main.c: 74: t = I2C_getByteFromAddress((unsigned int)1, (unsigned char)0x53, 0, i);
   980                           
   981                           ; BSR set to: 0
   982                           
   983                           ; BSR set to: 0
   984  0011B4  0E00               	movlw	0
   985  0011B6  0100               	movlb	0	; () banked
   986  0011B8  6F9B               	movwf	(I2C_getByteFromAddress@channel+1)& (0+255),b
   987  0011BA  0E01               	movlw	1
   988  0011BC  0100               	movlb	0	; () banked
   989  0011BE  6F9A               	movwf	I2C_getByteFromAddress@channel& (0+255),b
   990  0011C0  0E53               	movlw	83
   991  0011C2  0100               	movlb	0	; () banked
   992  0011C4  6F9C               	movwf	I2C_getByteFromAddress@device_address& (0+255),b
   993  0011C6  0E00               	movlw	0
   994  0011C8  0100               	movlb	0	; () banked
   995  0011CA  6F9D               	movwf	I2C_getByteFromAddress@page& (0+255),b
   996  0011CC  C0A8  F09E         	movff	main@i_65,I2C_getByteFromAddress@address
   997  0011D0  C0A9  F09F         	movff	main@i_65+1,I2C_getByteFromAddress@address+1
   998  0011D4  EC56  F00A         	call	_I2C_getByteFromAddress	;wreg free
   999  0011D8  0100               	movlb	0	; () banked
  1000  0011DA  6FA5               	movwf	main@t& (0+255),b
  1001                           
  1002                           ;main.c: 75: USART_putChar(t, (unsigned int)1);
  1003  0011DC  0E00               	movlw	0
  1004  0011DE  0100               	movlb	0	; () banked
  1005  0011E0  6F91               	movwf	(USART_putChar@channel+1)& (0+255),b
  1006  0011E2  0E01               	movlw	1
  1007  0011E4  0100               	movlb	0	; () banked
  1008  0011E6  6F90               	movwf	USART_putChar@channel& (0+255),b
  1009  0011E8  0100               	movlb	0	; () banked
  1010  0011EA  51A5               	movf	main@t& (0+255),w,b
  1011  0011EC  ECEF  F00B         	call	_USART_putChar
  1012                           
  1013                           ;main.c: 76: _delay((unsigned long)((5)*(64000000L/4000.0)));
  1014  0011F0  0E68               	movlw	104
  1015  0011F2  0100               	movlb	0	; () banked
  1016  0011F4  6FA4               	movwf	??_main& (0+255),b
  1017  0011F6  0EE4               	movlw	228
  1018  0011F8                     u1347:
  1019  0011F8  2EE8               	decfsz	wreg,f,c
  1020  0011FA  D7FE               	goto	u1347
  1021  0011FC  2FA4               	decfsz	??_main& (0+255),f,b
  1022  0011FE  D7FC               	goto	u1347
  1023  001200  D000               	nop2	
  1024  001202  0100               	movlb	0	; () banked
  1025  001204  4BA8               	infsnz	main@i_65& (0+255),f,b
  1026  001206  2BA9               	incf	(main@i_65+1)& (0+255),f,b
  1027  001208  D7CD               	goto	L2
  1028  00120A                     l3667:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 77: }
  1032                           ;main.c: 78: USART_putLine("Reading successful", (unsigned int)1);
  1033  00120A  0E10               	movlw	high STR_4
  1034  00120C  0100               	movlb	0	; () banked
  1035  00120E  6F97               	movwf	(USART_putLine@line+1)& (0+255),b
  1036  001210  0EDD               	movlw	low STR_4
  1037  001212  0100               	movlb	0	; () banked
  1038  001214  6F96               	movwf	USART_putLine@line& (0+255),b
  1039  001216  0E00               	movlw	0
  1040  001218  0100               	movlb	0	; () banked
  1041  00121A  6F99               	movwf	(USART_putLine@channel+1)& (0+255),b
  1042  00121C  0E01               	movlw	1
  1043  00121E  0100               	movlb	0	; () banked
  1044  001220  6F98               	movwf	USART_putLine@channel& (0+255),b
  1045  001222  EC8C  F00C         	call	_USART_putLine	;wreg free
  1046  001226  D78E               	goto	l3641
  1047  001228                     __end_of_main:
  1048                           	opt stack 0
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postdec1	equ	0xFE5
  1056                           fsr1h	equ	0xFE2
  1057                           fsr1l	equ	0xFE1
  1058                           status	equ	0xFD8
  1059                           
  1060 ;; *************** function _USART_putLine *****************
  1061 ;; Defined at:
  1062 ;;		line 99 in file "usart.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  line            2    6[BANK0 ] PTR const unsigned char 
  1065 ;;		 -> str(32), STR_10(28), STR_9(28), STR_8(29), 
  1066 ;;		 -> STR_7(50), UART_putInt@buffer(128), STR_5(1), STR_4(19), 
  1067 ;;		 -> STR_3(22), STR_2(21), STR_1(32), 
  1068 ;;  channel         2    8[BANK0 ] unsigned int 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;		None               void
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;Total ram usage:        4 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    5
  1087 ;; This function calls:
  1088 ;;		_USART_putChar
  1089 ;;		_USART_putString
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;;		_USART_putCharLine
  1093 ;;		_UART_putInt
  1094 ;;		_EEPROM_writeWord
  1095 ;;		_I2C_writeEEPROMPage
  1096 ;;		_I2C_readEEPROMPage
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text1
  1101  001918                     __ptext1:
  1102                           	opt stack 0
  1103  001918                     _USART_putLine:
  1104                           	opt stack 25
  1105                           
  1106                           ;usart.c: 101: USART_putString(line, channel);
  1107                           
  1108                           ;incstack = 0
  1109  001918  0100               	movlb	0	; () banked
  1110  00191A  C097  F091         	movff	USART_putLine@line+1,USART_putString@string+1
  1111  00191E  0100               	movlb	0	; () banked
  1112  001920  C096  F090         	movff	USART_putLine@line,USART_putString@string
  1113  001924  C098  F092         	movff	USART_putLine@channel,USART_putString@channel
  1114  001928  C099  F093         	movff	USART_putLine@channel+1,USART_putString@channel+1
  1115  00192C  EC8F  F009         	call	_USART_putString	;wreg free
  1116                           
  1117                           ;usart.c: 102: USART_putChar('\r', channel);
  1118  001930  C098  F090         	movff	USART_putLine@channel,USART_putChar@channel
  1119  001934  C099  F091         	movff	USART_putLine@channel+1,USART_putChar@channel+1
  1120  001938  0E0D               	movlw	13
  1121  00193A  ECEF  F00B         	call	_USART_putChar
  1122                           
  1123                           ;usart.c: 103: USART_putChar('\n', channel);
  1124  00193E  C098  F090         	movff	USART_putLine@channel,USART_putChar@channel
  1125  001942  C099  F091         	movff	USART_putLine@channel+1,USART_putChar@channel+1
  1126  001946  0E0A               	movlw	10
  1127  001948  ECEF  F00B         	call	_USART_putChar
  1128  00194C  0012               	return	
  1129  00194E                     __end_of_USART_putLine:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           postdec1	equ	0xFE5
  1138                           fsr1h	equ	0xFE2
  1139                           fsr1l	equ	0xFE1
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function _USART_putString *****************
  1143 ;; Defined at:
  1144 ;;		line 68 in file "usart.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  string          2    0[BANK0 ] PTR const unsigned char 
  1147 ;;		 -> str(32), STR_10(28), STR_9(28), STR_8(29), 
  1148 ;;		 -> STR_7(50), UART_putInt@buffer(128), STR_5(1), STR_4(19), 
  1149 ;;		 -> STR_3(22), STR_2(21), STR_1(32), 
  1150 ;;  channel         2    2[BANK0 ] unsigned int 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;		None               void
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1162 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;Total ram usage:        6 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    4
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_USART_putLine
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text2
  1177  00131E                     __ptext2:
  1178                           	opt stack 0
  1179  00131E                     _USART_putString:
  1180                           	opt stack 25
  1181                           
  1182                           ;usart.c: 70: switch(channel)
  1183                           
  1184                           ;incstack = 0
  1185  00131E  D060               	goto	l3485
  1186  001320                     l292:
  1187  001320  A89E               	btfss	3998,4,c	;volatile
  1188  001322  D7FE               	goto	l292
  1189                           
  1190                           ;usart.c: 78: TX1REG=(*string);
  1191  001324  0100               	movlb	0	; () banked
  1192  001326  C090  FFF6         	movff	USART_putString@string,tblptrl
  1193  00132A  0100               	movlb	0	; () banked
  1194  00132C  C091  FFF7         	movff	USART_putString@string+1,tblptrh
  1195  001330  0E00               	movlw	low (__smallconst shr (0+16))
  1196  001332  6EF8               	movwf	tblptru,c
  1197  001334  0E0F               	movlw	(high __ramtop+-1)
  1198  001336  64F7               	cpfsgt	tblptrh,c
  1199  001338  D003               	bra	u1117
  1200  00133A  0008               	tblrd		*
  1201  00133C  50F5               	movf	tablat,w,c
  1202  00133E  D005               	bra	u1110
  1203  001340                     u1117:
  1204  001340  CFF6 FFE9          	movff	tblptrl,fsr0l
  1205  001344  CFF7 FFEA          	movff	tblptrh,fsr0h
  1206  001348  50EF               	movf	indf0,w,c
  1207  00134A                     u1110:
  1208  00134A  6EAD               	movwf	4013,c	;volatile
  1209                           
  1210                           ;usart.c: 80: string++;
  1211  00134C  0100               	movlb	0	; () banked
  1212  00134E  4B90               	infsnz	USART_putString@string& (0+255),f,b
  1213  001350  2B91               	incf	(USART_putString@string+1)& (0+255),f,b
  1214  001352                     l3475:
  1215  001352  0100               	movlb	0	; () banked
  1216  001354  C090  FFF6         	movff	USART_putString@string,tblptrl
  1217  001358  0100               	movlb	0	; () banked
  1218  00135A  C091  FFF7         	movff	USART_putString@string+1,tblptrh
  1219  00135E  0E00               	movlw	low (__smallconst shr (0+16))
  1220  001360  6EF8               	movwf	tblptru,c
  1221  001362  0E0F               	movlw	(high __ramtop+-1)
  1222  001364  64F7               	cpfsgt	tblptrh,c
  1223  001366  D003               	bra	u1127
  1224  001368  0008               	tblrd		*
  1225  00136A  50F5               	movf	tablat,w,c
  1226  00136C  D005               	bra	u1120
  1227  00136E                     u1127:
  1228  00136E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1229  001372  CFF7 FFEA          	movff	tblptrh,fsr0h
  1230  001376  50EF               	movf	indf0,w,c
  1231  001378                     u1120:
  1232  001378  0900               	iorlw	0
  1233  00137A  B4D8               	btfsc	status,2,c
  1234  00137C  0012               	return	
  1235  00137E  D7D0               	goto	l292
  1236  001380                     l300:
  1237  001380  A8A4               	btfss	4004,4,c	;volatile
  1238  001382  D7FE               	goto	l300
  1239                           
  1240                           ;usart.c: 89: TX2REG=(*string);
  1241  001384  0100               	movlb	0	; () banked
  1242  001386  C090  FFF6         	movff	USART_putString@string,tblptrl
  1243  00138A  0100               	movlb	0	; () banked
  1244  00138C  C091  FFF7         	movff	USART_putString@string+1,tblptrh
  1245  001390  0E00               	movlw	low (__smallconst shr (0+16))
  1246  001392  6EF8               	movwf	tblptru,c
  1247  001394  0E0F               	movlw	(high __ramtop+-1)
  1248  001396  64F7               	cpfsgt	tblptrh,c
  1249  001398  D003               	bra	u1157
  1250  00139A  0008               	tblrd		*
  1251  00139C  50F5               	movf	tablat,w,c
  1252  00139E  D005               	bra	u1150
  1253  0013A0                     u1157:
  1254  0013A0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1255  0013A4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1256  0013A8  50EF               	movf	indf0,w,c
  1257  0013AA                     u1150:
  1258  0013AA  6E73               	movwf	3955,c	;volatile
  1259                           
  1260                           ;usart.c: 91: string++;
  1261  0013AC  0100               	movlb	0	; () banked
  1262  0013AE  4B90               	infsnz	USART_putString@string& (0+255),f,b
  1263  0013B0  2B91               	incf	(USART_putString@string+1)& (0+255),f,b
  1264  0013B2                     l3481:
  1265  0013B2  0100               	movlb	0	; () banked
  1266  0013B4  C090  FFF6         	movff	USART_putString@string,tblptrl
  1267  0013B8  0100               	movlb	0	; () banked
  1268  0013BA  C091  FFF7         	movff	USART_putString@string+1,tblptrh
  1269  0013BE  0E00               	movlw	low (__smallconst shr (0+16))
  1270  0013C0  6EF8               	movwf	tblptru,c
  1271  0013C2  0E0F               	movlw	(high __ramtop+-1)
  1272  0013C4  64F7               	cpfsgt	tblptrh,c
  1273  0013C6  D003               	bra	u1167
  1274  0013C8  0008               	tblrd		*
  1275  0013CA  50F5               	movf	tablat,w,c
  1276  0013CC  D005               	bra	u1160
  1277  0013CE                     u1167:
  1278  0013CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1279  0013D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1280  0013D6  50EF               	movf	indf0,w,c
  1281  0013D8                     u1160:
  1282  0013D8  0900               	iorlw	0
  1283  0013DA  B4D8               	btfsc	status,2,c
  1284  0013DC  0012               	return	
  1285  0013DE  D7D0               	goto	l300
  1286  0013E0                     l3485:
  1287  0013E0  0100               	movlb	0	; () banked
  1288  0013E2  C092  F094         	movff	USART_putString@channel,??_USART_putString
  1289  0013E6  0100               	movlb	0	; () banked
  1290  0013E8  C093  F095         	movff	USART_putString@channel+1,??_USART_putString+1
  1291                           
  1292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1293                           ; Switch size 1, requested type "space"
  1294                           ; Number of cases is 1, Range of values is 0 to 0
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte            4     3 (average)
  1298                           ;	Chosen strategy is simple_byte
  1299  0013EC  0100               	movlb	0	; () banked
  1300  0013EE  5195               	movf	(??_USART_putString+1)& (0+255),w,b
  1301  0013F0  0A00               	xorlw	0	; case 0
  1302  0013F2  A4D8               	btfss	status,2,c
  1303  0013F4  0012               	return	
  1304                           
  1305                           ; BSR set to: 0
  1306                           ; Switch size 1, requested type "space"
  1307                           ; Number of cases is 2, Range of values is 1 to 2
  1308                           ; switch strategies available:
  1309                           ; Name         Instructions Cycles
  1310                           ; simple_byte            7     4 (average)
  1311                           ;	Chosen strategy is simple_byte
  1312  0013F6  0100               	movlb	0	; () banked
  1313  0013F8  5194               	movf	??_USART_putString& (0+255),w,b
  1314  0013FA  0A01               	xorlw	1	; case 1
  1315  0013FC  B4D8               	btfsc	status,2,c
  1316  0013FE  D7A9               	goto	l3475
  1317  001400  0A03               	xorlw	3	; case 2
  1318  001402  A4D8               	btfss	status,2,c
  1319  001404  0012               	return	
  1320  001406  D7D5               	goto	l3481
  1321  001408                     __end_of_USART_putString:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           indf0	equ	0xFEF
  1328                           postinc0	equ	0xFEE
  1329                           fsr0h	equ	0xFEA
  1330                           fsr0l	equ	0xFE9
  1331                           wreg	equ	0xFE8
  1332                           postdec1	equ	0xFE5
  1333                           fsr1h	equ	0xFE2
  1334                           fsr1l	equ	0xFE1
  1335                           status	equ	0xFD8
  1336                           
  1337 ;; *************** function _USART_putChar *****************
  1338 ;; Defined at:
  1339 ;;		line 5 in file "usart.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  c               1    wreg     unsigned char 
  1342 ;;  channel         2    0[BANK0 ] unsigned int 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  c               1    4[BANK0 ] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;		None               void
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        5 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    4
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;;		_USART_putLine
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text3
  1370  0017DE                     __ptext3:
  1371                           	opt stack 0
  1372  0017DE                     _USART_putChar:
  1373                           	opt stack 25
  1374                           
  1375                           ;incstack = 0
  1376                           ;USART_putChar@c stored from wreg
  1377  0017DE  0100               	movlb	0	; () banked
  1378  0017E0  6F94               	movwf	USART_putChar@c& (0+255),b
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;usart.c: 7: switch(channel)
  1382  0017E2  D00A               	goto	l3365
  1383  0017E4                     l246:
  1384  0017E4  A2AC               	btfss	4012,1,c	;volatile
  1385  0017E6  D7FE               	goto	l246
  1386                           
  1387                           ;usart.c: 11: TXREG1 = c;
  1388  0017E8  C094  FFAD         	movff	USART_putChar@c,4013	;volatile
  1389                           
  1390                           ;usart.c: 12: break;
  1391  0017EC  0012               	return	
  1392  0017EE                     l251:
  1393  0017EE  A272               	btfss	3954,1,c	;volatile
  1394  0017F0  D7FE               	goto	l251
  1395                           
  1396                           ;usart.c: 15: TXREG2 = c;
  1397  0017F2  C094  FF73         	movff	USART_putChar@c,3955	;volatile
  1398                           
  1399                           ;usart.c: 16: break;
  1400  0017F6  0012               	return	
  1401  0017F8                     l3365:
  1402  0017F8  0100               	movlb	0	; () banked
  1403  0017FA  C090  F092         	movff	USART_putChar@channel,??_USART_putChar
  1404  0017FE  0100               	movlb	0	; () banked
  1405  001800  C091  F093         	movff	USART_putChar@channel+1,??_USART_putChar+1
  1406                           
  1407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1408                           ; Switch size 1, requested type "space"
  1409                           ; Number of cases is 1, Range of values is 0 to 0
  1410                           ; switch strategies available:
  1411                           ; Name         Instructions Cycles
  1412                           ; simple_byte            4     3 (average)
  1413                           ;	Chosen strategy is simple_byte
  1414  001804  0100               	movlb	0	; () banked
  1415  001806  5193               	movf	(??_USART_putChar+1)& (0+255),w,b
  1416  001808  0A00               	xorlw	0	; case 0
  1417  00180A  A4D8               	btfss	status,2,c
  1418  00180C  0012               	return	
  1419                           
  1420                           ; BSR set to: 0
  1421                           ; Switch size 1, requested type "space"
  1422                           ; Number of cases is 2, Range of values is 1 to 2
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte            7     4 (average)
  1426                           ;	Chosen strategy is simple_byte
  1427  00180E  0100               	movlb	0	; () banked
  1428  001810  5192               	movf	??_USART_putChar& (0+255),w,b
  1429  001812  0A01               	xorlw	1	; case 1
  1430  001814  B4D8               	btfsc	status,2,c
  1431  001816  D7E6               	goto	l246
  1432  001818  0A03               	xorlw	3	; case 2
  1433  00181A  A4D8               	btfss	status,2,c
  1434  00181C  0012               	return	
  1435  00181E  D7E7               	goto	l251
  1436  001820                     __end_of_USART_putChar:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           indf0	equ	0xFEF
  1443                           postinc0	equ	0xFEE
  1444                           fsr0h	equ	0xFEA
  1445                           fsr0l	equ	0xFE9
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1h	equ	0xFE2
  1449                           fsr1l	equ	0xFE1
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function _I2C_getByteFromAddress *****************
  1453 ;; Defined at:
  1454 ;;		line 267 in file "i2c.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  channel         2   10[BANK0 ] unsigned int 
  1457 ;;  device_addre    1   12[BANK0 ] unsigned char 
  1458 ;;  page            1   13[BANK0 ] unsigned char 
  1459 ;;  address         2   14[BANK0 ] unsigned int 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  b               1   19[BANK0 ] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1471 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;Total ram usage:       10 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    6
  1478 ;; This function calls:
  1479 ;;		_I2C_readByte
  1480 ;;		_I2C_start
  1481 ;;		_I2C_stop
  1482 ;;		_I2C_writeByte
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text4
  1489  0014AC                     __ptext4:
  1490                           	opt stack 0
  1491  0014AC                     _I2C_getByteFromAddress:
  1492                           	opt stack 24
  1493                           
  1494                           ;i2c.c: 269: unsigned char b;
  1495                           ;i2c.c: 270: I2C_start(channel);
  1496                           
  1497                           ;incstack = 0
  1498  0014AC  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_start@channel
  1499  0014B0  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_start@channel+1
  1500  0014B4  EC31  F00C         	call	_I2C_start	;wreg free
  1501                           
  1502                           ;i2c.c: 271: device_address |= (page<<2);
  1503  0014B8  0100               	movlb	0	; () banked
  1504  0014BA  459D               	rlncf	I2C_getByteFromAddress@page& (0+255),w,b
  1505  0014BC  46E8               	rlncf	wreg,f,c
  1506  0014BE  0BFC               	andlw	252
  1507  0014C0  0100               	movlb	0	; () banked
  1508  0014C2  139C               	iorwf	I2C_getByteFromAddress@device_address& (0+255),f,b
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;i2c.c: 273: I2C_writeByte(device_address<<1, channel);
  1512  0014C4  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1513  0014C8  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1514  0014CC  0100               	movlb	0	; () banked
  1515  0014CE  519C               	movf	I2C_getByteFromAddress@device_address& (0+255),w,b
  1516  0014D0  0100               	movlb	0	; () banked
  1517  0014D2  259C               	addwf	I2C_getByteFromAddress@device_address& (0+255),w,b
  1518  0014D4  EC07  F00B         	call	_I2C_writeByte
  1519                           
  1520                           ;i2c.c: 275: I2C_writeByte((address & 0xFF00)>>8, channel);
  1521  0014D8  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1522  0014DC  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1523  0014E0  0100               	movlb	0	; () banked
  1524  0014E2  C09F  F0A0         	movff	I2C_getByteFromAddress@address+1,??_I2C_getByteFromAddress
  1525  0014E6  C0A0  F0A1         	movff	??_I2C_getByteFromAddress,??_I2C_getByteFromAddress+1
  1526  0014EA  0100               	movlb	0	; () banked
  1527  0014EC  6BA2               	clrf	(??_I2C_getByteFromAddress+2)& (0+255),b
  1528  0014EE  0100               	movlb	0	; () banked
  1529  0014F0  51A1               	movf	(??_I2C_getByteFromAddress+1)& (0+255),w,b
  1530  0014F2  EC07  F00B         	call	_I2C_writeByte
  1531                           
  1532                           ;i2c.c: 276: I2C_writeByte((unsigned char)(address & 0x00FF), channel);
  1533  0014F6  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1534  0014FA  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1535  0014FE  0100               	movlb	0	; () banked
  1536  001500  519E               	movf	I2C_getByteFromAddress@address& (0+255),w,b
  1537  001502  EC07  F00B         	call	_I2C_writeByte
  1538                           
  1539                           ;i2c.c: 279: I2C_start(channel);
  1540  001506  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_start@channel
  1541  00150A  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_start@channel+1
  1542  00150E  EC31  F00C         	call	_I2C_start	;wreg free
  1543                           
  1544                           ;i2c.c: 280: I2C_writeByte((device_address<<1)+1, channel);
  1545  001512  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_writeByte@channel
  1546  001516  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_writeByte@channel+1
  1547  00151A  80D8               	bsf	status,0,c
  1548  00151C  0100               	movlb	0	; () banked
  1549  00151E  359C               	rlcf	I2C_getByteFromAddress@device_address& (0+255),w,b
  1550  001520  EC07  F00B         	call	_I2C_writeByte
  1551                           
  1552                           ;i2c.c: 282: b = I2C_readByte(channel, 0);
  1553  001524  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_readByte@channel
  1554  001528  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_readByte@channel+1
  1555  00152C  0E00               	movlw	0
  1556  00152E  0100               	movlb	0	; () banked
  1557  001530  6F96               	movwf	I2C_readByte@ack& (0+255),b
  1558  001532  EC04  F00A         	call	_I2C_readByte	;wreg free
  1559  001536  0100               	movlb	0	; () banked
  1560  001538  6FA3               	movwf	I2C_getByteFromAddress@b& (0+255),b
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;i2c.c: 283: I2C_stop(channel);
  1564  00153A  C09A  F094         	movff	I2C_getByteFromAddress@channel,I2C_stop@channel
  1565  00153E  C09B  F095         	movff	I2C_getByteFromAddress@channel+1,I2C_stop@channel+1
  1566  001542  EC10  F00C         	call	_I2C_stop	;wreg free
  1567                           
  1568                           ;i2c.c: 284: return b;
  1569  001546  0100               	movlb	0	; () banked
  1570  001548  51A3               	movf	I2C_getByteFromAddress@b& (0+255),w,b
  1571  00154A  0012               	return	
  1572  00154C                     __end_of_I2C_getByteFromAddress:
  1573                           	opt stack 0
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           indf0	equ	0xFEF
  1579                           postinc0	equ	0xFEE
  1580                           fsr0h	equ	0xFEA
  1581                           fsr0l	equ	0xFE9
  1582                           wreg	equ	0xFE8
  1583                           postdec1	equ	0xFE5
  1584                           fsr1h	equ	0xFE2
  1585                           fsr1l	equ	0xFE1
  1586                           status	equ	0xFD8
  1587                           
  1588 ;; *************** function _I2C_writeByte *****************
  1589 ;; Defined at:
  1590 ;;		line 112 in file "i2c.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  b               1    wreg     unsigned char 
  1593 ;;  channel         2    4[BANK0 ] unsigned int 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  b               1    8[BANK0 ] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;		None               void
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;Total ram usage:        5 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    5
  1612 ;; This function calls:
  1613 ;;		_I2C_wait
  1614 ;; This function is called by:
  1615 ;;		_I2C_getByteFromAddress
  1616 ;;		_I2C_putBytesPage
  1617 ;;		_I2C_getBytesPage
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text5
  1622  00160E                     __ptext5:
  1623                           	opt stack 0
  1624  00160E                     _I2C_writeByte:
  1625                           	opt stack 24
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;incstack = 0
  1629                           ;I2C_writeByte@b stored from wreg
  1630  00160E  0100               	movlb	0	; () banked
  1631  001610  6F98               	movwf	I2C_writeByte@b& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;i2c.c: 114: switch(channel)
  1635  001612  D014               	goto	l3533
  1636  001614                     l3525:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;i2c.c: 117: I2C_wait(channel);
  1640  001614  C094  F090         	movff	I2C_writeByte@channel,I2C_wait@channel
  1641  001618  C095  F091         	movff	I2C_writeByte@channel+1,I2C_wait@channel+1
  1642  00161C  EC32  F00B         	call	_I2C_wait	;wreg free
  1643                           
  1644                           ;i2c.c: 118: SSP1BUF = b;
  1645  001620  C098  FFC9         	movff	I2C_writeByte@b,4041	;volatile
  1646                           
  1647                           ;i2c.c: 120: break;
  1648  001624  0012               	return	
  1649  001626                     l505:
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;i2c.c: 122: SSP2BUF = b;
  1653  001626  C098  FF6F         	movff	I2C_writeByte@b,3951	;volatile
  1654  00162A                     l506:
  1655                           
  1656                           ; BSR set to: 0
  1657  00162A  B06D               	btfsc	3949,0,c	;volatile
  1658  00162C  D7FE               	goto	l506
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;i2c.c: 124: I2C_wait(channel);
  1662                           
  1663                           ; BSR set to: 0
  1664  00162E  C094  F090         	movff	I2C_writeByte@channel,I2C_wait@channel
  1665  001632  C095  F091         	movff	I2C_writeByte@channel+1,I2C_wait@channel+1
  1666  001636  EC32  F00B         	call	_I2C_wait	;wreg free
  1667                           
  1668                           ;i2c.c: 125: break;
  1669  00163A  0012               	return	
  1670  00163C                     l3533:
  1671  00163C  0100               	movlb	0	; () banked
  1672  00163E  C094  F096         	movff	I2C_writeByte@channel,??_I2C_writeByte
  1673  001642  0100               	movlb	0	; () banked
  1674  001644  C095  F097         	movff	I2C_writeByte@channel+1,??_I2C_writeByte+1
  1675                           
  1676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1677                           ; Switch size 1, requested type "space"
  1678                           ; Number of cases is 1, Range of values is 0 to 0
  1679                           ; switch strategies available:
  1680                           ; Name         Instructions Cycles
  1681                           ; simple_byte            4     3 (average)
  1682                           ;	Chosen strategy is simple_byte
  1683  001648  0100               	movlb	0	; () banked
  1684  00164A  5197               	movf	(??_I2C_writeByte+1)& (0+255),w,b
  1685  00164C  0A00               	xorlw	0	; case 0
  1686  00164E  A4D8               	btfss	status,2,c
  1687  001650  0012               	return	
  1688                           
  1689                           ; BSR set to: 0
  1690                           ; Switch size 1, requested type "space"
  1691                           ; Number of cases is 2, Range of values is 1 to 2
  1692                           ; switch strategies available:
  1693                           ; Name         Instructions Cycles
  1694                           ; simple_byte            7     4 (average)
  1695                           ;	Chosen strategy is simple_byte
  1696  001652  0100               	movlb	0	; () banked
  1697  001654  5196               	movf	??_I2C_writeByte& (0+255),w,b
  1698  001656  0A01               	xorlw	1	; case 1
  1699  001658  B4D8               	btfsc	status,2,c
  1700  00165A  D7DC               	goto	l3525
  1701  00165C  0A03               	xorlw	3	; case 2
  1702  00165E  A4D8               	btfss	status,2,c
  1703  001660  0012               	return	
  1704  001662  D7E1               	goto	l505
  1705  001664                     __end_of_I2C_writeByte:
  1706                           	opt stack 0
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           indf0	equ	0xFEF
  1712                           postinc0	equ	0xFEE
  1713                           fsr0h	equ	0xFEA
  1714                           fsr0l	equ	0xFE9
  1715                           wreg	equ	0xFE8
  1716                           postdec1	equ	0xFE5
  1717                           fsr1h	equ	0xFE2
  1718                           fsr1l	equ	0xFE1
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _I2C_stop *****************
  1722 ;; Defined at:
  1723 ;;		line 42 in file "i2c.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  channel         2    4[BANK0 ] unsigned int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;		None               void
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        4 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    5
  1744 ;; This function calls:
  1745 ;;		_I2C_wait
  1746 ;; This function is called by:
  1747 ;;		_I2C_getByteFromAddress
  1748 ;;		_I2C_writeEEPROMPage
  1749 ;;		_I2C_readEEPROMPage
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text6
  1754  001820                     __ptext6:
  1755                           	opt stack 0
  1756  001820                     _I2C_stop:
  1757                           	opt stack 24
  1758                           
  1759                           ;i2c.c: 44: switch(channel)
  1760                           
  1761                           ;incstack = 0
  1762  001820  D00C               	goto	l3515
  1763  001822                     l3509:
  1764                           
  1765                           ;i2c.c: 47: I2C_wait(channel);
  1766  001822  C094  F090         	movff	I2C_stop@channel,I2C_wait@channel
  1767  001826  C095  F091         	movff	I2C_stop@channel+1,I2C_wait@channel+1
  1768  00182A  EC32  F00B         	call	_I2C_wait	;wreg free
  1769                           
  1770                           ;i2c.c: 48: SSP1CON2bits.PEN1 = 1;
  1771  00182E  84C5               	bsf	4037,2,c	;volatile
  1772                           
  1773                           ;i2c.c: 49: break;
  1774  001830  0012               	return	
  1775  001832                     l464:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;i2c.c: 51: SSP2CON2bits.PEN2 = 1;
  1779  001832  846B               	bsf	3947,2,c	;volatile
  1780  001834                     l465:
  1781  001834  A46B               	btfss	3947,2,c	;volatile
  1782  001836  0012               	return	
  1783  001838  D7FD               	goto	l465
  1784  00183A                     l3515:
  1785  00183A  0100               	movlb	0	; () banked
  1786  00183C  C094  F096         	movff	I2C_stop@channel,??_I2C_stop
  1787  001840  0100               	movlb	0	; () banked
  1788  001842  C095  F097         	movff	I2C_stop@channel+1,??_I2C_stop+1
  1789                           
  1790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1791                           ; Switch size 1, requested type "space"
  1792                           ; Number of cases is 1, Range of values is 0 to 0
  1793                           ; switch strategies available:
  1794                           ; Name         Instructions Cycles
  1795                           ; simple_byte            4     3 (average)
  1796                           ;	Chosen strategy is simple_byte
  1797  001846  0100               	movlb	0	; () banked
  1798  001848  5197               	movf	(??_I2C_stop+1)& (0+255),w,b
  1799  00184A  0A00               	xorlw	0	; case 0
  1800  00184C  A4D8               	btfss	status,2,c
  1801  00184E  0012               	return	
  1802                           
  1803                           ; BSR set to: 0
  1804                           ; Switch size 1, requested type "space"
  1805                           ; Number of cases is 2, Range of values is 1 to 2
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte            7     4 (average)
  1809                           ;	Chosen strategy is simple_byte
  1810  001850  0100               	movlb	0	; () banked
  1811  001852  5196               	movf	??_I2C_stop& (0+255),w,b
  1812  001854  0A01               	xorlw	1	; case 1
  1813  001856  B4D8               	btfsc	status,2,c
  1814  001858  D7E4               	goto	l3509
  1815  00185A  0A03               	xorlw	3	; case 2
  1816  00185C  A4D8               	btfss	status,2,c
  1817  00185E  0012               	return	
  1818  001860  D7E8               	goto	l464
  1819  001862                     __end_of_I2C_stop:
  1820                           	opt stack 0
  1821                           tblptru	equ	0xFF8
  1822                           tblptrh	equ	0xFF7
  1823                           tblptrl	equ	0xFF6
  1824                           tablat	equ	0xFF5
  1825                           indf0	equ	0xFEF
  1826                           postinc0	equ	0xFEE
  1827                           fsr0h	equ	0xFEA
  1828                           fsr0l	equ	0xFE9
  1829                           wreg	equ	0xFE8
  1830                           postdec1	equ	0xFE5
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _I2C_start *****************
  1836 ;; Defined at:
  1837 ;;		line 8 in file "i2c.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  channel         2    4[BANK0 ] unsigned int 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;Total ram usage:        4 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    5
  1858 ;; This function calls:
  1859 ;;		_I2C_wait
  1860 ;; This function is called by:
  1861 ;;		_I2C_getByteFromAddress
  1862 ;;		_I2C_putBytesPage
  1863 ;;		_I2C_getBytesPage
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text7
  1868  001862                     __ptext7:
  1869                           	opt stack 0
  1870  001862                     _I2C_start:
  1871                           	opt stack 24
  1872                           
  1873                           ;i2c.c: 10: switch(channel)
  1874                           
  1875                           ;incstack = 0
  1876  001862  D00C               	goto	l3499
  1877  001864                     l3493:
  1878                           
  1879                           ;i2c.c: 13: I2C_wait(channel);
  1880  001864  C094  F090         	movff	I2C_start@channel,I2C_wait@channel
  1881  001868  C095  F091         	movff	I2C_start@channel+1,I2C_wait@channel+1
  1882  00186C  EC32  F00B         	call	_I2C_wait	;wreg free
  1883                           
  1884                           ;i2c.c: 14: SSP1CON2bits.SEN = 1;
  1885  001870  80C5               	bsf	4037,0,c	;volatile
  1886                           
  1887                           ;i2c.c: 15: break;
  1888  001872  0012               	return	
  1889  001874                     l442:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;i2c.c: 17: SSP2CON2bits.SEN2 = 1;
  1893  001874  806B               	bsf	3947,0,c	;volatile
  1894  001876                     l443:
  1895  001876  A06B               	btfss	3947,0,c	;volatile
  1896  001878  0012               	return	
  1897  00187A  D7FD               	goto	l443
  1898  00187C                     l3499:
  1899  00187C  0100               	movlb	0	; () banked
  1900  00187E  C094  F096         	movff	I2C_start@channel,??_I2C_start
  1901  001882  0100               	movlb	0	; () banked
  1902  001884  C095  F097         	movff	I2C_start@channel+1,??_I2C_start+1
  1903                           
  1904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1905                           ; Switch size 1, requested type "space"
  1906                           ; Number of cases is 1, Range of values is 0 to 0
  1907                           ; switch strategies available:
  1908                           ; Name         Instructions Cycles
  1909                           ; simple_byte            4     3 (average)
  1910                           ;	Chosen strategy is simple_byte
  1911  001888  0100               	movlb	0	; () banked
  1912  00188A  5197               	movf	(??_I2C_start+1)& (0+255),w,b
  1913  00188C  0A00               	xorlw	0	; case 0
  1914  00188E  A4D8               	btfss	status,2,c
  1915  001890  0012               	return	
  1916                           
  1917                           ; BSR set to: 0
  1918                           ; Switch size 1, requested type "space"
  1919                           ; Number of cases is 2, Range of values is 1 to 2
  1920                           ; switch strategies available:
  1921                           ; Name         Instructions Cycles
  1922                           ; simple_byte            7     4 (average)
  1923                           ;	Chosen strategy is simple_byte
  1924  001892  0100               	movlb	0	; () banked
  1925  001894  5196               	movf	??_I2C_start& (0+255),w,b
  1926  001896  0A01               	xorlw	1	; case 1
  1927  001898  B4D8               	btfsc	status,2,c
  1928  00189A  D7E4               	goto	l3493
  1929  00189C  0A03               	xorlw	3	; case 2
  1930  00189E  A4D8               	btfss	status,2,c
  1931  0018A0  0012               	return	
  1932  0018A2  D7E8               	goto	l442
  1933  0018A4                     __end_of_I2C_start:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           indf0	equ	0xFEF
  1940                           postinc0	equ	0xFEE
  1941                           fsr0h	equ	0xFEA
  1942                           fsr0l	equ	0xFE9
  1943                           wreg	equ	0xFE8
  1944                           postdec1	equ	0xFE5
  1945                           fsr1h	equ	0xFE2
  1946                           fsr1l	equ	0xFE1
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _I2C_readByte *****************
  1950 ;; Defined at:
  1951 ;;		line 131 in file "i2c.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  channel         2    4[BANK0 ] unsigned int 
  1954 ;;  ack             1    6[BANK0 ] unsigned char 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  temp            1    9[BANK0 ] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      unsigned char 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1966 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;Total ram usage:        6 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    5
  1973 ;; This function calls:
  1974 ;;		_I2C_ack
  1975 ;;		_I2C_nack
  1976 ;;		_I2C_wait
  1977 ;; This function is called by:
  1978 ;;		_I2C_getByteFromAddress
  1979 ;;		_I2C_getBytesPage
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text8
  1984  001408                     __ptext8:
  1985                           	opt stack 0
  1986  001408                     _I2C_readByte:
  1987                           	opt stack 24
  1988                           
  1989                           ;i2c.c: 133: unsigned char temp;
  1990                           ;i2c.c: 134: switch(channel)
  1991                           
  1992                           ;incstack = 0
  1993  001408  D03D               	goto	l3573
  1994  00140A                     l3543:
  1995                           
  1996                           ;i2c.c: 138: I2C_wait(channel);
  1997  00140A  C094  F090         	movff	I2C_readByte@channel,I2C_wait@channel
  1998  00140E  C095  F091         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  1999  001412  EC32  F00B         	call	_I2C_wait	;wreg free
  2000                           
  2001                           ;i2c.c: 139: SSP1CON2bits.RCEN1 = 1;
  2002  001416  86C5               	bsf	4037,3,c	;volatile
  2003                           
  2004                           ;i2c.c: 140: I2C_wait(channel);
  2005  001418  C094  F090         	movff	I2C_readByte@channel,I2C_wait@channel
  2006  00141C  C095  F091         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2007  001420  EC32  F00B         	call	_I2C_wait	;wreg free
  2008                           
  2009                           ;i2c.c: 141: temp = SSP1BUF;
  2010  001424  CFC9 F099          	movff	4041,I2C_readByte@temp	;volatile
  2011                           
  2012                           ;i2c.c: 142: I2C_wait(channel);
  2013  001428  C094  F090         	movff	I2C_readByte@channel,I2C_wait@channel
  2014  00142C  C095  F091         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2015  001430  EC32  F00B         	call	_I2C_wait	;wreg free
  2016                           
  2017                           ;i2c.c: 144: if(ack)
  2018  001434  0100               	movlb	0	; () banked
  2019  001436  5196               	movf	I2C_readByte@ack& (0+255),w,b
  2020  001438  B4D8               	btfsc	status,2,c
  2021  00143A  D007               	goto	l3553
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;i2c.c: 145: {
  2025                           ;i2c.c: 146: I2C_ack(channel);
  2026  00143C  C094  F090         	movff	I2C_readByte@channel,I2C_ack@channel
  2027  001440  C095  F091         	movff	I2C_readByte@channel+1,I2C_ack@channel+1
  2028  001444  ECC2  F00C         	call	_I2C_ack	;wreg free
  2029                           
  2030                           ;i2c.c: 147: }
  2031  001448  D006               	goto	l3555
  2032  00144A                     l3553:
  2033                           
  2034                           ;i2c.c: 148: else
  2035                           ;i2c.c: 149: {
  2036                           ;i2c.c: 150: I2C_nack(channel);
  2037  00144A  C094  F090         	movff	I2C_readByte@channel,I2C_nack@channel
  2038  00144E  C095  F091         	movff	I2C_readByte@channel+1,I2C_nack@channel+1
  2039  001452  ECA7  F00C         	call	_I2C_nack	;wreg free
  2040  001456                     l3555:
  2041                           
  2042                           ;i2c.c: 151: }
  2043                           ;i2c.c: 153: return temp;
  2044  001456  0100               	movlb	0	; () banked
  2045  001458  5199               	movf	I2C_readByte@temp& (0+255),w,b
  2046  00145A  0012               	return	
  2047  00145C                     l518:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;i2c.c: 155: SSP2CON2bits.RCEN2 = 1;
  2051  00145C  866B               	bsf	3947,3,c	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;i2c.c: 156: I2C_wait(channel);
  2055  00145E  C094  F090         	movff	I2C_readByte@channel,I2C_wait@channel
  2056  001462  C095  F091         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2057  001466  EC32  F00B         	call	_I2C_wait	;wreg free
  2058                           
  2059                           ;i2c.c: 157: temp = SSP2BUF;
  2060  00146A  CF6F F099          	movff	3951,I2C_readByte@temp	;volatile
  2061                           
  2062                           ;i2c.c: 158: I2C_wait(channel);
  2063  00146E  C094  F090         	movff	I2C_readByte@channel,I2C_wait@channel
  2064  001472  C095  F091         	movff	I2C_readByte@channel+1,I2C_wait@channel+1
  2065  001476  EC32  F00B         	call	_I2C_wait	;wreg free
  2066                           
  2067                           ;i2c.c: 159: return temp;
  2068  00147A  0100               	movlb	0	; () banked
  2069  00147C  5199               	movf	I2C_readByte@temp& (0+255),w,b
  2070  00147E  0012               	return	
  2071  001480                     l3567:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;i2c.c: 161: return 99;
  2075  001480  0E63               	movlw	99
  2076  001482  0012               	return	
  2077  001484                     l3573:
  2078  001484  0100               	movlb	0	; () banked
  2079  001486  C094  F097         	movff	I2C_readByte@channel,??_I2C_readByte
  2080  00148A  0100               	movlb	0	; () banked
  2081  00148C  C095  F098         	movff	I2C_readByte@channel+1,??_I2C_readByte+1
  2082                           
  2083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2084                           ; Switch size 1, requested type "space"
  2085                           ; Number of cases is 1, Range of values is 0 to 0
  2086                           ; switch strategies available:
  2087                           ; Name         Instructions Cycles
  2088                           ; simple_byte            4     3 (average)
  2089                           ;	Chosen strategy is simple_byte
  2090  001490  0100               	movlb	0	; () banked
  2091  001492  5198               	movf	(??_I2C_readByte+1)& (0+255),w,b
  2092  001494  0A00               	xorlw	0	; case 0
  2093  001496  A4D8               	btfss	status,2,c
  2094  001498  D7F3               	goto	l3567
  2095                           
  2096                           ; BSR set to: 0
  2097                           ; Switch size 1, requested type "space"
  2098                           ; Number of cases is 2, Range of values is 1 to 2
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte            7     4 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  00149A  0100               	movlb	0	; () banked
  2104  00149C  5197               	movf	??_I2C_readByte& (0+255),w,b
  2105  00149E  0A01               	xorlw	1	; case 1
  2106  0014A0  B4D8               	btfsc	status,2,c
  2107  0014A2  D7B3               	goto	l3543
  2108  0014A4  0A03               	xorlw	3	; case 2
  2109  0014A6  B4D8               	btfsc	status,2,c
  2110  0014A8  D7D9               	goto	l518
  2111  0014AA  D7EA               	goto	l3567
  2112  0014AC                     __end_of_I2C_readByte:
  2113                           	opt stack 0
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           indf0	equ	0xFEF
  2119                           postinc0	equ	0xFEE
  2120                           fsr0h	equ	0xFEA
  2121                           fsr0l	equ	0xFE9
  2122                           wreg	equ	0xFE8
  2123                           postdec1	equ	0xFE5
  2124                           fsr1h	equ	0xFE2
  2125                           fsr1l	equ	0xFE1
  2126                           status	equ	0xFD8
  2127                           
  2128 ;; *************** function _I2C_wait *****************
  2129 ;; Defined at:
  2130 ;;		line 97 in file "i2c.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  channel         2    0[BANK0 ] unsigned int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;		None               void
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;Total ram usage:        4 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    4
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_I2C_start
  2155 ;;		_I2C_stop
  2156 ;;		_I2C_writeByte
  2157 ;;		_I2C_readByte
  2158 ;;		_I2C_restart
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text9
  2163  001664                     __ptext9:
  2164                           	opt stack 0
  2165  001664                     _I2C_wait:
  2166                           	opt stack 24
  2167                           
  2168                           ;i2c.c: 99: switch(channel)
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;incstack = 0
  2172  001664  D014               	goto	l3327
  2173  001666                     l3317:
  2174  001666  CFC5 F092          	movff	4037,??_I2C_wait	;volatile
  2175  00166A  0E1F               	movlw	31
  2176  00166C  0100               	movlb	0	; () banked
  2177  00166E  1792               	andwf	??_I2C_wait& (0+255),f,b
  2178  001670  A4D8               	btfss	status,2,c
  2179  001672  D7F9               	goto	l3317
  2180                           
  2181                           ; BSR set to: 0
  2182  001674  A4C7               	btfss	4039,2,c	;volatile
  2183  001676  0012               	return	
  2184  001678  D7F6               	goto	l3317
  2185  00167A                     l3321:
  2186                           
  2187                           ; BSR set to: 0
  2188  00167A  CF6B F092          	movff	3947,??_I2C_wait	;volatile
  2189  00167E  0E1F               	movlw	31
  2190  001680  0100               	movlb	0	; () banked
  2191  001682  1792               	andwf	??_I2C_wait& (0+255),f,b
  2192  001684  A4D8               	btfss	status,2,c
  2193  001686  D7F9               	goto	l3321
  2194                           
  2195                           ; BSR set to: 0
  2196  001688  A46D               	btfss	3949,2,c	;volatile
  2197  00168A  0012               	return	
  2198  00168C  D7F6               	goto	l3321
  2199  00168E                     l3327:
  2200  00168E  0100               	movlb	0	; () banked
  2201  001690  C090  F092         	movff	I2C_wait@channel,??_I2C_wait
  2202  001694  0100               	movlb	0	; () banked
  2203  001696  C091  F093         	movff	I2C_wait@channel+1,??_I2C_wait+1
  2204                           
  2205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2206                           ; Switch size 1, requested type "space"
  2207                           ; Number of cases is 1, Range of values is 0 to 0
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte            4     3 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212  00169A  0100               	movlb	0	; () banked
  2213  00169C  5193               	movf	(??_I2C_wait+1)& (0+255),w,b
  2214  00169E  0A00               	xorlw	0	; case 0
  2215  0016A0  A4D8               	btfss	status,2,c
  2216  0016A2  0012               	return	
  2217                           
  2218                           ; BSR set to: 0
  2219                           ; Switch size 1, requested type "space"
  2220                           ; Number of cases is 2, Range of values is 1 to 2
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte            7     4 (average)
  2224                           ;	Chosen strategy is simple_byte
  2225  0016A4  0100               	movlb	0	; () banked
  2226  0016A6  5192               	movf	??_I2C_wait& (0+255),w,b
  2227  0016A8  0A01               	xorlw	1	; case 1
  2228  0016AA  B4D8               	btfsc	status,2,c
  2229  0016AC  D7DC               	goto	l3317
  2230  0016AE  0A03               	xorlw	3	; case 2
  2231  0016B0  A4D8               	btfss	status,2,c
  2232  0016B2  0012               	return	
  2233  0016B4  D7E2               	goto	l3321
  2234  0016B6                     __end_of_I2C_wait:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           indf0	equ	0xFEF
  2241                           postinc0	equ	0xFEE
  2242                           fsr0h	equ	0xFEA
  2243                           fsr0l	equ	0xFE9
  2244                           wreg	equ	0xFE8
  2245                           postdec1	equ	0xFE5
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           status	equ	0xFD8
  2249                           
  2250 ;; *************** function _I2C_nack *****************
  2251 ;; Defined at:
  2252 ;;		line 78 in file "i2c.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  channel         2    0[BANK0 ] unsigned int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;Total ram usage:        4 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    4
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_I2C_readByte
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text10
  2281  00194E                     __ptext10:
  2282                           	opt stack 0
  2283  00194E                     _I2C_nack:
  2284                           	opt stack 24
  2285                           
  2286                           ;i2c.c: 80: switch(channel)
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;incstack = 0
  2290  00194E  D006               	goto	l3349
  2291  001950                     l481:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;i2c.c: 83: SSP1CON2bits.ACKDT1 = 1;
  2295  001950  8AC5               	bsf	4037,5,c	;volatile
  2296                           
  2297                           ;i2c.c: 84: SSP1CON2bits.ACKEN1 = 1;
  2298  001952  88C5               	bsf	4037,4,c	;volatile
  2299                           
  2300                           ;i2c.c: 86: break;
  2301  001954  0012               	return	
  2302  001956                     l483:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;i2c.c: 88: SSP2CON2bits.ACKDT2 = 1;
  2306  001956  8A6B               	bsf	3947,5,c	;volatile
  2307                           
  2308                           ;i2c.c: 89: SSP2CON2bits.ACKEN2 = 1;
  2309  001958  886B               	bsf	3947,4,c	;volatile
  2310                           
  2311                           ;i2c.c: 91: break;
  2312  00195A  0012               	return	
  2313  00195C                     l3349:
  2314  00195C  0100               	movlb	0	; () banked
  2315  00195E  C090  F092         	movff	I2C_nack@channel,??_I2C_nack
  2316  001962  0100               	movlb	0	; () banked
  2317  001964  C091  F093         	movff	I2C_nack@channel+1,??_I2C_nack+1
  2318                           
  2319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2320                           ; Switch size 1, requested type "space"
  2321                           ; Number of cases is 1, Range of values is 0 to 0
  2322                           ; switch strategies available:
  2323                           ; Name         Instructions Cycles
  2324                           ; simple_byte            4     3 (average)
  2325                           ;	Chosen strategy is simple_byte
  2326  001968  0100               	movlb	0	; () banked
  2327  00196A  5193               	movf	(??_I2C_nack+1)& (0+255),w,b
  2328  00196C  0A00               	xorlw	0	; case 0
  2329  00196E  A4D8               	btfss	status,2,c
  2330  001970  0012               	return	
  2331                           
  2332                           ; BSR set to: 0
  2333                           ; Switch size 1, requested type "space"
  2334                           ; Number of cases is 2, Range of values is 1 to 2
  2335                           ; switch strategies available:
  2336                           ; Name         Instructions Cycles
  2337                           ; simple_byte            7     4 (average)
  2338                           ;	Chosen strategy is simple_byte
  2339  001972  0100               	movlb	0	; () banked
  2340  001974  5192               	movf	??_I2C_nack& (0+255),w,b
  2341  001976  0A01               	xorlw	1	; case 1
  2342  001978  B4D8               	btfsc	status,2,c
  2343  00197A  D7EA               	goto	l481
  2344  00197C  0A03               	xorlw	3	; case 2
  2345  00197E  A4D8               	btfss	status,2,c
  2346  001980  0012               	return	
  2347  001982  D7E9               	goto	l483
  2348  001984                     __end_of_I2C_nack:
  2349                           	opt stack 0
  2350                           tblptru	equ	0xFF8
  2351                           tblptrh	equ	0xFF7
  2352                           tblptrl	equ	0xFF6
  2353                           tablat	equ	0xFF5
  2354                           indf0	equ	0xFEF
  2355                           postinc0	equ	0xFEE
  2356                           fsr0h	equ	0xFEA
  2357                           fsr0l	equ	0xFE9
  2358                           wreg	equ	0xFE8
  2359                           postdec1	equ	0xFE5
  2360                           fsr1h	equ	0xFE2
  2361                           fsr1l	equ	0xFE1
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _I2C_ack *****************
  2365 ;; Defined at:
  2366 ;;		line 59 in file "i2c.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  channel         2    0[BANK0 ] unsigned int 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        4 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    4
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_I2C_readByte
  2391 ;;		_I2C_getBytesPage
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text11
  2396  001984                     __ptext11:
  2397                           	opt stack 0
  2398  001984                     _I2C_ack:
  2399                           	opt stack 24
  2400                           
  2401                           ;i2c.c: 61: switch(channel)
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;incstack = 0
  2405  001984  D006               	goto	l3337
  2406  001986                     l473:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;i2c.c: 64: SSP1CON2bits.ACKDT1 = 0;
  2410  001986  9AC5               	bcf	4037,5,c	;volatile
  2411                           
  2412                           ;i2c.c: 65: SSP1CON2bits.ACKEN1 = 1;
  2413  001988  88C5               	bsf	4037,4,c	;volatile
  2414                           
  2415                           ;i2c.c: 67: break;
  2416  00198A  0012               	return	
  2417  00198C                     l475:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;i2c.c: 69: SSP2CON2bits.ACKDT2 = 0;
  2421  00198C  9A6B               	bcf	3947,5,c	;volatile
  2422                           
  2423                           ;i2c.c: 70: SSP2CON2bits.ACKEN2 = 1;
  2424  00198E  886B               	bsf	3947,4,c	;volatile
  2425                           
  2426                           ;i2c.c: 72: break;
  2427  001990  0012               	return	
  2428  001992                     l3337:
  2429  001992  0100               	movlb	0	; () banked
  2430  001994  C090  F092         	movff	I2C_ack@channel,??_I2C_ack
  2431  001998  0100               	movlb	0	; () banked
  2432  00199A  C091  F093         	movff	I2C_ack@channel+1,??_I2C_ack+1
  2433                           
  2434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2435                           ; Switch size 1, requested type "space"
  2436                           ; Number of cases is 1, Range of values is 0 to 0
  2437                           ; switch strategies available:
  2438                           ; Name         Instructions Cycles
  2439                           ; simple_byte            4     3 (average)
  2440                           ;	Chosen strategy is simple_byte
  2441  00199E  0100               	movlb	0	; () banked
  2442  0019A0  5193               	movf	(??_I2C_ack+1)& (0+255),w,b
  2443  0019A2  0A00               	xorlw	0	; case 0
  2444  0019A4  A4D8               	btfss	status,2,c
  2445  0019A6  0012               	return	
  2446                           
  2447                           ; BSR set to: 0
  2448                           ; Switch size 1, requested type "space"
  2449                           ; Number of cases is 2, Range of values is 1 to 2
  2450                           ; switch strategies available:
  2451                           ; Name         Instructions Cycles
  2452                           ; simple_byte            7     4 (average)
  2453                           ;	Chosen strategy is simple_byte
  2454  0019A8  0100               	movlb	0	; () banked
  2455  0019AA  5192               	movf	??_I2C_ack& (0+255),w,b
  2456  0019AC  0A01               	xorlw	1	; case 1
  2457  0019AE  B4D8               	btfsc	status,2,c
  2458  0019B0  D7EA               	goto	l473
  2459  0019B2  0A03               	xorlw	3	; case 2
  2460  0019B4  A4D8               	btfss	status,2,c
  2461  0019B6  0012               	return	
  2462  0019B8  D7E9               	goto	l475
  2463  0019BA                     __end_of_I2C_ack:
  2464                           	opt stack 0
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           indf0	equ	0xFEF
  2470                           postinc0	equ	0xFEE
  2471                           fsr0h	equ	0xFEA
  2472                           fsr0l	equ	0xFE9
  2473                           wreg	equ	0xFE8
  2474                           postdec1	equ	0xFE5
  2475                           fsr1h	equ	0xFE2
  2476                           fsr1l	equ	0xFE1
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _HW_init *****************
  2480 ;; Defined at:
  2481 ;;		line 24 in file "system.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    5
  2502 ;; This function calls:
  2503 ;;		_ADC_init
  2504 ;;		_GPIO_init
  2505 ;;		_I2C_init
  2506 ;;		_IRQ_init
  2507 ;;		_OSC_init
  2508 ;;		_USART_init
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text12
  2515  00174E                     __ptext12:
  2516                           	opt stack 0
  2517  00174E                     _HW_init:
  2518                           	opt stack 25
  2519                           
  2520                           ;system.c: 27: OSC_init();
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;incstack = 0
  2524  00174E  EC22  F00D         	call	_OSC_init	;wreg free
  2525                           
  2526                           ;system.c: 29: GPIO_init();
  2527  001752  ECDD  F00C         	call	_GPIO_init	;wreg free
  2528                           
  2529                           ;system.c: 31: ADC_init((unsigned int)0);
  2530  001756  0E00               	movlw	0
  2531  001758  0100               	movlb	0	; () banked
  2532  00175A  6F91               	movwf	(ADC_init@channel+1)& (0+255),b
  2533  00175C  0E00               	movlw	0
  2534  00175E  0100               	movlb	0	; () banked
  2535  001760  6F90               	movwf	ADC_init@channel& (0+255),b
  2536  001762  EC13  F00D         	call	_ADC_init	;wreg free
  2537                           
  2538                           ;system.c: 33: USART_init((unsigned int)1, 115200);
  2539  001766  0E00               	movlw	0
  2540  001768  0100               	movlb	0	; () banked
  2541  00176A  6F91               	movwf	(USART_init@channel+1)& (0+255),b
  2542  00176C  0E01               	movlw	1
  2543  00176E  0100               	movlb	0	; () banked
  2544  001770  6F90               	movwf	USART_init@channel& (0+255),b
  2545  001772  0EC2               	movlw	194
  2546  001774  0100               	movlb	0	; () banked
  2547  001776  6F93               	movwf	(USART_init@baudrate+1)& (0+255),b
  2548  001778  0E00               	movlw	0
  2549  00177A  0100               	movlb	0	; () banked
  2550  00177C  6F92               	movwf	USART_init@baudrate& (0+255),b
  2551  00177E  EC14  F009         	call	_USART_init	;wreg free
  2552                           
  2553                           ;system.c: 34: IRQ_init();
  2554  001782  EC27  F00D         	call	_IRQ_init	;wreg free
  2555                           
  2556                           ;system.c: 35: I2C_init(1);
  2557  001786  0E00               	movlw	0
  2558  001788  0100               	movlb	0	; () banked
  2559  00178A  6F91               	movwf	(I2C_init@channel+1)& (0+255),b
  2560  00178C  0E01               	movlw	1
  2561  00178E  0100               	movlb	0	; () banked
  2562  001790  6F90               	movwf	I2C_init@channel& (0+255),b
  2563  001792  EC5B  F00B         	call	_I2C_init	;wreg free
  2564  001796  0012               	return	
  2565  001798                     __end_of_HW_init:
  2566                           	opt stack 0
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           indf0	equ	0xFEF
  2572                           postinc0	equ	0xFEE
  2573                           fsr0h	equ	0xFEA
  2574                           fsr0l	equ	0xFE9
  2575                           wreg	equ	0xFE8
  2576                           postdec1	equ	0xFE5
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function _USART_init *****************
  2582 ;; Defined at:
  2583 ;;		line 184 in file "system.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  channel         2    0[BANK0 ] unsigned int 
  2586 ;;  baudrate        2    2[BANK0 ] unsigned int 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  baudConfig      2    6[BANK0 ] unsigned int 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;Total ram usage:        8 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    4
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_HW_init
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text13
  2613  001228                     __ptext13:
  2614                           	opt stack 0
  2615  001228                     _USART_init:
  2616                           	opt stack 25
  2617                           
  2618                           ;system.c: 186: unsigned int baudConfig=0;
  2619                           
  2620                           ;incstack = 0
  2621  001228  0E00               	movlw	0
  2622  00122A  0100               	movlb	0	; () banked
  2623  00122C  6F97               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2624  00122E  0E00               	movlw	0
  2625  001230  0100               	movlb	0	; () banked
  2626  001232  6F96               	movwf	USART_init@baudConfig& (0+255),b
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;system.c: 187: RCIE = 1;
  2630  001234  8A9D               	bsf	3997,5,c	;volatile
  2631                           
  2632                           ;system.c: 188: switch(baudrate)
  2633  001236  D016               	goto	l3411
  2634  001238                     l3401:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;system.c: 191: baudConfig = 103;
  2638  001238  0E00               	movlw	0
  2639  00123A  0100               	movlb	0	; () banked
  2640  00123C  6F97               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2641  00123E  0E67               	movlw	103
  2642  001240  D00E               	goto	L5
  2643  001242                     l3403:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;system.c: 194: baudConfig = 51;
  2647  001242  0E00               	movlw	0
  2648  001244  0100               	movlb	0	; () banked
  2649  001246  6F97               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2650  001248  0E33               	movlw	51
  2651  00124A  D009               	goto	L5
  2652  00124C                     l3405:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;system.c: 197: baudConfig = 16;
  2656  00124C  0E00               	movlw	0
  2657  00124E  0100               	movlb	0	; () banked
  2658  001250  6F97               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2659  001252  0E10               	movlw	16
  2660  001254  D004               	goto	L5
  2661  001256                     l3407:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;system.c: 200: baudConfig = 8;
  2665  001256  0E00               	movlw	0
  2666  001258  0100               	movlb	0	; () banked
  2667  00125A  6F97               	movwf	(USART_init@baudConfig+1)& (0+255),b
  2668  00125C  0E08               	movlw	8
  2669  00125E                     L5:
  2670  00125E  0100               	movlb	0	; () banked
  2671  001260  6F96               	movwf	USART_init@baudConfig& (0+255),b
  2672                           
  2673                           ;system.c: 201: break;
  2674  001262  D049               	goto	l3415
  2675  001264                     l3411:
  2676                           
  2677                           ; BSR set to: 0
  2678  001264  0100               	movlb	0	; () banked
  2679  001266  C092  F094         	movff	USART_init@baudrate,??_USART_init
  2680  00126A  0100               	movlb	0	; () banked
  2681  00126C  C093  F095         	movff	USART_init@baudrate+1,??_USART_init+1
  2682                           
  2683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  2684                           ; Switch size 1, requested type "space"
  2685                           ; Number of cases is 4, Range of values is 37 to 225
  2686                           ; switch strategies available:
  2687                           ; Name         Instructions Cycles
  2688                           ; simple_byte           13     7 (average)
  2689                           ;	Chosen strategy is simple_byte
  2690  001270  0100               	movlb	0	; () banked
  2691  001272  5195               	movf	(??_USART_init+1)& (0+255),w,b
  2692  001274  0A25               	xorlw	37	; case 37
  2693  001276  B4D8               	btfsc	status,2,c
  2694  001278  D00A               	goto	l4309
  2695  00127A  0A6E               	xorlw	110	; case 75
  2696  00127C  B4D8               	btfsc	status,2,c
  2697  00127E  D00D               	goto	l4311
  2698  001280  0A89               	xorlw	137	; case 194
  2699  001282  B4D8               	btfsc	status,2,c
  2700  001284  D010               	goto	l4313
  2701  001286  0A23               	xorlw	35	; case 225
  2702  001288  B4D8               	btfsc	status,2,c
  2703  00128A  D013               	goto	l4315
  2704  00128C  D034               	goto	l3415
  2705  00128E                     l4309:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ; Switch size 1, requested type "space"
  2709                           ; Number of cases is 1, Range of values is 128 to 128
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte            4     3 (average)
  2713                           ;	Chosen strategy is simple_byte
  2714  00128E  0100               	movlb	0	; () banked
  2715  001290  5194               	movf	??_USART_init& (0+255),w,b
  2716  001292  0A80               	xorlw	128	; case 128
  2717  001294  B4D8               	btfsc	status,2,c
  2718  001296  D7D0               	goto	l3401
  2719  001298  D02E               	goto	l3415
  2720  00129A                     l4311:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ; Switch size 1, requested type "space"
  2724                           ; Number of cases is 1, Range of values is 0 to 0
  2725                           ; switch strategies available:
  2726                           ; Name         Instructions Cycles
  2727                           ; simple_byte            4     3 (average)
  2728                           ;	Chosen strategy is simple_byte
  2729  00129A  0100               	movlb	0	; () banked
  2730  00129C  5194               	movf	??_USART_init& (0+255),w,b
  2731  00129E  0A00               	xorlw	0	; case 0
  2732  0012A0  B4D8               	btfsc	status,2,c
  2733  0012A2  D7CF               	goto	l3403
  2734  0012A4  D028               	goto	l3415
  2735  0012A6                     l4313:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ; Switch size 1, requested type "space"
  2739                           ; Number of cases is 1, Range of values is 0 to 0
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte            4     3 (average)
  2743                           ;	Chosen strategy is simple_byte
  2744  0012A6  0100               	movlb	0	; () banked
  2745  0012A8  5194               	movf	??_USART_init& (0+255),w,b
  2746  0012AA  0A00               	xorlw	0	; case 0
  2747  0012AC  B4D8               	btfsc	status,2,c
  2748  0012AE  D7D3               	goto	l3407
  2749  0012B0  D022               	goto	l3415
  2750  0012B2                     l4315:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ; Switch size 1, requested type "space"
  2754                           ; Number of cases is 1, Range of values is 0 to 0
  2755                           ; switch strategies available:
  2756                           ; Name         Instructions Cycles
  2757                           ; simple_byte            4     3 (average)
  2758                           ;	Chosen strategy is simple_byte
  2759  0012B2  0100               	movlb	0	; () banked
  2760  0012B4  5194               	movf	??_USART_init& (0+255),w,b
  2761  0012B6  0A00               	xorlw	0	; case 0
  2762  0012B8  B4D8               	btfsc	status,2,c
  2763  0012BA  D7C8               	goto	l3405
  2764  0012BC  D01C               	goto	l3415
  2765  0012BE                     l171:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;system.c: 209: TRISCbits.RC6 = 1;
  2769  0012BE  8C94               	bsf	3988,6,c	;volatile
  2770                           
  2771                           ;system.c: 211: TRISCbits.RC7 = 1;
  2772  0012C0  8E94               	bsf	3988,7,c	;volatile
  2773                           
  2774                           ;system.c: 212: ANSELCbits.ANSC6 = 0;
  2775  0012C2  010F               	movlb	15	; () banked
  2776  0012C4  9D3A               	bcf	58,6,b	;volatile
  2777                           
  2778                           ;system.c: 213: ANSELCbits.ANSC7 = 0;
  2779  0012C6  010F               	movlb	15	; () banked
  2780  0012C8  9F3A               	bcf	58,7,b	;volatile
  2781                           
  2782                           ;system.c: 216: TXSTA1bits.SYNC = 0;
  2783  0012CA  98AC               	bcf	4012,4,c	;volatile
  2784                           
  2785                           ;system.c: 217: RCSTA1bits.SPEN = 1;
  2786  0012CC  8EAB               	bsf	4011,7,c	;volatile
  2787                           
  2788                           ;system.c: 219: PIE1bits.RC1IE = 1;
  2789  0012CE  8A9D               	bsf	3997,5,c	;volatile
  2790                           
  2791                           ;system.c: 221: TXSTA1bits.BRGH = 0;
  2792  0012D0  94AC               	bcf	4012,2,c	;volatile
  2793                           
  2794                           ;system.c: 222: BAUDCON1bits.BRG16 = 0;
  2795  0012D2  96B8               	bcf	4024,3,c	;volatile
  2796                           
  2797                           ;system.c: 223: SPBRG1 = baudConfig;
  2798  0012D4  C096  FFAF         	movff	USART_init@baudConfig,4015	;volatile
  2799                           
  2800                           ;system.c: 224: TXSTA1bits.TXEN = 1;
  2801  0012D8  8AAC               	bsf	4012,5,c	;volatile
  2802                           
  2803                           ;system.c: 225: RCSTA1bits.CREN = 1;
  2804  0012DA  88AB               	bsf	4011,4,c	;volatile
  2805                           
  2806                           ;system.c: 226: break;
  2807  0012DC  0012               	return	
  2808  0012DE                     l173:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;system.c: 229: TRISBbits.RB6 = 1;
  2812  0012DE  8C93               	bsf	3987,6,c	;volatile
  2813                           
  2814                           ;system.c: 231: TRISBbits.RB7 = 1;
  2815  0012E0  8E93               	bsf	3987,7,c	;volatile
  2816                           
  2817                           ;system.c: 234: RCSTA2bits.SPEN = 1;
  2818  0012E2  8E71               	bsf	3953,7,c	;volatile
  2819                           
  2820                           ;system.c: 237: PIE3bits.RC2IE = 1;
  2821  0012E4  8AA3               	bsf	4003,5,c	;volatile
  2822                           
  2823                           ;system.c: 240: TXSTA2bits.SYNC = 0;
  2824  0012E6  9872               	bcf	3954,4,c	;volatile
  2825                           
  2826                           ;system.c: 241: TXSTA2bits.BRGH = 0;
  2827  0012E8  9472               	bcf	3954,2,c	;volatile
  2828                           
  2829                           ;system.c: 243: BAUDCON2bits.BRG16 = 0;
  2830  0012EA  9670               	bcf	3952,3,c	;volatile
  2831                           
  2832                           ;system.c: 244: SPBRG2 = baudConfig;
  2833  0012EC  C096  FF75         	movff	USART_init@baudConfig,3957	;volatile
  2834                           
  2835                           ;system.c: 245: TXSTA2bits.TXEN = 1;
  2836  0012F0  8A72               	bsf	3954,5,c	;volatile
  2837                           
  2838                           ;system.c: 246: RCSTA2bits.CREN = 1;
  2839  0012F2  8871               	bsf	3953,4,c	;volatile
  2840                           
  2841                           ;system.c: 247: break;
  2842  0012F4  0012               	return	
  2843  0012F6                     l3415:
  2844                           
  2845                           ; BSR set to: 0
  2846  0012F6  0100               	movlb	0	; () banked
  2847  0012F8  C090  F094         	movff	USART_init@channel,??_USART_init
  2848  0012FC  0100               	movlb	0	; () banked
  2849  0012FE  C091  F095         	movff	USART_init@channel+1,??_USART_init+1
  2850                           
  2851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2852                           ; Switch size 1, requested type "space"
  2853                           ; Number of cases is 1, Range of values is 0 to 0
  2854                           ; switch strategies available:
  2855                           ; Name         Instructions Cycles
  2856                           ; simple_byte            4     3 (average)
  2857                           ;	Chosen strategy is simple_byte
  2858  001302  0100               	movlb	0	; () banked
  2859  001304  5195               	movf	(??_USART_init+1)& (0+255),w,b
  2860  001306  0A00               	xorlw	0	; case 0
  2861  001308  A4D8               	btfss	status,2,c
  2862  00130A  0012               	return	
  2863                           
  2864                           ; BSR set to: 0
  2865                           ; Switch size 1, requested type "space"
  2866                           ; Number of cases is 2, Range of values is 1 to 2
  2867                           ; switch strategies available:
  2868                           ; Name         Instructions Cycles
  2869                           ; simple_byte            7     4 (average)
  2870                           ;	Chosen strategy is simple_byte
  2871  00130C  0100               	movlb	0	; () banked
  2872  00130E  5194               	movf	??_USART_init& (0+255),w,b
  2873  001310  0A01               	xorlw	1	; case 1
  2874  001312  B4D8               	btfsc	status,2,c
  2875  001314  D7D4               	goto	l171
  2876  001316  0A03               	xorlw	3	; case 2
  2877  001318  A4D8               	btfss	status,2,c
  2878  00131A  0012               	return	
  2879  00131C  D7E0               	goto	l173
  2880  00131E                     __end_of_USART_init:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           indf0	equ	0xFEF
  2887                           postinc0	equ	0xFEE
  2888                           fsr0h	equ	0xFEA
  2889                           fsr0l	equ	0xFE9
  2890                           wreg	equ	0xFE8
  2891                           postdec1	equ	0xFE5
  2892                           fsr1h	equ	0xFE2
  2893                           fsr1l	equ	0xFE1
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _OSC_init *****************
  2897 ;; Defined at:
  2898 ;;		line 38 in file "system.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		None
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    4
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_HW_init
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text14
  2927  001A44                     __ptext14:
  2928                           	opt stack 0
  2929  001A44                     _OSC_init:
  2930                           	opt stack 25
  2931                           
  2932                           ;system.c: 44: OSCCONbits.IRCF0 = 1;
  2933                           
  2934                           ;incstack = 0
  2935  001A44  88D3               	bsf	4051,4,c	;volatile
  2936                           
  2937                           ;system.c: 45: OSCCONbits.IRCF1 = 1;
  2938  001A46  8AD3               	bsf	4051,5,c	;volatile
  2939                           
  2940                           ;system.c: 46: OSCCONbits.IRCF2 = 1;
  2941  001A48  8CD3               	bsf	4051,6,c	;volatile
  2942                           
  2943                           ;system.c: 47: PLLEN = 1;
  2944  001A4A  8C9B               	bsf	3995,6,c	;volatile
  2945  001A4C  0012               	return	
  2946  001A4E                     __end_of_OSC_init:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           indf0	equ	0xFEF
  2953                           postinc0	equ	0xFEE
  2954                           fsr0h	equ	0xFEA
  2955                           fsr0l	equ	0xFE9
  2956                           wreg	equ	0xFE8
  2957                           postdec1	equ	0xFE5
  2958                           fsr1h	equ	0xFE2
  2959                           fsr1l	equ	0xFE1
  2960                           status	equ	0xFD8
  2961                           
  2962 ;; *************** function _IRQ_init *****************
  2963 ;; Defined at:
  2964 ;;		line 101 in file "system.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;		None               void
  2971 ;; Registers used:
  2972 ;;		None
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    4
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_HW_init
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text15
  2993  001A4E                     __ptext15:
  2994                           	opt stack 0
  2995  001A4E                     _IRQ_init:
  2996                           	opt stack 25
  2997                           
  2998                           ;system.c: 103: GIE = 1;
  2999                           
  3000                           ;incstack = 0
  3001  001A4E  8EF2               	bsf	intcon,7,c	;volatile
  3002                           
  3003                           ;system.c: 104: PEIE = 1;
  3004  001A50  8CF2               	bsf	intcon,6,c	;volatile
  3005                           
  3006                           ;system.c: 105: IPEN = 1;
  3007  001A52  8ED0               	bsf	4048,7,c	;volatile
  3008                           
  3009                           ;system.c: 107: RC1IE = 1;
  3010  001A54  8A9D               	bsf	3997,5,c	;volatile
  3011  001A56  0012               	return	
  3012  001A58                     __end_of_IRQ_init:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           intcon	equ	0xFF2
  3019                           indf0	equ	0xFEF
  3020                           postinc0	equ	0xFEE
  3021                           fsr0h	equ	0xFEA
  3022                           fsr0l	equ	0xFE9
  3023                           wreg	equ	0xFE8
  3024                           postdec1	equ	0xFE5
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _I2C_init *****************
  3030 ;; Defined at:
  3031 ;;		line 253 in file "system.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  channel         2    0[BANK0 ] unsigned int 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;		None               void
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;Total ram usage:        4 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    4
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_HW_init
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text16
  3060  0016B6                     __ptext16:
  3061                           	opt stack 0
  3062  0016B6                     _I2C_init:
  3063                           	opt stack 25
  3064                           
  3065                           ;system.c: 256: switch(channel)
  3066                           
  3067                           ;incstack = 0
  3068  0016B6  D011               	goto	l3461
  3069  0016B8                     l179:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;system.c: 259: TRISCbits.RC3 = 1;
  3073  0016B8  8694               	bsf	3988,3,c	;volatile
  3074                           
  3075                           ;system.c: 260: TRISCbits.RC4 = 1;
  3076  0016BA  8894               	bsf	3988,4,c	;volatile
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;system.c: 261: SSP1STAT = 0xC0;
  3080  0016BC  0EC0               	movlw	192
  3081  0016BE  6EC7               	movwf	4039,c	;volatile
  3082                           
  3083                           ;system.c: 262: SSP1CON1 = 0x28;
  3084  0016C0  0E28               	movlw	40
  3085  0016C2  6EC6               	movwf	4038,c	;volatile
  3086                           
  3087                           ;system.c: 265: SSP1ADD = 9;
  3088  0016C4  0E09               	movlw	9
  3089  0016C6  6EC8               	movwf	4040,c	;volatile
  3090                           
  3091                           ;system.c: 268: break;
  3092  0016C8  0012               	return	
  3093  0016CA                     l181:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;system.c: 270: TRISBbits.RB1 = 1;
  3097  0016CA  8293               	bsf	3987,1,c	;volatile
  3098                           
  3099                           ;system.c: 271: TRISBbits.RB2 = 1;
  3100  0016CC  8493               	bsf	3987,2,c	;volatile
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;system.c: 272: SSP2STAT |= 0x80;
  3104  0016CE  8E6D               	bsf	3949,7,c	;volatile
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;system.c: 273: SSP2CON1 = 0x28;
  3108  0016D0  0E28               	movlw	40
  3109  0016D2  6E6C               	movwf	3948,c	;volatile
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;system.c: 276: SSP2ADD = 39;
  3113  0016D4  0E27               	movlw	39
  3114  0016D6  6E6E               	movwf	3950,c	;volatile
  3115                           
  3116                           ;system.c: 277: break;
  3117  0016D8  0012               	return	
  3118  0016DA                     l3461:
  3119  0016DA  0100               	movlb	0	; () banked
  3120  0016DC  C090  F092         	movff	I2C_init@channel,??_I2C_init
  3121  0016E0  0100               	movlb	0	; () banked
  3122  0016E2  C091  F093         	movff	I2C_init@channel+1,??_I2C_init+1
  3123                           
  3124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3125                           ; Switch size 1, requested type "space"
  3126                           ; Number of cases is 1, Range of values is 0 to 0
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte            4     3 (average)
  3130                           ;	Chosen strategy is simple_byte
  3131  0016E6  0100               	movlb	0	; () banked
  3132  0016E8  5193               	movf	(??_I2C_init+1)& (0+255),w,b
  3133  0016EA  0A00               	xorlw	0	; case 0
  3134  0016EC  A4D8               	btfss	status,2,c
  3135  0016EE  0012               	return	
  3136                           
  3137                           ; BSR set to: 0
  3138                           ; Switch size 1, requested type "space"
  3139                           ; Number of cases is 2, Range of values is 1 to 2
  3140                           ; switch strategies available:
  3141                           ; Name         Instructions Cycles
  3142                           ; simple_byte            7     4 (average)
  3143                           ;	Chosen strategy is simple_byte
  3144  0016F0  0100               	movlb	0	; () banked
  3145  0016F2  5192               	movf	??_I2C_init& (0+255),w,b
  3146  0016F4  0A01               	xorlw	1	; case 1
  3147  0016F6  B4D8               	btfsc	status,2,c
  3148  0016F8  D7DF               	goto	l179
  3149  0016FA  0A03               	xorlw	3	; case 2
  3150  0016FC  A4D8               	btfss	status,2,c
  3151  0016FE  0012               	return	
  3152  001700  D7E4               	goto	l181
  3153  001702                     __end_of_I2C_init:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           intcon	equ	0xFF2
  3160                           indf0	equ	0xFEF
  3161                           postinc0	equ	0xFEE
  3162                           fsr0h	equ	0xFEA
  3163                           fsr0l	equ	0xFE9
  3164                           wreg	equ	0xFE8
  3165                           postdec1	equ	0xFE5
  3166                           fsr1h	equ	0xFE2
  3167                           fsr1l	equ	0xFE1
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _GPIO_init *****************
  3171 ;; Defined at:
  3172 ;;		line 58 in file "system.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg, status,2
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    4
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_HW_init
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text17
  3201  0019BA                     __ptext17:
  3202                           	opt stack 0
  3203  0019BA                     _GPIO_init:
  3204                           	opt stack 25
  3205                           
  3206                           ;system.c: 62: TRISCbits.RC5 = 1;
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;incstack = 0
  3210  0019BA  8A94               	bsf	3988,5,c	;volatile
  3211                           
  3212                           ;system.c: 66: TRISEbits.RE2 = 0;
  3213  0019BC  9496               	bcf	3990,2,c	;volatile
  3214                           
  3215                           ;system.c: 68: TRISBbits.RB0 = 0;
  3216  0019BE  9093               	bcf	3987,0,c	;volatile
  3217                           
  3218                           ;system.c: 74: TRISAbits.RA0 = 1;
  3219  0019C0  8092               	bsf	3986,0,c	;volatile
  3220                           
  3221                           ;system.c: 76: TRISAbits.RA1 = 1;
  3222  0019C2  8292               	bsf	3986,1,c	;volatile
  3223                           
  3224                           ;system.c: 78: TRISAbits.RA2 = 1;
  3225  0019C4  8492               	bsf	3986,2,c	;volatile
  3226                           
  3227                           ;system.c: 80: TRISAbits.RA3 = 1;
  3228  0019C6  8692               	bsf	3986,3,c	;volatile
  3229                           
  3230                           ;system.c: 82: TRISAbits.RA5 = 1;
  3231  0019C8  8A92               	bsf	3986,5,c	;volatile
  3232                           
  3233                           ;system.c: 84: TRISEbits.RE0 = 1;
  3234  0019CA  8096               	bsf	3990,0,c	;volatile
  3235                           
  3236                           ;system.c: 86: ANSELAbits.ANSA0 = 1;
  3237  0019CC  010F               	movlb	15	; () banked
  3238  0019CE  8138               	bsf	56,0,b	;volatile
  3239                           
  3240                           ;system.c: 87: ANSELAbits.ANSA1 = 1;
  3241  0019D0  010F               	movlb	15	; () banked
  3242  0019D2  8338               	bsf	56,1,b	;volatile
  3243                           
  3244                           ;system.c: 88: ANSELAbits.ANSA2 = 1;
  3245  0019D4  010F               	movlb	15	; () banked
  3246  0019D6  8538               	bsf	56,2,b	;volatile
  3247                           
  3248                           ;system.c: 89: ANSELAbits.ANSA3 = 1;
  3249  0019D8  010F               	movlb	15	; () banked
  3250  0019DA  8738               	bsf	56,3,b	;volatile
  3251                           
  3252                           ;system.c: 90: ANSELAbits.ANSA5 = 1;
  3253  0019DC  010F               	movlb	15	; () banked
  3254  0019DE  8B38               	bsf	56,5,b	;volatile
  3255                           
  3256                           ;system.c: 91: ANSELEbits.ANSE0 = 1;
  3257  0019E0  010F               	movlb	15	; () banked
  3258  0019E2  813C               	bsf	60,0,b	;volatile
  3259                           
  3260                           ;system.c: 95: TRISCbits.RC3 = 1;
  3261  0019E4  8694               	bsf	3988,3,c	;volatile
  3262                           
  3263                           ;system.c: 96: TRISCbits.RC4 = 1;
  3264  0019E6  8894               	bsf	3988,4,c	;volatile
  3265                           
  3266                           ; BSR set to: 15
  3267                           ;system.c: 98: ANSELC = 0x00;
  3268  0019E8  0E00               	movlw	0
  3269  0019EA  010F               	movlb	15	; () banked
  3270  0019EC  6F3A               	movwf	58,b	;volatile
  3271                           
  3272                           ; BSR set to: 15
  3273  0019EE  0012               	return	
  3274  0019F0                     __end_of_GPIO_init:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           intcon	equ	0xFF2
  3281                           indf0	equ	0xFEF
  3282                           postinc0	equ	0xFEE
  3283                           fsr0h	equ	0xFEA
  3284                           fsr0l	equ	0xFE9
  3285                           wreg	equ	0xFE8
  3286                           postdec1	equ	0xFE5
  3287                           fsr1h	equ	0xFE2
  3288                           fsr1l	equ	0xFE1
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function _ADC_init *****************
  3292 ;; Defined at:
  3293 ;;		line 163 in file "system.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  channel         2    0[BANK0 ] unsigned int 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;Total ram usage:        2 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    4
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_HW_init
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text18
  3322  001A26                     __ptext18:
  3323                           	opt stack 0
  3324  001A26                     _ADC_init:
  3325                           	opt stack 25
  3326                           
  3327                           ;system.c: 165: ADCON0 = (unsigned char)(channel<<2);
  3328                           
  3329                           ; BSR set to: 15
  3330                           ;incstack = 0
  3331  001A26  0100               	movlb	0	; () banked
  3332  001A28  4590               	rlncf	ADC_init@channel& (0+255),w,b
  3333  001A2A  46E8               	rlncf	wreg,f,c
  3334  001A2C  0BFC               	andlw	252
  3335  001A2E  6EC2               	movwf	4034,c	;volatile
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;system.c: 168: ADCON1 = 0x00;
  3339  001A30  0E00               	movlw	0
  3340  001A32  6EC1               	movwf	4033,c	;volatile
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;system.c: 171: ADCON2bits.ADFM = 1;
  3344  001A34  8EC0               	bsf	4032,7,c	;volatile
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;system.c: 172: ADCON2bits.ACQT0 = 0;
  3348  001A36  96C0               	bcf	4032,3,c	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;system.c: 173: ADCON2bits.ACQT1 = 1;
  3352  001A38  88C0               	bsf	4032,4,c	;volatile
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;system.c: 174: ADCON2bits.ACQT2 = 0;
  3356  001A3A  9AC0               	bcf	4032,5,c	;volatile
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;system.c: 177: ADCON2bits.ADCS0 = 1;
  3360  001A3C  80C0               	bsf	4032,0,c	;volatile
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;system.c: 178: ADCON2bits.ADCS1 = 1;
  3364  001A3E  82C0               	bsf	4032,1,c	;volatile
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;system.c: 179: ADCON2bits.ADCS2 = 1;
  3368  001A40  84C0               	bsf	4032,2,c	;volatile
  3369                           
  3370                           ; BSR set to: 0
  3371  001A42  0012               	return	
  3372  001A44                     __end_of_ADC_init:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           intcon	equ	0xFF2
  3379                           indf0	equ	0xFEF
  3380                           postinc0	equ	0xFEE
  3381                           fsr0h	equ	0xFEA
  3382                           fsr0l	equ	0xFE9
  3383                           wreg	equ	0xFE8
  3384                           postdec1	equ	0xFE5
  3385                           fsr1h	equ	0xFE2
  3386                           fsr1l	equ	0xFE1
  3387                           status	equ	0xFD8
  3388                           
  3389 ;; *************** function _ISRHandler *****************
  3390 ;; Defined at:
  3391 ;;		line 9 in file "interruptHandler.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  i               2   35[COMRAM] unsigned int 
  3396 ;;  c               1   34[COMRAM] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;		None               void
  3399 ;; Registers used:
  3400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;Total ram usage:       18 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    3
  3413 ;; This function calls:
  3414 ;;		_I2C_putByteAtAddress
  3415 ;;		_USART_getChar
  3416 ;; This function is called by:
  3417 ;;		Interrupt level 2
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	intcode
  3422  000008                     __pintcode:
  3423                           	opt stack 0
  3424  000008                     _ISRHandler:
  3425                           	opt stack 24
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;incstack = 0
  3429  000008  CFFA F015          	movff	pclath,??_ISRHandler+1
  3430  00000C  CFFB F016          	movff	pclatu,??_ISRHandler+2
  3431  000010  CFE9 F017          	movff	fsr0l,??_ISRHandler+3
  3432  000014  CFEA F018          	movff	fsr0h,??_ISRHandler+4
  3433  000018  CFE1 F019          	movff	fsr1l,??_ISRHandler+5
  3434  00001C  CFE2 F01A          	movff	fsr1h,??_ISRHandler+6
  3435  000020  CFD9 F01B          	movff	fsr2l,??_ISRHandler+7
  3436  000024  CFDA F01C          	movff	fsr2h,??_ISRHandler+8
  3437  000028  CFF3 F01D          	movff	prodl,??_ISRHandler+9
  3438  00002C  CFF4 F01E          	movff	prodh,??_ISRHandler+10
  3439  000030  CFF6 F01F          	movff	tblptrl,??_ISRHandler+11
  3440  000034  CFF7 F020          	movff	tblptrh,??_ISRHandler+12
  3441  000038  CFF8 F021          	movff	tblptru,??_ISRHandler+13
  3442  00003C  CFF5 F022          	movff	tablat,??_ISRHandler+14
  3443                           
  3444                           ;interruptHandler.c: 11: if(RC1IF)
  3445  000040  AA9E               	btfss	3998,5,c	;volatile
  3446  000042  D04A               	goto	i2l572
  3447                           
  3448                           ;interruptHandler.c: 12: {
  3449                           ;interruptHandler.c: 13: char c = USART_getChar((unsigned int)1);
  3450  000044  0E00               	movlw	0
  3451  000046  6E02               	movwf	USART_getChar@channel+1,c
  3452  000048  0E01               	movlw	1
  3453  00004A  6E01               	movwf	USART_getChar@channel,c
  3454  00004C  ECF8  F00C         	call	_USART_getChar	;wreg free
  3455  000050  6E23               	movwf	ISRHandler@c,c
  3456                           
  3457                           ;interruptHandler.c: 22: currentLine[index] = c;
  3458  000052  0101               	movlb	1	; () banked
  3459  000054  0E00               	movlw	low _currentLine
  3460  000056  2443               	addwf	_index,w,c
  3461  000058  6ED9               	movwf	fsr2l,c
  3462  00005A  0101               	movlb	1	; () banked
  3463  00005C  0E01               	movlw	high _currentLine
  3464  00005E  2044               	addwfc	_index+1,w,c
  3465  000060  6EDA               	movwf	fsr2h,c
  3466  000062  C023  FFDF         	movff	ISRHandler@c,indf2
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;interruptHandler.c: 23: index++;
  3470  000066  4A43               	infsnz	_index,f,c
  3471  000068  2A44               	incf	_index+1,f,c
  3472                           
  3473                           ; BSR set to: 1
  3474                           ;interruptHandler.c: 24: addr++;
  3475  00006A  0E01               	movlw	1
  3476  00006C  0100               	movlb	0	; () banked
  3477  00006E  2760               	addwf	_addr& (0+255),f,b
  3478  000070  0E00               	movlw	0
  3479  000072  0100               	movlb	0	; () banked
  3480  000074  2361               	addwfc	(_addr+1)& (0+255),f,b
  3481  000076  0100               	movlb	0	; () banked
  3482  000078  2362               	addwfc	(_addr+2)& (0+255),f,b
  3483  00007A  0100               	movlb	0	; () banked
  3484  00007C  2363               	addwfc	(_addr+3)& (0+255),f,b
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;interruptHandler.c: 25: for(unsigned int i = 0; i < 0x1000; i++)
  3488  00007E  0E00               	movlw	0
  3489  000080  6E25               	movwf	ISRHandler@i+1,c
  3490  000082  0E00               	movlw	0
  3491  000084  6E24               	movwf	ISRHandler@i,c
  3492  000086                     
  3493                           ; BSR set to: 0
  3494  000086  0E00               	movlw	0
  3495  000088  5C24               	subwf	ISRHandler@i,w,c
  3496  00008A  0E10               	movlw	16
  3497  00008C  5825               	subwfb	ISRHandler@i+1,w,c
  3498  00008E  B0D8               	btfsc	status,0,c
  3499  000090  D023               	goto	i2l572
  3500                           
  3501                           ;interruptHandler.c: 26: {
  3502                           ;interruptHandler.c: 27: I2C_putByteAtAddress((unsigned int)1, (unsigned char)0x53, 0, i
      +                          , currentLine[i]);
  3503                           
  3504                           ; BSR set to: 0
  3505                           
  3506                           ; BSR set to: 0
  3507  000092  0E00               	movlw	0
  3508  000094  6E0B               	movwf	I2C_putByteAtAddress@channel+1,c
  3509  000096  0E01               	movlw	1
  3510  000098  6E0A               	movwf	I2C_putByteAtAddress@channel,c
  3511  00009A  0E53               	movlw	83
  3512  00009C  6E0C               	movwf	I2C_putByteAtAddress@device_address,c
  3513  00009E  0E00               	movlw	0
  3514  0000A0  6E0D               	movwf	I2C_putByteAtAddress@page,c
  3515  0000A2  C024  F00E         	movff	ISRHandler@i,I2C_putByteAtAddress@address
  3516  0000A6  C025  F00F         	movff	ISRHandler@i+1,I2C_putByteAtAddress@address+1
  3517  0000AA  0101               	movlb	1	; () banked
  3518  0000AC  0E00               	movlw	low _currentLine
  3519  0000AE  2424               	addwf	ISRHandler@i,w,c
  3520  0000B0  6ED9               	movwf	fsr2l,c
  3521  0000B2  0101               	movlb	1	; () banked
  3522  0000B4  0E01               	movlw	high _currentLine
  3523  0000B6  2025               	addwfc	ISRHandler@i+1,w,c
  3524  0000B8  6EDA               	movwf	fsr2h,c
  3525  0000BA  50DF               	movf	indf2,w,c
  3526  0000BC  6E10               	movwf	I2C_putByteAtAddress@byte,c
  3527  0000BE  ECA6  F00A         	call	_I2C_putByteAtAddress	;wreg free
  3528                           
  3529                           ;interruptHandler.c: 28: _delay((unsigned long)((5)*(64000000L/4000.0)));
  3530  0000C2  0E68               	movlw	104
  3531  0000C4  6E14               	movwf	??_ISRHandler& (0+255),c
  3532  0000C6  0EE4               	movlw	228
  3533  0000C8                     i2u135_47:
  3534  0000C8  2EE8               	decfsz	wreg,f,c
  3535  0000CA  D7FE               	goto	i2u135_47
  3536  0000CC  2E14               	decfsz	??_ISRHandler& (0+255),f,c
  3537  0000CE  D7FC               	goto	i2u135_47
  3538  0000D0  D000               	nop2	
  3539  0000D2  4A24               	infsnz	ISRHandler@i,f,c
  3540  0000D4  2A25               	incf	ISRHandler@i+1,f,c
  3541  0000D6  D7D7               	goto	L6
  3542  0000D8                     i2l572:
  3543  0000D8  C022  FFF5         	movff	??_ISRHandler+14,tablat
  3544  0000DC  C021  FFF8         	movff	??_ISRHandler+13,tblptru
  3545  0000E0  C020  FFF7         	movff	??_ISRHandler+12,tblptrh
  3546  0000E4  C01F  FFF6         	movff	??_ISRHandler+11,tblptrl
  3547  0000E8  C01E  FFF4         	movff	??_ISRHandler+10,prodh
  3548  0000EC  C01D  FFF3         	movff	??_ISRHandler+9,prodl
  3549  0000F0  C01C  FFDA         	movff	??_ISRHandler+8,fsr2h
  3550  0000F4  C01B  FFD9         	movff	??_ISRHandler+7,fsr2l
  3551  0000F8  C01A  FFE2         	movff	??_ISRHandler+6,fsr1h
  3552  0000FC  C019  FFE1         	movff	??_ISRHandler+5,fsr1l
  3553  000100  C018  FFEA         	movff	??_ISRHandler+4,fsr0h
  3554  000104  C017  FFE9         	movff	??_ISRHandler+3,fsr0l
  3555  000108  C016  FFFB         	movff	??_ISRHandler+2,pclatu
  3556  00010C  C015  FFFA         	movff	??_ISRHandler+1,pclath
  3557  000110  0011               	retfie		f
  3558  000112                     __end_of_ISRHandler:
  3559                           	opt stack 0
  3560                           pclatu	equ	0xFFB
  3561                           pclath	equ	0xFFA
  3562                           tblptru	equ	0xFF8
  3563                           tblptrh	equ	0xFF7
  3564                           tblptrl	equ	0xFF6
  3565                           tablat	equ	0xFF5
  3566                           prodh	equ	0xFF4
  3567                           prodl	equ	0xFF3
  3568                           intcon	equ	0xFF2
  3569                           indf0	equ	0xFEF
  3570                           postinc0	equ	0xFEE
  3571                           fsr0h	equ	0xFEA
  3572                           fsr0l	equ	0xFE9
  3573                           wreg	equ	0xFE8
  3574                           postdec1	equ	0xFE5
  3575                           fsr1h	equ	0xFE2
  3576                           fsr1l	equ	0xFE1
  3577                           indf2	equ	0xFDF
  3578                           fsr2h	equ	0xFDA
  3579                           fsr2l	equ	0xFD9
  3580                           status	equ	0xFD8
  3581                           
  3582 ;; *************** function _USART_getChar *****************
  3583 ;; Defined at:
  3584 ;;		line 113 in file "usart.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  channel         2    0[COMRAM] unsigned int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      unsigned char 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        4 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_ISRHandler
  3608 ;;		_USART_getLine
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text20
  3613  0019F0                     __ptext20:
  3614                           	opt stack 0
  3615  0019F0                     _USART_getChar:
  3616                           	opt stack 26
  3617                           
  3618                           ;usart.c: 115: switch(channel)
  3619                           
  3620                           ;incstack = 0
  3621  0019F0  D00A               	goto	i2l2607
  3622  0019F2                     i2l315:
  3623                           
  3624                           ;usart.c: 118: rx1 = RCREG1;
  3625  0019F2  CFAE F046          	movff	4014,_rx1	;volatile
  3626                           
  3627                           ;usart.c: 119: return rx1;
  3628  0019F6  5046               	movf	_rx1,w,c
  3629  0019F8  0012               	return	
  3630  0019FA                     i2l317:
  3631                           
  3632                           ;usart.c: 121: rx2 = RCREG2;
  3633  0019FA  CF74 F047          	movff	3956,_rx2	;volatile
  3634                           
  3635                           ;usart.c: 122: return rx2;
  3636  0019FE  5047               	movf	_rx2,w,c
  3637  001A00  0012               	return	
  3638  001A02                     i2l2601:
  3639                           
  3640                           ;usart.c: 124: return -1;
  3641  001A02  0EFF               	movlw	255
  3642  001A04  0012               	return	
  3643  001A06                     i2l2607:
  3644  001A06  C001  F003         	movff	USART_getChar@channel,??_USART_getChar
  3645  001A0A  C002  F004         	movff	USART_getChar@channel+1,??_USART_getChar+1
  3646                           
  3647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3648                           ; Switch size 1, requested type "space"
  3649                           ; Number of cases is 1, Range of values is 0 to 0
  3650                           ; switch strategies available:
  3651                           ; Name         Instructions Cycles
  3652                           ; simple_byte            4     3 (average)
  3653                           ;	Chosen strategy is simple_byte
  3654  001A0E  5004               	movf	??_USART_getChar+1,w,c
  3655  001A10  0A00               	xorlw	0	; case 0
  3656  001A12  A4D8               	btfss	status,2,c
  3657  001A14  D7F6               	goto	i2l2601
  3658                           
  3659                           ; Switch size 1, requested type "space"
  3660                           ; Number of cases is 2, Range of values is 1 to 2
  3661                           ; switch strategies available:
  3662                           ; Name         Instructions Cycles
  3663                           ; simple_byte            7     4 (average)
  3664                           ;	Chosen strategy is simple_byte
  3665  001A16  5003               	movf	??_USART_getChar,w,c
  3666  001A18  0A01               	xorlw	1	; case 1
  3667  001A1A  B4D8               	btfsc	status,2,c
  3668  001A1C  D7EA               	goto	i2l315
  3669  001A1E  0A03               	xorlw	3	; case 2
  3670  001A20  B4D8               	btfsc	status,2,c
  3671  001A22  D7EB               	goto	i2l317
  3672  001A24  D7EE               	goto	i2l2601
  3673  001A26                     __end_of_USART_getChar:
  3674                           	opt stack 0
  3675                           pclatu	equ	0xFFB
  3676                           pclath	equ	0xFFA
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           intcon	equ	0xFF2
  3684                           indf0	equ	0xFEF
  3685                           postinc0	equ	0xFEE
  3686                           fsr0h	equ	0xFEA
  3687                           fsr0l	equ	0xFE9
  3688                           wreg	equ	0xFE8
  3689                           postdec1	equ	0xFE5
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _I2C_putByteAtAddress *****************
  3698 ;; Defined at:
  3699 ;;		line 165 in file "i2c.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  channel         2    9[COMRAM] unsigned int 
  3702 ;;  device_addre    1   11[COMRAM] unsigned char 
  3703 ;;  page            1   12[COMRAM] unsigned char 
  3704 ;;  address         2   13[COMRAM] unsigned int 
  3705 ;;  byte            1   15[COMRAM] unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;		None               void
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3717 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;Total ram usage:       10 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    2
  3724 ;; This function calls:
  3725 ;;		i2_I2C_start
  3726 ;;		i2_I2C_stop
  3727 ;;		i2_I2C_writeByte
  3728 ;; This function is called by:
  3729 ;;		_ISRHandler
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text21
  3734  00154C                     __ptext21:
  3735                           	opt stack 0
  3736  00154C                     _I2C_putByteAtAddress:
  3737                           	opt stack 24
  3738                           
  3739                           ;i2c.c: 168: I2C_start(channel);
  3740                           
  3741                           ;incstack = 0
  3742  00154C  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_start@channel
  3743  001550  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_start@channel+1
  3744  001554  EC6F  F00C         	call	i2_I2C_start	;wreg free
  3745                           
  3746                           ;i2c.c: 169: device_address |= (page<<2);
  3747  001558  440D               	rlncf	I2C_putByteAtAddress@page,w,c
  3748  00155A  46E8               	rlncf	wreg,f,c
  3749  00155C  0BFC               	andlw	252
  3750  00155E  120C               	iorwf	I2C_putByteAtAddress@device_address,f,c
  3751                           
  3752                           ;i2c.c: 170: I2C_writeByte(device_address<<1, channel);
  3753  001560  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3754  001564  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3755  001568  500C               	movf	I2C_putByteAtAddress@device_address,w,c
  3756  00156A  240C               	addwf	I2C_putByteAtAddress@device_address,w,c
  3757  00156C  EC81  F00B         	call	i2_I2C_writeByte
  3758                           
  3759                           ;i2c.c: 173: I2C_writeByte((address & 0xFF00)>>8, channel);
  3760  001570  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3761  001574  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3762  001578  C00F  F011         	movff	I2C_putByteAtAddress@address+1,??_I2C_putByteAtAddress
  3763  00157C  C011  F012         	movff	??_I2C_putByteAtAddress,??_I2C_putByteAtAddress+1
  3764  001580  6A13               	clrf	(??_I2C_putByteAtAddress+2)& (0+255),c
  3765  001582  5012               	movf	??_I2C_putByteAtAddress+1,w,c
  3766  001584  EC81  F00B         	call	i2_I2C_writeByte
  3767                           
  3768                           ;i2c.c: 175: I2C_writeByte((unsigned char)(address & 0x00FF), channel);
  3769  001588  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3770  00158C  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3771  001590  500E               	movf	I2C_putByteAtAddress@address,w,c
  3772  001592  EC81  F00B         	call	i2_I2C_writeByte
  3773                           
  3774                           ;i2c.c: 176: I2C_writeByte(byte, channel);
  3775  001596  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_writeByte@channel
  3776  00159A  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_writeByte@channel+1
  3777  00159E  5010               	movf	I2C_putByteAtAddress@byte,w,c
  3778  0015A0  EC81  F00B         	call	i2_I2C_writeByte
  3779                           
  3780                           ;i2c.c: 177: I2C_stop(channel);
  3781  0015A4  C00A  F005         	movff	I2C_putByteAtAddress@channel,i2I2C_stop@channel
  3782  0015A8  C00B  F006         	movff	I2C_putByteAtAddress@channel+1,i2I2C_stop@channel+1
  3783  0015AC  EC52  F00C         	call	i2_I2C_stop	;wreg free
  3784  0015B0  0012               	return	
  3785  0015B2                     __end_of_I2C_putByteAtAddress:
  3786                           	opt stack 0
  3787                           pclatu	equ	0xFFB
  3788                           pclath	equ	0xFFA
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           indf0	equ	0xFEF
  3797                           postinc0	equ	0xFEE
  3798                           fsr0h	equ	0xFEA
  3799                           fsr0l	equ	0xFE9
  3800                           wreg	equ	0xFE8
  3801                           postdec1	equ	0xFE5
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           indf2	equ	0xFDF
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function i2_I2C_writeByte *****************
  3810 ;; Defined at:
  3811 ;;		line 112 in file "i2c.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  b               1    wreg     unsigned char 
  3814 ;;  channel         2    4[COMRAM] unsigned int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  b               1    8[COMRAM] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;Total ram usage:        5 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    1
  3833 ;; This function calls:
  3834 ;;		i2_I2C_wait
  3835 ;; This function is called by:
  3836 ;;		_I2C_putByteAtAddress
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text22
  3841  001702                     __ptext22:
  3842                           	opt stack 0
  3843  001702                     i2_I2C_writeByte:
  3844                           	opt stack 24
  3845                           
  3846                           ;incstack = 0
  3847                           ;i2I2C_writeByte@b stored from wreg
  3848  001702  6E09               	movwf	i2I2C_writeByte@b,c
  3849                           
  3850                           ;i2c.c: 114: switch(channel)
  3851  001704  D014               	goto	i2l2545
  3852  001706                     i2l2537:
  3853                           
  3854                           ;i2c.c: 117: I2C_wait(channel);
  3855  001706  C005  F001         	movff	i2I2C_writeByte@channel,i2I2C_wait@channel
  3856  00170A  C006  F002         	movff	i2I2C_writeByte@channel+1,i2I2C_wait@channel+1
  3857  00170E  ECCC  F00B         	call	i2_I2C_wait	;wreg free
  3858                           
  3859                           ;i2c.c: 118: SSP1BUF = b;
  3860  001712  C009  FFC9         	movff	i2I2C_writeByte@b,4041	;volatile
  3861                           
  3862                           ;i2c.c: 120: break;
  3863  001716  0012               	return	
  3864  001718                     i2l505:
  3865                           
  3866                           ;i2c.c: 122: SSP2BUF = b;
  3867  001718  C009  FF6F         	movff	i2I2C_writeByte@b,3951	;volatile
  3868  00171C                     i2l506:
  3869  00171C  B06D               	btfsc	3949,0,c	;volatile
  3870  00171E  D7FE               	goto	i2l506
  3871                           
  3872                           ;i2c.c: 124: I2C_wait(channel);
  3873  001720  C005  F001         	movff	i2I2C_writeByte@channel,i2I2C_wait@channel
  3874  001724  C006  F002         	movff	i2I2C_writeByte@channel+1,i2I2C_wait@channel+1
  3875  001728  ECCC  F00B         	call	i2_I2C_wait	;wreg free
  3876                           
  3877                           ;i2c.c: 125: break;
  3878  00172C  0012               	return	
  3879  00172E                     i2l2545:
  3880  00172E  C005  F007         	movff	i2I2C_writeByte@channel,??i2_I2C_writeByte
  3881  001732  C006  F008         	movff	i2I2C_writeByte@channel+1,??i2_I2C_writeByte+1
  3882                           
  3883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3884                           ; Switch size 1, requested type "space"
  3885                           ; Number of cases is 1, Range of values is 0 to 0
  3886                           ; switch strategies available:
  3887                           ; Name         Instructions Cycles
  3888                           ; simple_byte            4     3 (average)
  3889                           ;	Chosen strategy is simple_byte
  3890  001736  5008               	movf	??i2_I2C_writeByte+1,w,c
  3891  001738  0A00               	xorlw	0	; case 0
  3892  00173A  A4D8               	btfss	status,2,c
  3893  00173C  0012               	return	
  3894                           
  3895                           ; Switch size 1, requested type "space"
  3896                           ; Number of cases is 2, Range of values is 1 to 2
  3897                           ; switch strategies available:
  3898                           ; Name         Instructions Cycles
  3899                           ; simple_byte            7     4 (average)
  3900                           ;	Chosen strategy is simple_byte
  3901  00173E  5007               	movf	??i2_I2C_writeByte,w,c
  3902  001740  0A01               	xorlw	1	; case 1
  3903  001742  B4D8               	btfsc	status,2,c
  3904  001744  D7E0               	goto	i2l2537
  3905  001746  0A03               	xorlw	3	; case 2
  3906  001748  A4D8               	btfss	status,2,c
  3907  00174A  0012               	return	
  3908  00174C  D7E5               	goto	i2l505
  3909  00174E                     __end_ofi2_I2C_writeByte:
  3910                           	opt stack 0
  3911                           pclatu	equ	0xFFB
  3912                           pclath	equ	0xFFA
  3913                           tblptru	equ	0xFF8
  3914                           tblptrh	equ	0xFF7
  3915                           tblptrl	equ	0xFF6
  3916                           tablat	equ	0xFF5
  3917                           prodh	equ	0xFF4
  3918                           prodl	equ	0xFF3
  3919                           intcon	equ	0xFF2
  3920                           indf0	equ	0xFEF
  3921                           postinc0	equ	0xFEE
  3922                           fsr0h	equ	0xFEA
  3923                           fsr0l	equ	0xFE9
  3924                           wreg	equ	0xFE8
  3925                           postdec1	equ	0xFE5
  3926                           fsr1h	equ	0xFE2
  3927                           fsr1l	equ	0xFE1
  3928                           indf2	equ	0xFDF
  3929                           fsr2h	equ	0xFDA
  3930                           fsr2l	equ	0xFD9
  3931                           status	equ	0xFD8
  3932                           
  3933 ;; *************** function i2_I2C_stop *****************
  3934 ;; Defined at:
  3935 ;;		line 42 in file "i2c.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  channel         2    4[COMRAM] unsigned int 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;		None               void
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;Total ram usage:        4 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    1
  3956 ;; This function calls:
  3957 ;;		i2_I2C_wait
  3958 ;; This function is called by:
  3959 ;;		_I2C_putByteAtAddress
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text23
  3964  0018A4                     __ptext23:
  3965                           	opt stack 0
  3966  0018A4                     i2_I2C_stop:
  3967                           	opt stack 24
  3968                           
  3969                           ;i2c.c: 44: switch(channel)
  3970                           
  3971                           ;incstack = 0
  3972  0018A4  D00C               	goto	i2l2529
  3973  0018A6                     i2l2523:
  3974                           
  3975                           ;i2c.c: 47: I2C_wait(channel);
  3976  0018A6  C005  F001         	movff	i2I2C_stop@channel,i2I2C_wait@channel
  3977  0018AA  C006  F002         	movff	i2I2C_stop@channel+1,i2I2C_wait@channel+1
  3978  0018AE  ECCC  F00B         	call	i2_I2C_wait	;wreg free
  3979                           
  3980                           ;i2c.c: 48: SSP1CON2bits.PEN1 = 1;
  3981  0018B2  84C5               	bsf	4037,2,c	;volatile
  3982                           
  3983                           ;i2c.c: 49: break;
  3984  0018B4  0012               	return	
  3985  0018B6                     i2l464:
  3986                           
  3987                           ;i2c.c: 51: SSP2CON2bits.PEN2 = 1;
  3988  0018B6  846B               	bsf	3947,2,c	;volatile
  3989  0018B8                     i2l465:
  3990  0018B8  A46B               	btfss	3947,2,c	;volatile
  3991  0018BA  0012               	return	
  3992  0018BC  D7FD               	goto	i2l465
  3993  0018BE                     i2l2529:
  3994  0018BE  C005  F007         	movff	i2I2C_stop@channel,??i2_I2C_stop
  3995  0018C2  C006  F008         	movff	i2I2C_stop@channel+1,??i2_I2C_stop+1
  3996                           
  3997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3998                           ; Switch size 1, requested type "space"
  3999                           ; Number of cases is 1, Range of values is 0 to 0
  4000                           ; switch strategies available:
  4001                           ; Name         Instructions Cycles
  4002                           ; simple_byte            4     3 (average)
  4003                           ;	Chosen strategy is simple_byte
  4004  0018C6  5008               	movf	??i2_I2C_stop+1,w,c
  4005  0018C8  0A00               	xorlw	0	; case 0
  4006  0018CA  A4D8               	btfss	status,2,c
  4007  0018CC  0012               	return	
  4008                           
  4009                           ; Switch size 1, requested type "space"
  4010                           ; Number of cases is 2, Range of values is 1 to 2
  4011                           ; switch strategies available:
  4012                           ; Name         Instructions Cycles
  4013                           ; simple_byte            7     4 (average)
  4014                           ;	Chosen strategy is simple_byte
  4015  0018CE  5007               	movf	??i2_I2C_stop,w,c
  4016  0018D0  0A01               	xorlw	1	; case 1
  4017  0018D2  B4D8               	btfsc	status,2,c
  4018  0018D4  D7E8               	goto	i2l2523
  4019  0018D6  0A03               	xorlw	3	; case 2
  4020  0018D8  A4D8               	btfss	status,2,c
  4021  0018DA  0012               	return	
  4022  0018DC  D7EC               	goto	i2l464
  4023  0018DE                     __end_ofi2_I2C_stop:
  4024                           	opt stack 0
  4025                           pclatu	equ	0xFFB
  4026                           pclath	equ	0xFFA
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           prodh	equ	0xFF4
  4032                           prodl	equ	0xFF3
  4033                           intcon	equ	0xFF2
  4034                           indf0	equ	0xFEF
  4035                           postinc0	equ	0xFEE
  4036                           fsr0h	equ	0xFEA
  4037                           fsr0l	equ	0xFE9
  4038                           wreg	equ	0xFE8
  4039                           postdec1	equ	0xFE5
  4040                           fsr1h	equ	0xFE2
  4041                           fsr1l	equ	0xFE1
  4042                           indf2	equ	0xFDF
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function i2_I2C_start *****************
  4048 ;; Defined at:
  4049 ;;		line 8 in file "i2c.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  channel         2    4[COMRAM] unsigned int 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;		None               void
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;Total ram usage:        4 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    1
  4070 ;; This function calls:
  4071 ;;		i2_I2C_wait
  4072 ;; This function is called by:
  4073 ;;		_I2C_putByteAtAddress
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text24
  4078  0018DE                     __ptext24:
  4079                           	opt stack 0
  4080  0018DE                     i2_I2C_start:
  4081                           	opt stack 24
  4082                           
  4083                           ;i2c.c: 10: switch(channel)
  4084                           
  4085                           ;incstack = 0
  4086  0018DE  D00C               	goto	i2l2515
  4087  0018E0                     i2l2509:
  4088                           
  4089                           ;i2c.c: 13: I2C_wait(channel);
  4090  0018E0  C005  F001         	movff	i2I2C_start@channel,i2I2C_wait@channel
  4091  0018E4  C006  F002         	movff	i2I2C_start@channel+1,i2I2C_wait@channel+1
  4092  0018E8  ECCC  F00B         	call	i2_I2C_wait	;wreg free
  4093                           
  4094                           ;i2c.c: 14: SSP1CON2bits.SEN = 1;
  4095  0018EC  80C5               	bsf	4037,0,c	;volatile
  4096                           
  4097                           ;i2c.c: 15: break;
  4098  0018EE  0012               	return	
  4099  0018F0                     i2l442:
  4100                           
  4101                           ;i2c.c: 17: SSP2CON2bits.SEN2 = 1;
  4102  0018F0  806B               	bsf	3947,0,c	;volatile
  4103  0018F2                     i2l443:
  4104  0018F2  A06B               	btfss	3947,0,c	;volatile
  4105  0018F4  0012               	return	
  4106  0018F6  D7FD               	goto	i2l443
  4107  0018F8                     i2l2515:
  4108  0018F8  C005  F007         	movff	i2I2C_start@channel,??i2_I2C_start
  4109  0018FC  C006  F008         	movff	i2I2C_start@channel+1,??i2_I2C_start+1
  4110                           
  4111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4112                           ; Switch size 1, requested type "space"
  4113                           ; Number of cases is 1, Range of values is 0 to 0
  4114                           ; switch strategies available:
  4115                           ; Name         Instructions Cycles
  4116                           ; simple_byte            4     3 (average)
  4117                           ;	Chosen strategy is simple_byte
  4118  001900  5008               	movf	??i2_I2C_start+1,w,c
  4119  001902  0A00               	xorlw	0	; case 0
  4120  001904  A4D8               	btfss	status,2,c
  4121  001906  0012               	return	
  4122                           
  4123                           ; Switch size 1, requested type "space"
  4124                           ; Number of cases is 2, Range of values is 1 to 2
  4125                           ; switch strategies available:
  4126                           ; Name         Instructions Cycles
  4127                           ; simple_byte            7     4 (average)
  4128                           ;	Chosen strategy is simple_byte
  4129  001908  5007               	movf	??i2_I2C_start,w,c
  4130  00190A  0A01               	xorlw	1	; case 1
  4131  00190C  B4D8               	btfsc	status,2,c
  4132  00190E  D7E8               	goto	i2l2509
  4133  001910  0A03               	xorlw	3	; case 2
  4134  001912  A4D8               	btfss	status,2,c
  4135  001914  0012               	return	
  4136  001916  D7EC               	goto	i2l442
  4137  001918                     __end_ofi2_I2C_start:
  4138                           	opt stack 0
  4139                           pclatu	equ	0xFFB
  4140                           pclath	equ	0xFFA
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           prodh	equ	0xFF4
  4146                           prodl	equ	0xFF3
  4147                           intcon	equ	0xFF2
  4148                           indf0	equ	0xFEF
  4149                           postinc0	equ	0xFEE
  4150                           fsr0h	equ	0xFEA
  4151                           fsr0l	equ	0xFE9
  4152                           wreg	equ	0xFE8
  4153                           postdec1	equ	0xFE5
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           indf2	equ	0xFDF
  4157                           fsr2h	equ	0xFDA
  4158                           fsr2l	equ	0xFD9
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function i2_I2C_wait *****************
  4162 ;; Defined at:
  4163 ;;		line 97 in file "i2c.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  channel         2    0[COMRAM] unsigned int 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;		None               void
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:        4 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		i2_I2C_start
  4187 ;;		i2_I2C_stop
  4188 ;;		i2_I2C_writeByte
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text25
  4193  001798                     __ptext25:
  4194                           	opt stack 0
  4195  001798                     i2_I2C_wait:
  4196                           	opt stack 24
  4197                           
  4198                           ;i2c.c: 99: switch(channel)
  4199                           
  4200                           ;incstack = 0
  4201  001798  D012               	goto	i2l2299
  4202  00179A                     i2l2289:
  4203  00179A  CFC5 F003          	movff	4037,??i2_I2C_wait	;volatile
  4204  00179E  0E1F               	movlw	31
  4205  0017A0  1603               	andwf	??i2_I2C_wait,f,c
  4206  0017A2  A4D8               	btfss	status,2,c
  4207  0017A4  D7FA               	goto	i2l2289
  4208  0017A6  A4C7               	btfss	4039,2,c	;volatile
  4209  0017A8  0012               	return	
  4210  0017AA  D7F7               	goto	i2l2289
  4211  0017AC                     i2l2293:
  4212  0017AC  CF6B F003          	movff	3947,??i2_I2C_wait	;volatile
  4213  0017B0  0E1F               	movlw	31
  4214  0017B2  1603               	andwf	??i2_I2C_wait,f,c
  4215  0017B4  A4D8               	btfss	status,2,c
  4216  0017B6  D7FA               	goto	i2l2293
  4217  0017B8  A46D               	btfss	3949,2,c	;volatile
  4218  0017BA  0012               	return	
  4219  0017BC  D7F7               	goto	i2l2293
  4220  0017BE                     i2l2299:
  4221  0017BE  C001  F003         	movff	i2I2C_wait@channel,??i2_I2C_wait
  4222  0017C2  C002  F004         	movff	i2I2C_wait@channel+1,??i2_I2C_wait+1
  4223                           
  4224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4225                           ; Switch size 1, requested type "space"
  4226                           ; Number of cases is 1, Range of values is 0 to 0
  4227                           ; switch strategies available:
  4228                           ; Name         Instructions Cycles
  4229                           ; simple_byte            4     3 (average)
  4230                           ;	Chosen strategy is simple_byte
  4231  0017C6  5004               	movf	??i2_I2C_wait+1,w,c
  4232  0017C8  0A00               	xorlw	0	; case 0
  4233  0017CA  A4D8               	btfss	status,2,c
  4234  0017CC  0012               	return	
  4235                           
  4236                           ; Switch size 1, requested type "space"
  4237                           ; Number of cases is 2, Range of values is 1 to 2
  4238                           ; switch strategies available:
  4239                           ; Name         Instructions Cycles
  4240                           ; simple_byte            7     4 (average)
  4241                           ;	Chosen strategy is simple_byte
  4242  0017CE  5003               	movf	??i2_I2C_wait,w,c
  4243  0017D0  0A01               	xorlw	1	; case 1
  4244  0017D2  B4D8               	btfsc	status,2,c
  4245  0017D4  D7E2               	goto	i2l2289
  4246  0017D6  0A03               	xorlw	3	; case 2
  4247  0017D8  A4D8               	btfss	status,2,c
  4248  0017DA  0012               	return	
  4249  0017DC  D7E7               	goto	i2l2293
  4250  0017DE                     __end_ofi2_I2C_wait:
  4251                           	opt stack 0
  4252                           pclatu	equ	0xFFB
  4253                           pclath	equ	0xFFA
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           prodh	equ	0xFF4
  4259                           prodl	equ	0xFF3
  4260                           intcon	equ	0xFF2
  4261                           indf0	equ	0xFEF
  4262                           postinc0	equ	0xFEE
  4263                           fsr0h	equ	0xFEA
  4264                           fsr0l	equ	0xFE9
  4265                           wreg	equ	0xFE8
  4266                           postdec1	equ	0xFE5
  4267                           fsr1h	equ	0xFE2
  4268                           fsr1l	equ	0xFE1
  4269                           indf2	equ	0xFDF
  4270                           fsr2h	equ	0xFDA
  4271                           fsr2l	equ	0xFD9
  4272                           status	equ	0xFD8
  4273                           pclatu	equ	0xFFB
  4274                           pclath	equ	0xFFA
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           indf0	equ	0xFEF
  4283                           postinc0	equ	0xFEE
  4284                           fsr0h	equ	0xFEA
  4285                           fsr0l	equ	0xFE9
  4286                           wreg	equ	0xFE8
  4287                           postdec1	equ	0xFE5
  4288                           fsr1h	equ	0xFE2
  4289                           fsr1l	equ	0xFE1
  4290                           indf2	equ	0xFDF
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8
  4294                           
  4295                           	psect	rparam
  4296  0000                     pclatu	equ	0xFFB
  4297                           pclath	equ	0xFFA
  4298                           tblptru	equ	0xFF8
  4299                           tblptrh	equ	0xFF7
  4300                           tblptrl	equ	0xFF6
  4301                           tablat	equ	0xFF5
  4302                           prodh	equ	0xFF4
  4303                           prodl	equ	0xFF3
  4304                           intcon	equ	0xFF2
  4305                           indf0	equ	0xFEF
  4306                           postinc0	equ	0xFEE
  4307                           fsr0h	equ	0xFEA
  4308                           fsr0l	equ	0xFE9
  4309                           wreg	equ	0xFE8
  4310                           postdec1	equ	0xFE5
  4311                           fsr1h	equ	0xFE2
  4312                           fsr1l	equ	0xFE1
  4313                           indf2	equ	0xFDF
  4314                           fsr2h	equ	0xFDA
  4315                           fsr2l	equ	0xFD9
  4316                           status	equ	0xFD8


Data Sizes:
    Strings     235
    Constant    10
    Data        1
    BSS         594
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      72
    BANK0           160     26      74
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S2063$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    sp__USART_getLine	PTR unsigned char  size(2) Largest target is 256
		 -> temp(BANK2[256]), 

    USART_putLine@line	PTR const unsigned char  size(2) Largest target is 128
		 -> str(BANK0[32]), STR_10(CODE[28]), STR_9(CODE[28]), STR_8(CODE[29]), 
		 -> STR_7(CODE[50]), UART_putInt@buffer(BANK0[128]), STR_5(CODE[1]), STR_4(CODE[19]), 
		 -> STR_3(CODE[22]), STR_2(CODE[21]), STR_1(CODE[32]), 

    USART_putString@string	PTR const unsigned char  size(2) Largest target is 128
		 -> str(BANK0[32]), STR_10(CODE[28]), STR_9(CODE[28]), STR_8(CODE[29]), 
		 -> STR_7(CODE[50]), UART_putInt@buffer(BANK0[128]), STR_5(CODE[1]), STR_4(CODE[19]), 
		 -> STR_3(CODE[22]), STR_2(CODE[21]), STR_1(CODE[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISRHandler in COMRAM

    _ISRHandler->_I2C_putByteAtAddress
    _I2C_putByteAtAddress->i2_I2C_writeByte
    i2_I2C_writeByte->i2_I2C_wait
    i2_I2C_stop->i2_I2C_wait
    i2_I2C_start->i2_I2C_wait

Critical Paths under _main in BANK0

    _main->_I2C_getByteFromAddress
    _USART_putLine->_USART_putString
    _I2C_getByteFromAddress->_I2C_readByte
    _I2C_writeByte->_I2C_wait
    _I2C_stop->_I2C_wait
    _I2C_start->_I2C_wait
    _I2C_readByte->_I2C_ack
    _I2C_readByte->_I2C_nack
    _I2C_readByte->_I2C_wait
    _HW_init->_USART_init

Critical Paths under _ISRHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISRHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISRHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISRHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   10462
                                             20 BANK0      6     6      0
                            _HW_init
             _I2C_getByteFromAddress
                      _USART_putChar
                      _USART_putLine
 ---------------------------------------------------------------------------------
 (1) _USART_putLine                                        4     0      4    2457
                                              6 BANK0      4     0      4
                      _USART_putChar
                    _USART_putString
 ---------------------------------------------------------------------------------
 (2) _USART_putString                                      6     2      4     315
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_putChar                                        5     3      2     324
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _I2C_getByteFromAddress                              10     4      6    6971
                                             10 BANK0     10     4      6
                       _I2C_readByte
                          _I2C_start
                           _I2C_stop
                      _I2C_writeByte
 ---------------------------------------------------------------------------------
 (2) _I2C_writeByte                                        5     3      2    2048
                                              4 BANK0      5     3      2
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             4     2      2    1136
                                              4 BANK0      4     2      2
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            4     2      2    1290
                                              4 BANK0      4     2      2
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_readByte                                         6     3      3    1749
                                              4 BANK0      6     3      3
                            _I2C_ack
                           _I2C_nack
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_wait                                             4     2      2     801
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_nack                                             4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_ack                                              4     2      2     185
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _HW_init                                              0     0      0     509
                           _ADC_init
                          _GPIO_init
                           _I2C_init
                           _IRQ_init
                           _OSC_init
                         _USART_init
 ---------------------------------------------------------------------------------
 (2) _USART_init                                           8     4      4     293
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IRQ_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRHandler                                          18    18      0    1558
                                             19 COMRAM    18    18      0
               _I2C_putByteAtAddress
                      _USART_getChar
 ---------------------------------------------------------------------------------
 (5) _USART_getChar                                        4     2      2     150
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2C_putByteAtAddress                                10     3      7    1295
                                              9 COMRAM    10     3      7
                        i2_I2C_start
                         i2_I2C_stop
                    i2_I2C_writeByte
 ---------------------------------------------------------------------------------
 (6) i2_I2C_writeByte                                      5     3      2     340
                                              4 COMRAM     5     3      2
                         i2_I2C_wait
 ---------------------------------------------------------------------------------
 (6) i2_I2C_stop                                           4     2      2     196
                                              4 COMRAM     4     2      2
                         i2_I2C_wait
 ---------------------------------------------------------------------------------
 (6) i2_I2C_start                                          4     2      2     196
                                              4 COMRAM     4     2      2
                         i2_I2C_wait
 ---------------------------------------------------------------------------------
 (7) i2_I2C_wait                                           4     2      2     126
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HW_init
     _ADC_init
     _GPIO_init
     _I2C_init
     _IRQ_init
     _OSC_init
     _USART_init
   _I2C_getByteFromAddress
     _I2C_readByte
       _I2C_ack
       _I2C_nack
       _I2C_wait
     _I2C_start
       _I2C_wait
     _I2C_stop
       _I2C_wait
     _I2C_writeByte
       _I2C_wait
   _USART_putChar
   _USART_putLine
     _USART_putChar
     _USART_putString

 _ISRHandler (ROOT)
   _I2C_putByteAtAddress
     i2_I2C_start
       i2_I2C_wait
     i2_I2C_stop
       i2_I2C_wait
     i2_I2C_writeByte
       i2_I2C_wait
   _USART_getChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      4A       5       46.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      48       1       75.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     292      12        0.0%
DATA                 0      0     292       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jan 26 16:03:14 2016

                    i2I2C_writeByte@b 0009                                     _a 0041  
                                   _e 0029                                     _u 003B  
                                   _y 003E                                    _e1 002C  
                                  _e2 002F                                    _k1 0032  
                                  _k2 0035                                    _k3 0038  
                                  _kd 0064                                    _ki 0067  
                                  _kp 006A                         _USART_putChar 17DE  
                       _USART_putLine 1918                          __CFG_CP0$OFF 000000  
                        __CFG_CP1$OFF 000000                    __size_of_I2C_start 0042  
                        __CFG_CP2$OFF 000000                          __CFG_CP3$OFF 000000  
                                 l300 1380                                   l171 12BE  
                                 l251 17EE                                   l181 16CA  
                                 l173 12DE                                   l246 17E4  
                                 l505 1626                                   l442 1874  
                                 l506 162A                                   l179 16B8  
                                 l443 1876                                   l292 1320  
                                 l518 145C                                   l464 1832  
                                 l473 1986                                   l481 1950  
                                 l465 1834                                   l475 198C  
                                 l483 1956                                   _GIE 007F97  
                        __CFG_CPB$OFF 000000                                   _PR2 000FBB  
                                 _PR4 000F52                          __CFG_CPD$OFF 000000  
                                 _rx1 0046                                   _rx2 0047  
                                 _str 0070                       __end_of_I2C_ack 19BA  
                                 wreg 000FE8                            _TXSTA1bits 000FAC  
                          _TXSTA2bits 000F72                           ?i2_I2C_wait 0001  
                         ?i2_I2C_stop 0005                          __CFG_LVP$OFF 000000  
                                l3401 1238                                  l3321 167A  
                                l3403 1242                                  l3411 1264  
                                l3405 124C                                  l3317 1666  
                                l4311 129A                                  l3407 1256  
                                l3415 12F6                                  l3327 168E  
                                l4313 12A6                                  l3337 1992  
                                l4315 12B2                                  l3515 183A  
                                l3461 16DA                                  l4309 128E  
                                l3349 195C                                  l3509 1822  
                                l3525 1614                                  l3533 163C  
                                l3365 17F8                                  l3543 140A  
                                l3553 144A                                  l3481 13B2  
                                l3641 1144                                  l3555 1456  
                                l3475 1352                                  l3651 117C  
                                l3573 1484                                  l3493 1864  
                                l3485 13E0                                  l3567 1480  
                                l3499 187C                                  l3667 120A  
                                STR_1 103D                                  STR_2 10C8  
                                STR_3 10B2                                  STR_4 10DD  
                                STR_6 10F3                                  STR_7 100B  
                                STR_8 105D                                  STR_9 1096  
                                u1110 134A                                  u1120 1378  
                                u1117 1340                                  u1150 13AA  
                                u1127 136E                                  u1160 13D8  
                                u1157 13A0                                  u1167 13CE  
                                u1327 1104                                  u1337 116A  
                                u1347 11F8                                  _IPEN 007E87  
                                _PEIE 007F96                                  _RCIE 007CED  
                                _addr 0060                                  _data 0048  
                                _main 10F8                                  _temp 0200  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                indf0 000FEF                                  fsr0l 000FE9  
                                fsr2h 000FDA                                  fsr1l 000FE1  
                                indf2 000FDF                                  fsr2l 000FD9  
                       __CFG_BORV$190 000000                                  pclat 000FFA  
                     __end_of_HW_init 1798                      __end_of_I2C_nack 1984  
                    __end_of_I2C_init 1702                                  prodh 000FF4  
                                prodl 000FF3                      __end_of_I2C_wait 16B6  
                                start 0112                        ?_USART_getChar 0001  
                    __end_of_I2C_stop 1862                      __end_of_ADC_init 1A44  
                       __CFG_IESO$OFF 000000              I2C_putByteAtAddress@page 000D  
            I2C_putByteAtAddress@byte 0010                    __size_of_GPIO_init 0036  
                        ?i2_I2C_start 0005                           ?_ISRHandler 0001  
                     _USART_putString 131E                      ?i2_I2C_writeByte 0005  
                      ?_USART_putChar 0090                        ?_USART_putLine 0096  
                        _BAUDCON1bits 000FB8                          _BAUDCON2bits 000F70  
                               ?_main 0001                                 _EEADR 000FA9  
                               STR_10 107A                                 STR_11 10F0  
                               _RC1IE 007CED                                 _RC1IF 007CF5  
                               _RC2IF 007D25                                 _T4CON 000F51  
                               i2l315 19F2                         __CFG_WDTEN$ON 000000  
                               i2l317 19FA                                 i2l505 1718  
                               i2l442 18F0                                 i2l506 171C  
                               i2l443 18F2                                 i2l464 18B6  
                               i2l465 18B8                                 i2l572 00D8  
                               _PLLEN 007CDE                                 _TX1IF 007CF4  
                               _TX2IF 007D24                                 _TRMT1 007D61  
                               _TRMT2 007B91                         __CFG_WRT0$OFF 000000  
                       __CFG_WRT1$OFF 000000                         __CFG_WRT2$OFF 000000  
                       __CFG_WRT3$OFF 000000                        __CFG_EBTR0$OFF 000000  
                      __CFG_FCMEN$OFF 000000                        __CFG_EBTR1$OFF 000000  
                      __CFG_EBTR2$OFF 000000                      __end_of_IRQ_init 1A58  
                      __CFG_EBTR3$OFF 000000                         __CFG_WRTB$OFF 000000  
                       __CFG_WRTC$OFF 000000                         __CFG_WRTD$OFF 000000  
                      __CFG_EBTRB$OFF 000000                       __end_of_dpowers 100B  
                    __end_of_OSC_init 1A4E                                 _index 0043  
                  __CFG_MCLRE$EXTMCLR 000000                                 main@i 00A6  
                               main@t 00A5                                 tablat 000FF5  
                               status 000FD8                 __size_of_I2C_readByte 00A4  
                   __end_of_I2C_start 18A4                        __CFG_HFOFST$ON 000000  
                      __CFG_PBADEN$ON 000000                           ?_USART_init 0090  
                     __initialization 15B2                   __size_ofi2_I2C_wait 0046  
                        __end_of_main 1228                   __size_ofi2_I2C_stop 003A  
        __end_of_I2C_putByteAtAddress 15B2         I2C_getByteFromAddress@address 009E  
             I2C_getByteFromAddress@b 00A3         I2C_getByteFromAddress@channel 009A  
                           ??_I2C_ack 0092                                ??_main 00A4  
                       __activetblptr 000002                        I2C_writeByte@b 0098  
                   __end_of_GPIO_init 19F0                          _I2C_readByte 1408  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                 __size_of_ISRHandler 010A                                _EEADRH 000FAA  
                              _EEDATA 000FA8                                _CCPR1L 000FBE  
                              _EECON2 000FA7                                _ANSELC 000F3A  
                           ??_HW_init 0098                                i2l2601 1A02  
                              i2l2515 18F8                                i2l2523 18A6  
                              i2l2293 17AC                                i2l2509 18E0  
                              i2l2607 1A06                                i2l2289 179A  
                              i2l2529 18BE                                i2l2537 1706  
                              i2l2545 172E                                i2l2299 17BE  
                              _RCREG1 000FAE                                _RCREG2 000F74  
                              _SPBRG1 000FAF                                _SPBRG2 000F75  
                              _TX1REG 000FAD                                _TX2REG 000F73  
                     ??_USART_getChar 0003                                _TXREG1 000FAD  
                              _TXREG2 000F73               __end_of_USART_putString 1408  
              i2I2C_writeByte@channel 0005                        __CFG_XINST$OFF 000000  
                     ??_USART_putChar 0092                       ??_USART_putLine 009A  
                      __CFG_STVREN$ON 000000                       I2C_stop@channel 0094  
                              clear_0 15BA                                clear_1 15CE  
                              clear_2 15E0                                clear_3 15EC  
                        __pdataCOMRAM 0048                             ?_I2C_nack 0090  
                        __mediumconst 0000                             ?_I2C_init 0090  
                           ?_I2C_wait 0090                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                           ?_I2C_stop 0094                             ?_ADC_init 0090  
                 __size_of_USART_init 00F6                            __accesstop 0060  
             __end_of__initialization 1604                  USART_putChar@channel 0090  
                      __pcstackCOMRAM 0001                             ?_IRQ_init 0001  
                __size_ofi2_I2C_start 003A                       ADC_init@channel 0090  
                           ?_OSC_init 0001                            ??_I2C_nack 0092  
                          ??_I2C_init 0092                          ??i2_I2C_wait 0003  
                          ??_I2C_wait 0092                          ??i2_I2C_stop 0007  
                          ??_I2C_stop 0096                            ??_ADC_init 0092  
                         ISRHandler@c 0023                           ISRHandler@i 0024  
              __size_of_I2C_writeByte 0056                  _I2C_putByteAtAddress 154C  
                          __pbssBANK0 0060                            __pbssBANK1 0100  
                          __pbssBANK2 0200                       __CFG_PLLCFG$OFF 000000  
          I2C_getByteFromAddress@page 009D                      ?_USART_putString 0090  
                  __CFG_CCP2MX$PORTC1 000000                          ??_ISRHandler 0014  
                          ??_IRQ_init 0090                    __end_ofi2_I2C_wait 17DE  
                  __CFG_CCP3MX$PORTB5 000000                    __end_ofi2_I2C_stop 18DE  
                    I2C_start@channel 0094                               _CCP1CON 000FBD  
                          ??_OSC_init 0090                               _I2C_ack 1984  
                             _SSP1ADD 000FC8                               _SSP2ADD 000F6E  
                             _SSP1BUF 000FC9                               _SSP2BUF 000F6F  
               ?_I2C_putByteAtAddress 000A                    __end_of_ISRHandler 0112  
                             _HW_init 174E                 USART_putString@string 0090  
                             _i2cread 0045                       __CFG_PWRTEN$OFF 000000  
                             __Hparam 0000                               __Lparam 0000  
                           _I2C_start 1862                          ??_USART_init 0094  
                       _I2C_writeByte 160E                          __psmallconst 1000  
            ??_I2C_getByteFromAddress 00A0                               __pcinit 15B2  
                             __ramtop 1000                               _delta_u 0026  
                             __ptext0 10F8                               __ptext1 1918  
                             __ptext2 131E                               __ptext3 17DE  
                             __ptext4 14AC                               __ptext5 160E  
                             __ptext6 1820                               __ptext7 1862  
                             __ptext8 1408                               __ptext9 1664  
                             _dpowers 1001                             _T2CONbits 000FBA  
            __size_ofi2_I2C_writeByte 004C                    __end_of_USART_init 131E  
                end_of_initialization 1604                             _GPIO_init 19BA  
                       __Lmediumconst 0000                     USART_init@channel 0090  
                          ?_I2C_start 0094                        ?_I2C_writeByte 0094  
                             postdec1 000FE5                               postinc0 000FEE  
                    __CFG_FOSC$INTIO7 000000                             _TRISAbits 000F92  
                           _TRISBbits 000F93                             _TRISCbits 000F94  
                           _TRISEbits 000F96                ??_I2C_putByteAtAddress 0011  
                 I2C_readByte@channel 0094                     __size_of_I2C_nack 0036  
                   __size_of_I2C_init 004C                     __size_of_I2C_wait 0052  
                   __size_of_I2C_stop 0042                     __size_of_ADC_init 001E  
                          ?_GPIO_init 0001                 __end_of_USART_getChar 1A26  
               __end_of_USART_putChar 1820                 __end_of_USART_putLine 194E  
     __size_of_I2C_getByteFromAddress 00A0                         __pidataCOMRAM 1A58  
                   __size_of_IRQ_init 000A                     __size_of_OSC_init 000A  
                 start_initialization 15B2                      I2C_readByte@temp 0099  
                      I2C_ack@channel 0090                     ??i2_I2C_writeByte 0007  
                     ??_I2C_writeByte 0096                       I2C_nack@channel 0090  
                I2C_writeByte@channel 0094                        USART_putChar@c 0094  
                       ??i2_I2C_start 0007                           ??_I2C_start 0096  
                            ?_I2C_ack 0090                           __pbssCOMRAM 0026  
                USART_putLine@channel 0098                         __pcstackBANK0 0090  
                 __end_of__stringdata 10F6                              ?_HW_init 0001  
              _I2C_getByteFromAddress 14AC                           ??_GPIO_init 0090  
                USART_getChar@channel 0001                     i2I2C_wait@channel 0001  
                           __pintcode 0008              __size_of_USART_putString 00EA  
                USART_init@baudConfig 0096                   __end_ofi2_I2C_start 1918  
                    __CFG_PRICLKEN$ON 000000                           __smallconst 1000  
                  i2I2C_start@channel 0005                              _I2C_nack 194E  
                            _I2C_init 16B6                              _I2C_wait 1664  
                            _I2C_stop 1820                              _ADC_init 1A26  
                       ?_I2C_readByte 0094                              _PIE1bits 000F9D  
                            _PIE3bits 000FA3                              i2u135_47 00C8  
                     I2C_init@channel 0090                      __CFG_WDTPS$32768 000000  
              USART_putString@channel 0092                              _IRQ_init 1A4E  
                            _SSP1CON1 000FC6                              _SSP1CON2 000FC5  
                            _SSP2CON1 000F6C                              _SSP2CON2 000F6B  
                            _SSP1STAT 000FC7                              _SSP2STAT 000F6D  
                            _OSC_init 1A44                      __size_of_I2C_ack 0036  
                         __stringdata 100B                            _ADCON2bits 000FC0  
                      ??_I2C_readByte 0097  I2C_getByteFromAddress@device_address 009C  
                     I2C_readByte@ack 0096                      __size_of_HW_init 004A  
                          _EECON1bits 000FA6                              __Hrparam 0000  
                            __Lrparam 0000                           i2_I2C_start 18DE  
                  __CFG_BOREN$SBORDIS 000000                     __CFG_P2BMX$PORTD2 000000  
                          _ANSELAbits 000F38                            _ANSELCbits 000F3A  
                          _ANSELEbits 000F3C                       i2_I2C_writeByte 1702  
                         _currentLine 0100                     ??_USART_putString 0094  
                   USART_putLine@line 0096                              __ptext10 194E  
                            __ptext11 1984                              __ptext20 19F0  
                            __ptext12 174E                              __ptext21 154C  
                            __ptext13 1228                              __ptext22 1702  
                            __ptext14 1A44                              __ptext23 18A4  
                            __ptext15 1A4E                              __ptext24 18DE  
                            __ptext16 16B6                              __ptext25 1798  
                            __ptext17 19BA                              __ptext18 1A26  
                        _SSP1CON2bits 000FC5                          _SSP2CON2bits 000F6B  
       __size_of_I2C_putByteAtAddress 0066    I2C_putByteAtAddress@device_address 000C  
         I2C_putByteAtAddress@address 000E                         __size_of_main 0130  
         I2C_putByteAtAddress@channel 000A                              _setpoint 006D  
                            main@i_65 00A8                          _SSP2STATbits 000F6D  
                   i2I2C_stop@channel 0005                            _INTCONbits 000FF2  
              __size_of_USART_getChar 0036                            i2_I2C_wait 1798  
                          i2_I2C_stop 18A4               ?_I2C_getByteFromAddress 009A  
                            intlevel2 0000                __size_of_USART_putChar 0042  
              __size_of_USART_putLine 0036                          _VREFCON0bits 000F42  
                          _RCSTA1bits 000FAB                            _RCSTA2bits 000F71  
                  USART_init@baudrate 0092                            _OSCCONbits 000FD3  
                __end_of_I2C_readByte 14AC                            _ISRHandler 0008  
               __end_of_I2C_writeByte 1664               __end_ofi2_I2C_writeByte 174E  
      __end_of_I2C_getByteFromAddress 154C                     __CFG_T3CMX$PORTC0 000000  
                     I2C_wait@channel 0090                         _USART_getChar 19F0  
                          _USART_init 1228  
